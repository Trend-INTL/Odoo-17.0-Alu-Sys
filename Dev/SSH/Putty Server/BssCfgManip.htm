<!DOCTYPE html>
<html>
<head>
	<title>BssCfg915 Reference</title>
	<meta charset="UTF-8">
	<style>
		body {
			font-family: "Trebuchet MS", Arial, sans-serif;
			font-size: 10pt;
			color: #333;
		}

		#header {
			text-align: center;
			padding: 5pt;
		}

			#header h1 {
				margin-top: 12pt;
				margin-bottom: 12pt;
				font-size: 16pt;
				text-align: center;
				color: #666;
			}

		#nav {
			border: 1px solid #666;
			background-color: #eef;
			margin: 0pt;
			max-width: 23%;
			float: left;
			padding-right: 2%;
			overflow: auto;
		}

			#nav h1 {
				margin-top: 6pt;
				margin-bottom: 6pt;
				margin-left: 6pt;
				font-size: 14pt;
				color: #666;
			}

			#nav a {
				margin-top: 0pt;
				margin-bottom: 3pt;
				margin-left: 6pt;
			}

		#section {
			max-width: 72%;
			margin-left: 1%;
			margin-right: 0pt;
			float: left;
		}

			#section h1 {
				margin-top: 0pt;
				margin-bottom: 6pt;
				font-size: 14pt;
				text-align: left;
				color: #369;
			}

			#section h2 {
				margin-top: 12pt;
				font-size: 12pt;
				color: #369;
			}

			#section h3 {
				margin-top: 6pt;
				margin-bottom: 1pt;
				padding-left: 24pt;
				font-size: 10pt;
			}

			#section h4 {
				margin-top: 3pt;
				margin-bottom: 1pt;
				padding-left: 24pt;
				font-size: 10pt;
			}

			#section ul {
				list-style-type: none;
				padding-left: 24pt;
			}

			#section ul.flags {
				padding-left: 0;
			}

			#section p {
				margin: 0;
				margin-top: 6pt;
				padding-left: 24pt;
			}

			#section p.defaultValue {
				padding-left: 12pt;
			}

			#section p.name, p.flag {
				margin-top: 18pt;
				padding-left: 0;
			}

			#section p.outputTitle {
				margin-bottom: 6pt;
				font-size: 9pt;
			}

			#section p.example, p.output {
				font-family: Courier New, Courier, monospace;
				font-size: 9pt;
				text-decoration: none;
				text-align: left;
				color: #666666;
			}

		#footer {
			padding-top: 36pt;
			font-style: italic;
			font-size: 9pt;
			text-align: center;
			clear: both;
		}
	</style>
</head>
<body>

	<div id="header">
		<h1>BssCfg915 Reference</h1>
		<noscript>Your browser does not support JavaScript.</noscript>
	</div>

	<div id="nav">
	</div>

	<div id="section">
	</div>

	<div id="footer">
		This content is Copyright &#169; 2001-2024 by Bitvise Limited. All rights reserved.<br>Unauthorized copying or distribution of any part or whole is prohibited.
	</div>

	<script>

		// Global variables

		var g_currInderfaceName = "";

		var g_propertiesTitle = "Properties";
		var g_methodsTitle = "Methods";
		var g_enumsTitle = "Enumerations used by the interface";
		var g_flagsTitle = "Flags";
		var g_parametersTitle = "Parameters";
		var g_exampleTitle = "Example";
		var g_examplesTitle = "Examples";
		var g_outputTitle = "Output:";
		var g_valuesTitle = "Restricted values";
		var g_interfaces =
		[
			{
			name:"IAcceptInstructions915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"allowConnect &#x2192; BOOL {get} {set}",
				defaultValue:"Default value varies depending on context.",
				description:"Whether or not to allow connection attempts matching this rule. If disabled, a connection attempt matching this rule will be rejected, otherwise it will be accepted."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAcceptInstructions915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IAccessControl915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"passwordMethod &#x2192; <a href=\"#IAccessControl915\" onclick=\"ScrollToEnum();return false;\">GlobalAuthMethod915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.GlobalAuthMethod.permit",
				description:"This setting controls server-wide availability of the \"password\" authentication method. See the separate setting, Password over \"keyboard-interactive\", to control availability of password authentication using password authentication over \"keyboard-interactive\". To disable password authentication of any type, both settings must be disabled.\n\nTo the extent these settings disable a method, they have server-wide effect and override any account or group settings entries.\n\nIf either setting is set to a value other than Disabled globally, SSH clients might display a \"Password:\" prompt even when the user means to log into an account whose settings do not permit password authentication.\n\nIf this setting is set to Disabled globally, it will not be possible to log into the SSH Server using the \"password\" authentication method.\n\nIf set to Permit for Windows accounts only, the \"password\" authentication method will be available for any Windows account whose group or account settings allow or require password authentication. It will not be available for virtual accounts, regardless of their settings.\n\nIf set to Permit for virtual accounts only, the \"password\" authentication method will be available for any virtual account whose group or account settings allow or require password authentication. It will not be available for Windows accounts, regardless of their settings.\n\nIf set to Permit for any account type, the \"password\" authentication method will be available for any Windows or virtual account whose group or account settings allow or require password authentication."
				},
				{
				name:"kbdiPasswordMethod &#x2192; <a href=\"#IAccessControl915\" onclick=\"ScrollToEnum();return false;\">GlobalAuthMethod915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.GlobalAuthMethod.permit",
				description:"This setting controls server-wide availability of password authentication over \"keyboard-interactive\". See the separate setting, \"password\" authentication method, to control availability of password authentication using the \"password\" authentication method. To disable password authentication of any type, both settings must be disabled.\n\nTo the extent these settings disable a method, they have server-wide effect and override any account or group settings entries.\n\nIf either setting is set to a value other than Disabled globally, SSH clients might display a \"Password:\" prompt even when the user means to log into an account whose settings do not permit password authentication.\n\nIf this setting is set to Disabled globally, it will not be possible to log into the SSH Server using password authentication over \"keyboard-interactive\".\n\nIf set to Permit for Windows accounts only, password authentication over \"keyboard-interactive\" will be available for any Windows account whose group or account settings allow or require password authentication. It will not be available for virtual accounts, regardless of their settings.\n\nIf set to Permit for virtual accounts only, password authentication over \"keyboard-interactive\" will be available for any virtual account whose group or account settings allow or require password authentication. It will not be available for Windows accounts, regardless of their settings.\n\nIf set to Permit for any account type, password authentication over \"keyboard-interactive\" will be available for any Windows or virtual account whose group or account settings allow or require password authentication."
				},
				{
				name:"totp &#x2192; <a href=\"#IGlobalKbdiTotp915\" onclick=\"SetInterface('IGlobalKbdiTotp915', false);return false;\">IGlobalKbdiTotp915</a> {get}",
				description:"Configure global default settings for time-based one-time password authentication. The default values of these settings are meant to be compatible with most authenticators and should not be changed in most situations. To set up TOTP authentication for a user, configure a secret key in their account settings entry and provide it to the user."
				},
				{
				name:"pwCacheAutoSave &#x2192; <a href=\"#IAccessControl915\" onclick=\"ScrollToEnum();return false;\">PwCacheAutoSave915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.PwCacheAutoSave.never",
				description:"Whether the SSH Server should save passwords in its password cache. In all cases, if enabled, a password will be cached only when the user sends a password to authenticate with, and the SSH Server is able to successfully use that password to log the user into Windows.\n\nFor users that log in using public key authentication, having a saved password available enables the SSH Server to perform a logon with implicit access to Windows network resources, rather than a password-less logon which lacks network access.\n\nPossible settings are: never; only for accounts that actually use public key authentication; or for all accounts, even those that don't use public key authentication."
				},
				{
				name:"hidePwCacheUserNames &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If disabled, the SSH Server will auto-save new password cache entries in such a way that the user names for which password cache entries exist can be enumerated in the Bitvise SSH Server Control Panel. This makes it easier to manage the password cache and troubleshoot password cache-related issues. If enabled, the SSH Server will auto-save new password cache entries in such a way that the existence of a password cache entry for a user name can only be discovered knowing the full user name, programmatically."
				},
				{
				name:"clearPwFromCacheOnFailure &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"A user may authenticate correctly using public key authentication or a virtual account, but the login attempt may still fail; either because the password set for the Windows account in the SSH Server's password cache is incorrect, or due to a different problem, e.g. because no domain controller is available. In this situation, and depending on the server platform and its security settings, Windows doesn't tell the SSH Server the exact reason for failure. When this happens, the SSH Server can clear the password from the password cache. If it does so, the password will need to be reentered, even if the reason for login failure was not a bad password. On the other hand, if the password is not cleared, and is bad, this may lead to the account being locked out due to persistent authentication failures."
				},
				{
				name:"kerberos5Auth &#x2192; <a href=\"#IAccessControl915\" onclick=\"ScrollToEnum();return false;\">GlobalGssApiAuth915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.GlobalGssApiAuth.allowed",
				description:"Bitvise SSH Server supports Kerberos user authentication via SSPI/GSSAPI. This setting controls whether to offer Kerberos authentication, and for which clients.\n\nIf the server is configured so that no Windows accounts can log in, this authentication method will not be accepted, nor advertised."
				},
				{
				name:"ntlmAuth &#x2192; <a href=\"#IAccessControl915\" onclick=\"ScrollToEnum();return false;\">GlobalGssApiAuth915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.GlobalGssApiAuth.allowed",
				description:"Bitvise SSH Server supports NTLM user authentication via SSPI/GSSAPI. This setting controls whether to offer NTLM authentication, and for which clients.\n\nIf the server is configured so that no Windows accounts can log in, this authentication method will not be accepted, nor advertised."
				},
				{
				name:"authKeysSync &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the SSH Server will automatically synchronize a Windows account's public keys with the user's authorized_keys file. When a Windows account logs off, the SSH Server will check for the existence of a file named authorized_keys in a subdirectory named .ssh under the user's Windows home directory (as in the %HOME% environment variable). If such a file exists, the SSH Server will load any public keys it finds in that file, and configure them for the user in the server's settings.\n\nTo let the SSH Server find the user's Windows home directory, the user's Windows profile must be loaded. For file transfer connections, the Windows profile is not loaded by default. This can be changed in a Windows account or group settings entry under File transfer > Load profile for file transfer.\n\nVirtual accounts cannot make use of this feature. Windows accounts require access to the .ssh subdirectory of their Windows home directory to modify their authorized_keys file."
				},
				{
				name:"maxAuthKeys &#x2192; ULONG {get} {set}",
				defaultValue:"default: 20",
				description:"The maximum number of public keys with which a Windows or virtual account can be associated. This limit is enforced when users are adding keys to their accounts using the SSH Public Key Subsystem or via synchronization with authorized_keys. Administrators can still configure a higher number of keys."
				},
				{
				name:"allowWinAccountPasswordChange &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the SSH Server will allow Windows account users to change their passwords by connecting with clients that support password change through the SSH authentication process, unless disabled in their account settings entry.\n\nIf disabled, the SSH Server will prevent users logged into Windows accounts from changing their password, unless enabled in account settings entry."
				},
				{
				name:"allowVirtAccountPasswordChange &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the SSH Server will allow virtual account users to change their passwords using SSH clients that support password change through the SSH authentication process, unless disabled in their account settings entry.\n\nIf disabled, the SSH Server will prevent virtual users from changing their passwords, unless enabled in their account settings entry."
				},
				{
				name:"virtAccountsPwdPolicy &#x2192; <a href=\"#IVirtAccountsPwdPolicy915\" onclick=\"SetInterface('IVirtAccountsPwdPolicy915', false);return false;\">IVirtAccountsPwdPolicy915</a> {get}",
				description:"Password complexity requirements for virtual accounts, such as minimum length, and minimum counts for different types of characters that make up the password."
				},
				{
				name:"elevateByDef &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"When a user connects to the SSH Server with a Windows administrator account; or with a virtual account that uses an administrative account as its security context; and if the user's logon type is Interactive; then the SSH Server can create the session either elevated (with Windows permissions allowing for administrative access) or non-elevated (with Windows permissions reduced to a regular user role).\n\nWhen a choice is available, a connecting client can use an SSH protocol extension to indicate whether the user desires an elevated session. For clients that do not support this extension, and users who do not express a preference, this setting controls whether the SSH Server should elevate or de-elevate the session.\n\nIf this setting is disabled, then clients which do not express an elevation preference may not be able to connect with full administrative rights, even if they connect with an account that is a Windows administrator.\n\nIn a login using password or public key authentication, a choice between an elevated and non-elevated session will be available only if the logon type is Interactive. If the logon type is Network, Windows will elevate the session with no choice to de-elevate.\n\nIn a login using GSSAPI authentication (Kerberos or NTLM), if the connection is between computers, Windows will elevate the session with no choice to de-elevate. However, if the connection is from a client on the same computer, the elevation state of the SSH session will correspond to the elevation state of the client's Windows login."
				},
				{
				name:"defMaxCachedLookupAge &#x2192; ULONG {get} {set}",
				defaultValue:"default: 30",
				description:"When resolving an IP address to a DNS name, or a DNS name to an IP address, the SSH Server can use cached results to avoid bottlenecks in rule processing.\n\nThis setting specifies the default maximum age (in seconds) to use cached IP or DNS lookup results. The value configured here will be used by IP or DNS rules that do not override it. If a lookup result is older than the configured value, the SSH Server will perform the lookup again.\n\nIf set to zero, then for rules that do not override this setting, no IP or DNS lookup caching will be used."
				},
				{
				name:"winGroups &#x2192; <a href=\"#IWinGroups915\" onclick=\"SetInterface('IWinGroups915', false);return false;\">IWinGroups915</a> {get}",
				description:"A list of SSH Server settings for Windows groups. Whenever a user logs into the SSH Server with a Windows user name, one of the group settings entries here will always apply.\n\nGroup settings will be used if an account has no settings entry in 'Windows accounts'. Group settings will also be used when an account does have a settings entry, but the entry specifies a 'group default' value for a setting. See also: https://www.bitvise.com/wug-accounts\n\nIf more than one group entry can be used for a user, and the account doesn't have a setting that explicitly specifies a group, the topmost group appearing here will be used. The 'everyone' group should therefore be last. Use Up and Down arrows (bottom right) to control group priority."
				},
				{
				name:"winAccounts &#x2192; <a href=\"#IWinAccounts915\" onclick=\"SetInterface('IWinAccounts915', false);return false;\">IWinAccounts915</a> {get}",
				description:"A list of SSH Server settings for Windows accounts. If there is no entry in this list for a Windows account that tries to log in, a group settings entry in 'Windows groups' will be used. If an account settings entry is defined, but specifies the 'default' value for a setting, the corresponding Group setting will be used. See also: https://www.bitvise.com/wug-accounts"
				},
				{
				name:"virtGroups &#x2192; <a href=\"#IVirtGroups915\" onclick=\"SetInterface('IVirtGroups915', false);return false;\">IVirtGroups915</a> {get}",
				description:"A list of SSH Server settings for virtual groups. Each virtual account defined in section 'Virtual accounts' is a member of one virtual groupdefined here. Group settings will be used when a virtual account specifies a 'default' value for a setting. See also: https://www.bitvise.com/wug-accounts"
				},
				{
				name:"virtAccounts &#x2192; <a href=\"#IVirtAccounts915\" onclick=\"SetInterface('IVirtAccounts915', false);return false;\">IVirtAccounts915</a> {get}",
				description:"A list of SSH Server settings for virtual accounts. Virtual accounts allow you to configure different SSH Server login settings and permissions for multiple users without having to create and maintain dedicated operating system accounts. Multiple virtual accounts can have different server's settings while using the same backing Windows account for OS-level permissions and security. See also: https://www.bitvise.com/wug-accounts"
				},
				{
				name:"clientVersions &#x2192; <a href=\"#IClientVersionRules915\" onclick=\"SetInterface('IClientVersionRules915', false);return false;\">IClientVersionRules915</a> {get}",
				description:"Rules to accept or deny connections based on SSH clients' version strings. Rules are processed on a first-match basis, so the order of the rules is important. Use the arrow buttons at the bottom to control the order in which the rules will be processed."
				},
				{
				name:"clientAddresses &#x2192; <a href=\"#IAddressAcceptRules915\" onclick=\"SetInterface('IAddressAcceptRules915', false);return false;\">IAddressAcceptRules915</a> {get}",
				description:"Rules to accept or deny connections based on the IP address, DNS name, or geographic location from which a client is connecting. Rules are processed on a first-match basis, so the order of the rules is important. Use the arrow buttons at the bottom to control the order in which the rules will be processed."
				},
				{
				name:"limitDelegatedAdminMountPoints &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If disabled, the SSH Server will allow delegated administrators to configure any Real root path in mount point settings for virtual accounts they can edit.\n\nIf enabled, the SSH Server will prevent delegated administrators from configuring a Real root path not permitted by the Mount point root path whitelist."
				},
				{
				name:"mountPointRootPathWhitelist &#x2192; <a href=\"#IMountPointRootPathWhitelist915\" onclick=\"SetInterface('IMountPointRootPathWhitelist915', false);return false;\">IMountPointRootPathWhitelist915</a> {get}",
				description:"A list of Windows filesystem path prefixes that restricts the paths that delegated administrators can configure as a Real root path in mount point settings for virtual accounts they can edit."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAccessControl915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"GlobalAuthMethod915",
				description:"GlobalAuthMethod_disabledGlobally (1): Disabled globally<br />GlobalAuthMethod_permitWinAccounts (2): Permit for Windows accounts only<br />GlobalAuthMethod_permitVirtAccounts (3): Permit for virtual accounts only<br />GlobalAuthMethod_permit (4): Permit for any account type"
				},
				{
				name:"GlobalGssApiAuth915",
				description:"GlobalGssApiAuth_disabled (1): Disabled<br />GlobalGssApiAuth_allowed (2): Allowed<br />GlobalGssApiAuth_required (3): Required"
				},
				{
				name:"PwCacheAutoSave915",
				description:"PwCacheAutoSave_never (0): Never<br />PwCacheAutoSave_pkAccounts (1): Public-key accounts<br />PwCacheAutoSave_allAccounts (2): All accounts"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IAccount915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:2,
				name:"! winAccountType &#x2192; <a href=\"#IAccount915\" onclick=\"ScrollToEnum();return false;\">WinAccountType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.WinAccountType.localAccount",
				description:"The type of Windows account for which settings in this entry apply."
				},
				{
				flag:2,
				name:"! winDomain &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The domain name of the Windows account to which settings in this entry apply."
				},
				{
				flag:2,
				name:"! winAccount &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The Windows account name, without domain, to which settings in this entry apply."
				},
				{
				name:"comment &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Optional field to describe this settings entry and its purpose.\n\nThis field is not used by the SSH Server. It is preserved and displayed in settings."
				},
				{
				name:"specifyGroup &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the SSH Server will prefer this group to other Windows groups when the user is a member of multiple groups that have entries in the server's settings.\n\nThis setting has effect only if the specified group has an entry in Advanced SSH Server Settings > Access Control > Windows Groups, and the user is a member of that group.\n\nIf disabled, or if the specified group does not have an entry in the server's settings, the SSH Server will try to find settings for the user's primary group as specified in Active Directory. Failing that, the SSH Server will use the group settings entry for the first group of which the user is a member."
				},
				{
				name:"groupType &#x2192; <a href=\"#IAccount915\" onclick=\"ScrollToEnum();return false;\">GroupType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.GroupType.everyone",
				description:"See 'Specify group' help text."
				},
				{
				name:"group &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Group name, without domain. Domain name is implicit - the domain that this account is member of, if any.\n\nSee also 'Specify group' help text."
				},
				{
				name:"loginAllowed &#x2192; <a href=\"#IAccount915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether login is allowed for this user into the SSH Server."
				},
				{
				name:"limits &#x2192; <a href=\"#IAccountLimitsAndQuotas915\" onclick=\"SetInterface('IAccountLimitsAndQuotas915', false);return false;\">IAccountLimitsAndQuotas915</a> {get}",
				description:"Configure the maximum number of simultaneous connections; bandwidth limits; and daily or monthly bandwidth quotas for this account."
				},
				{
				name:"clientAddresses &#x2192; <a href=\"#IAddressAcceptRules915\" onclick=\"SetInterface('IAddressAcceptRules915', false);return false;\">IAddressAcceptRules915</a> {get}",
				description:"Rules to accept or deny login for this account based on the IP address, DNS name, or geographic location from which the user connects. Rules are processed on a first-match basis, so the order of the rules is important. Use the arrow buttons at the bottom to control the order in which the rules will be processed.\n\nIf there is no matching rule in account settings, processing will continue with rules in group settings. If no matching rule is found in group settings either, login will be denied."
				},
				{
				name:"auth &#x2192; <a href=\"#IAccountAuthentication915\" onclick=\"SetInterface('IAccountAuthentication915', false);return false;\">IAccountAuthentication915</a> {get}",
				description:"Configure password and public key authentication settings, and manage public keys for this account."
				},
				{
				name:"remoteAdminAccess &#x2192; <a href=\"#IRemoteAdminAccess915\" onclick=\"SetInterface('IRemoteAdminAccess915', false);return false;\">IRemoteAdminAccess915</a> {get}",
				description:"Configure remote administration access settings for this account. Remote administration includes partial or complete access to server settings, host keys, and/or password cache.\n\nWhen using delegated administration, you can limit the mount point root paths which a delegated administrator can configure. This is configured outside of account and group settings, under Access control > Limit delegated administrator mount points.\n\nTo use remote administration, the user must connect using Bitvise SSH Client."
				},
				{
				name:"connection &#x2192; <a href=\"#IAccountConnectionSetup915\" onclick=\"SetInterface('IAccountConnectionSetup915', false);return false;\">IAccountConnectionSetup915</a> {get}",
				description:"Settings having to do with establishment and maintenance of incoming connections for this account."
				},
				{
				name:"session &#x2192; <a href=\"#IAccountSessionSetup915\" onclick=\"SetInterface('IAccountSessionSetup915', false);return false;\">IAccountSessionSetup915</a> {get}",
				description:"Settings having to do with initialization and caching of Windows sessions for this account."
				},
				{
				name:"term &#x2192; <a href=\"#IAccountTerminalAndExec915\" onclick=\"SetInterface('IAccountTerminalAndExec915', false);return false;\">IAccountTerminalAndExec915</a> {get}",
				description:"Configure terminal shell and exec request settings for this account. Use BvShell to allow shell access, but still restrict the user to virtual filesystem directories configured in the user's account and group settings."
				},
				{
				name:"xfer &#x2192; <a href=\"#IAccountFileTransfer915\" onclick=\"SetInterface('IAccountFileTransfer915', false);return false;\">IAccountFileTransfer915</a> {get}",
				description:"Configure SCP, SFTP, and FTPS file transfer settings for this account."
				},
				{
				name:"fwding &#x2192; <a href=\"#IAccountForwarding915\" onclick=\"SetInterface('IAccountForwarding915', false);return false;\">IAccountForwarding915</a> {get}",
				description:"Configure settings and restrictions for SSH connection tunneling for this account."
				},
				{
				name:"creationTime &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"Unknown\"",
				description:"The time this account settings entry was created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAccount915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"DefaultGroupYesNo915",
				description:"DefaultGroupYesNo_defaultValue (0): Use group default<br />DefaultGroupYesNo_yes (1): Yes<br />DefaultGroupYesNo_no (2): No"
				},
				{
				name:"GroupType915",
				description:"GroupType_everyone (0): Everyone<br />GroupType_local (1): Local<br />GroupType_domain (2): Domain"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				},
				{
				name:"WinAccountType915",
				description:"WinAccountType_localAccount (1): Local account<br />WinAccountType_domainAccount (2): Domain account<br />WinAccountType_microsoftAccount (3): Microsoft account"
				}
			]
			},
			{
			name:"IAccountAuthentication915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"passwordAuth &#x2192; <a href=\"#IAccountAuthentication915\" onclick=\"ScrollToEnum();return false;\">AuthDisp915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.AuthDisp.defaultValue",
				description:"Whether password authentication is disabled, allowed, or required for this user.\n\nThis setting can be grayed-out if password authentication is disabled globally using server-wide settings under Access control."
				},
				{
				name:"allowPasswordChange &#x2192; <a href=\"#IAccountAuthentication915\" onclick=\"ScrollToEnum();return false;\">DefaultGlobalYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGlobalYesNo.defaultValue",
				description:"Whether the SSH Server should allow this user to change their password during SSH authentication."
				},
				{
				name:"publicKeyAuth &#x2192; <a href=\"#IAccountAuthentication915\" onclick=\"ScrollToEnum();return false;\">AuthDisp915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.AuthDisp.defaultValue",
				description:"Whether public key authentication is disabled, allowed, or required for this user."
				},
				{
				name:"allowKeyManagement &#x2192; <a href=\"#IAccountAuthentication915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether the user should be allowed to manage (add, remove, list) public keys configured for their account using SSH clients that support the SSH public key management subsystem."
				},
				{
				name:"keys &#x2192; <a href=\"#IClientKeys915\" onclick=\"SetInterface('IClientKeys915', false);return false;\">IClientKeys915</a> {get}",
				description:"If public key authentication is permitted, a list of public keys that the user can use to log in. At least one public key needs to be imported, either here or for all members of this group in group settings, in order to use public key authentication.\n\nA Windows account that logs in using only public key authentication will not be able to access network resources unless the Windows account's password is added to the SSH Server's password cache. This can be done using the \"Manage password cache\" interface in the SSH Server Control Panel. Alternately, you can also use the setting \"Windows file shares\" to explicitly configure credentials for any network shares the user should access.\n\nWhen the setting Synchronize with authorized_keys is enabled under Access control in Advanced settings, the list of public keys for a Windows account will be replaced with keys in a file named \".ssh\\authorized_keys\", assuming such a file exists after the end of an SSH connection under the user's Windows profile directory. If the file exists and is empty, the user's public key list will be cleared. This provides one way for Windows users to set up and change their public keys without administrator involvement. To disable this behavior, disable the setting \"Synchronize with authorized_keys\"."
				},
				{
				name:"totp &#x2192; <a href=\"#IAccountKbdiTotp915\" onclick=\"SetInterface('IAccountKbdiTotp915', false);return false;\">IAccountKbdiTotp915</a> {get}",
				description:"Configure time-based one-time password (TOTP) settings for this account. For most common use, simply configure a secret key and share it with the user to set up their authenticator. Other settings are provided for advanced users and should not be changed in most situations."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAccountAuthentication915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"AuthDisp915",
				description:"AuthDisp_defaultValue (0): Use group default<br />AuthDisp_disabled (1): Disabled<br />AuthDisp_allowed (2): Allowed<br />AuthDisp_required (3): Required"
				},
				{
				name:"DefaultGlobalYesNo915",
				description:"DefaultGlobalYesNo_defaultValue (0): Use global default<br />DefaultGlobalYesNo_yes (1): Yes<br />DefaultGlobalYesNo_no (2): No"
				},
				{
				name:"DefaultGroupYesNo915",
				description:"DefaultGroupYesNo_defaultValue (0): Use group default<br />DefaultGroupYesNo_yes (1): Yes<br />DefaultGroupYesNo_no (2): No"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IAccountConnectionSetup915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"startReexchange &#x2192; <a href=\"#IAccountConnectionSetup915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"During a lengthy connection, regular key re-exchange protects against a resourceful attacker who could analyze exchanged encrypted data and recover encryption keys. Regular key re-exchange is required by the SSH specification, but there exist implementations that will disconnect if the server starts it.\n\nIf this setting is enabled, the SSH Server will automatically initiate key re-exchange at regular intervals during an SSH connection. If disabled, the server will still accept key re-exchange if initiated by the client, but will not initiate it.\n\nDepending on the negotiated encryption algorithm and the amount of data transferred, disabling key re-exchange may significantly compromise connection security. If you are considering disabling key re-exchange, consider also updating the client software, or replacing it with software that supports key re-exchange."
				},
				{
				name:"useGroupKeepAlive &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the default keep-alive timeout configured in group settings, or the setting configured here for the account. Unless configured differently, group settings themselves inherit the server-wide keep-alive timeout configured under Server > Connection."
				},
				{
				name:"keepAliveTimeout &#x2192; ULONG {get} {set}",
				defaultValue:"default: 20",
				description:"If there is no traffic over an SSH connection for longer than this number of seconds, the SSH Server will send to the client a small packet. This verifies whether the client is still connected. This detects connections that disconnect in a way that the SSH Server is not notified. This can also keep an intermediate network component from terminating the connection due to perceived inactivity.\n\nIf your SSH or SFTP connections keep disconnecting when idle, try a low non-zero value: for example, 5 seconds. To disable this feature, configure 0.\n\nFTP connections do not have a mechanism to detect broken connections. For FTP connections, a connection timeout is always in place. The FTP connection timeout either equals the SSH connection timeout, or 45 minutes, whichever is shorter. A future version will introduce this as a separate setting."
				},
				{
				name:"useGroupConnTimeout &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the default connection timeout configured in group settings, or the setting defined here for the account. Unless configured differently, group settings themselves inherit the server-wide connection timeout configured under Server > Connection."
				},
				{
				name:"connectionTimeout &#x2192; ULONG {get} {set}",
				defaultValue:"default: 0",
				description:"The number of seconds an SSH connection may remain inactive before the SSH Server will terminate it. To disable this feature, configure 0.\n\nFTP connections do not have a mechanism to detect broken connections. For FTP connections, a connection timeout is always in place. The FTP connection timeout either equals the SSH connection timeout, or 45 minutes, whichever is shorter. A future version will introduce this as a separate setting.\n\nThe SSH Server will not terminate a connection that simulates activity, even if the activity is trivial. The SSH Server cannot prevent a client from reconnecting if the client is permitted to connect. If a client is creating too many simultaneous connections and not disconnecting them, limit the number of simultaneous connections the client can make. You can configure this in an account or group settings entry, under Limits and quotas."
				},
				{
				name:"onLogonCmd &#x2192; <a href=\"#IConnOnLogonCommandWithDefault915\" onclick=\"SetInterface('IConnOnLogonCommandWithDefault915', false);return false;\">IConnOnLogonCommandWithDefault915</a> {get}",
				description:"If configured, this command will be run immediately after the user authenticates and is successfully logged in, and before any other connection activity takes place.\n\nIf Windows session caching is enabled, this command can execute many times in the same Windows session, each time the user logs in and reuses the Windows session. If you want to perform actions that affect all connections in a Windows session; for example, to map a network drive; then configure a Windows on-logon command.\n\nThis command runs before the user opens a terminal window. The command is run for all connections, including file transfer connections which never open a terminal window. If you want to run something when the user opens a terminal window, change the user's Shell access type to \"Custom shell settings\". Then, configure a custom \"Terminal shell\" and \"Exec request prefix\" so that the shell runs the desired command. For example, you can set \"Terminal shell\" to \"cmd.exe /k C:\\Path\\Script.cmd\", and \"Exec request prefix\" to \"cmd.exe /c C:\\Path\\Script.cmd &&\"."
				},
				{
				name:"onLogoffCmd &#x2192; <a href=\"#IConnOnLogoffCommandWithDefault915\" onclick=\"SetInterface('IConnOnLogoffCommandWithDefault915', false);return false;\">IConnOnLogoffCommandWithDefault915</a> {get}",
				description:"If configured, this command will be run immediately after the user disconnects after successfully authenticating."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAccountConnectionSetup915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"DefaultGroupYesNo915",
				description:"DefaultGroupYesNo_defaultValue (0): Use group default<br />DefaultGroupYesNo_yes (1): Yes<br />DefaultGroupYesNo_no (2): No"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IAccountFileTransfer915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"permitScp &#x2192; <a href=\"#IAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether SCP file transfer should be allowed for this user."
				},
				{
				name:"permitSftp &#x2192; <a href=\"#IAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether SFTP file access should be allowed for this user. The availability of SCP and FTPS file transfer is unaffected by this setting."
				},
				{
				name:"permitFtps &#x2192; <a href=\"#IAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether the user should be permitted to access the server using FTP over TLS (SSL).\n\nFTPS access requires an FTP binding to be configured in server settings. FTPS is not available on Windows XP and Windows Server 2003 due to absence of adequate TLS support on these platforms."
				},
				{
				name:"loadProfileForFileXfer &#x2192; <a href=\"#IAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether the SSH Server should load this user's Windows profile before starting SCP, SFTP, or FTPS.\n\nEnabling this setting ensures the user's profile will be loaded if it was not already loaded for another reason. If this setting is disabled, the SSH Server may still load the user's profile because of another setting. If Windows session sharing is enabled, the user's profile may already be loaded.\n\nFor more information about disabling Windows profile loading, see Q260 and Q265 in the SSH Server Usage FAQ:\nhttps://www.bitvise.com/ssh-server-usage-faq#Q260 \n"
				},
				{
				name:"omitRelative &#x2192; <a href=\"#IAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Omit relative directory entries \".\" and \"..\" from directory listings in SFTP. With most clients, relative directory entries are either helpful or ignored. However, this setting may be useful with specific clients, especially special-purpose or custom-made, that can have trouble handling them.\n\nIf this setting is enabled, an SFTP client connecting as this user will not receive relative entries in directory listings."
				},
				{
				name:"limitToSftp3 &#x2192; <a href=\"#IAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"The SFTP protocol version is a separate concept from the SSH protocol version. Bitvise SSH Server always uses SSH protocol version 2. However, the supported SFTP versions are 3, 4, and 6.\n\nSFTP versions 4 and 6 are newer and more feature-complete than SFTP version 3. There may sometimes be interoperability issues when using these versions that do not arise if the client and server settle on SFTP version 3.\n\nIf you run into an interoperability issue with an SFTP client, please report it to us so that we can improve interoperability in future SSH Server versions. In the meanwhile, enabling this setting may resolve an interoperability issue by forcing a client to use SFTP version 3 instead of newer SFTP versions.\n\nIf this setting is enabled, this user will be limited to SFTP version 3. Features specific to newer SFTP versions will be unavailable to this user."
				},
				{
				name:"useDefaultPosixPerm &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use default POSIX permissions as configured in group settings, or settings defined here for the account. Unless configured differently, group settings themselves inherit values configured globally in the Server section of settings."
				},
				{
				name:"posixPermDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"770\"",
				description:"Controls POSIX permissions that will be sent to SFTP, SCP, and FTPS clients for directories.\n\nMust be between 0 and 7777, and may only contain digits 0 to 7."
				},
				{
				name:"posixPermFile &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"660\"",
				description:"Controls POSIX permissions that will be sent to SFTP, SCP, and FTPS clients for files.\n\nMust be between 0 and 7777, and may only contain digits 0 to 7."
				},
				{
				name:"useBvShellWithWinScp &#x2192; <a href=\"#IAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"If enabled, BvShell will be used as terminal shell when a WinSCP client connects using the SCP file transfer protocol. When used in SCP mode, WinSCP requires a Unix-like terminal shell, which BvShell imitates.\n\nBvShell respects the virtual filesystem layout configured for the user, and does not permit execution of arbitrary programs.\n\nThis setting does not affect SFTP file transfer, or access with clients other than WinSCP. "
				},
				{
				name:"displayTime &#x2192; <a href=\"#IAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DisplayTimeType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DisplayTimeType.defaultValue",
				description:"Format of the time sent to the client in the SFTP \"long name\" field.\n\nSFTP encodes file time information in binary, using the UTC time zone, and this is used properly by most clients. Normal SFTP file times are not affected by this setting.\n\nHowever, some clients - including OpenSSH, and PuTTY's PSFTP - rely on information in the SFTP \"long name\" field. The \"long name\" field is interpreted by the client as a Unix-like directory listing, and may need to contain file times in a format preferred by the client."
				},
				{
				name:"useDefaultMaxPathLength &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the default maximum path length as configured in group settings, or the value defined here for the account. Unless configured differently, group settings themselves inherit the server-wide value configured in the Server section of settings."
				},
				{
				name:"maxPathLength &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3000",
				description:"Paths longer than 259 characters may be inaccessible by many programs on Windows. This was a fundamental limit in very old versions of Windows, so many programs - including Windows components - remain affected by it. The number is determined by the Windows constant MAX_PATH (260) minus 1 character for the null terminator.\n\nOn recent Windows versions, the fundamental maximum path length is around 32*1024 characters. However, not all programs support paths or filenames of such length."
				},
				{
				name:"allowAltStreams &#x2192; <a href=\"#IAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Windows supports alternate data streams in filesystems including NTFS (the Windows NT File System) and ReFS (Resilient File System, introduced with Windows Server 2012).\n\nIf clients are allowed to create alternate streams, data written this way may be difficult to detect or validate with many tools. If clients are allowed to read or modify alternate streams, the information in those streams may have special meaning that clients should not be able to read or modify.\n\nNote that control characters in range 0x01-0x1F are valid in names of alternate data streams. This may further complicate detecting and validating alternate stream content depending on tools used. Whether clients are able to create or access alternate data streams containing control characters is influenced by the setting Allow unsafe names."
				},
				{
				name:"allowUnsafeNames &#x2192; <a href=\"#IAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Windows supports creation of files with names that are difficult to access with some tools, including Windows components. Attempting to access files with such names, or even communicating the names, may have unintended side effects.\n\nThe SSH Server treats the following as unsafe Windows file names (case-insensitive): CON, PRN, AUX, NUL, COM[1-9], LPT[1-9], CONIN$, CONOUT$; names ending with space (' ') or dot ('.'); and alternate data streams with characters in range 0x01-0x1F (control characters). Note that control characters above 0x20 (e.g. 0x7F) are valid Windows path characters."
				},
				{
				name:"inheritMountPoints &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether the account should inherit virtual filesystem mount points configured in group settings."
				},
				{
				name:"inheritAllMountPoints &#x2192; <a href=\"#IAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"If enabled, the account will inherit virtual filesystem mount points from Windows group settings entries for all groups of which the user is a member. If disabled, the account will inherit mount points only from the single Windows group settings entry from which other account settings are inherited."
				},
				{
				name:"undefMountPoints &#x2192; <a href=\"#ISfsUndefMountPoints915\" onclick=\"SetInterface('ISfsUndefMountPoints915', false);return false;\">ISfsUndefMountPoints915</a> {get}",
				description:"If the account inherits virtual filesystem mount points configured in group settings, some of those mount points can be excluded from inheritance (as if they were not defined) by listing them here."
				},
				{
				name:"mountPoints &#x2192; <a href=\"#ISfsMountPoints915\" onclick=\"SetInterface('ISfsMountPoints915', false);return false;\">ISfsMountPoints915</a> {get}",
				description:"Mount points are virtual folders that this user or group has access to. Add one or more virtual folders to configure file access for SCP, SFTP, and FTPS.\n\nIf the setting Inherit group mount points is enabled, there may be additional mount points not visible here, configured in group settings. A mount point in group settings will take effect unless its Virtual mount path is overridden here, or it is removed using Excluded group mount points."
				},
				{
				name:"useDefaultSfsHomeDir &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the default virtual home directory as configured in group settings, or the virtual home directory specified here."
				},
				{
				name:"sfsHomeDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"/%HOME%\"",
				description:"The home directory must correspond to a virtual path inside the above list of mount points. This setting controls the SCP, SFTP, and FTPS initial directory for this user or group.\n\nIf this setting is left empty, the user will initially find themselves at the root of the virtual filesystem tree.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"createSfsHomeDir &#x2192; <a href=\"#IAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"If enabled, the SSH Server will create the virtual home directory, if it does not yet exist."
				},
				{
				name:"delIncompleteUploads &#x2192; <a href=\"#IAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"If enabled, the SSH Server will delete files that were created by the client and were not properly closed by the time the client disconnects or closes the SFTP channel."
				},
				{
				name:"moveCompletedUploads &#x2192; <a href=\"#IMoveCompletedUploadsWithDefault915\" onclick=\"SetInterface('IMoveCompletedUploadsWithDefault915', false);return false;\">IMoveCompletedUploadsWithDefault915</a> {get}",
				description:"If configured, the SSH Server can automatically move files when they are properly closed by the client after uploading.\n\nThe move operation will activate only for mount points backed by the Windows filesystem. These are mount points that use the provider FlowSfsWin."
				},
				{
				name:"onUploadCmd &#x2192; <a href=\"#IConnOnUploadCommandWithDefault915\" onclick=\"SetInterface('IConnOnUploadCommandWithDefault915', false);return false;\">IConnOnUploadCommandWithDefault915</a> {get}",
				description:"If configured, this command will be executed after closing a file that has been written to by the client."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"DefaultGroupYesNo915",
				description:"DefaultGroupYesNo_defaultValue (0): Use group default<br />DefaultGroupYesNo_yes (1): Yes<br />DefaultGroupYesNo_no (2): No"
				},
				{
				name:"DisplayTimeType915",
				description:"DisplayTimeType_defaultValue (0): Use group default<br />DisplayTimeType_serverTimeWithOffset (1): Server local time with offset<br />DisplayTimeType_serverTime (2): Server local time<br />DisplayTimeType_utc (3): UTC"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IAccountForwarding915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"permitC2S &#x2192; <a href=\"#IAccountForwarding915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether the user should be allowed to initiate client-2-server TCP/IP connection tunneling (or 'port forwarding'). The rules for C2S port forwarding can be further restricted via 'Connect rules'."
				},
				{
				name:"permitS2C &#x2192; <a href=\"#IAccountForwarding915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether the user should be allowed to request server-2-client TCP/IP connection tunneling (or 'port forwarding'). The rules for S2C port forwarding can be further restricted via 'Listening rules'."
				},
				{
				name:"connectRules &#x2192; <a href=\"#IConnectRulesWithProfileInfo915\" onclick=\"SetInterface('IConnectRulesWithProfileInfo915', false);return false;\">IConnectRulesWithProfileInfo915</a> {get}",
				description:"For client-configured client-2-server port forwarding, these settings control what target hosts can be connected to and on what ports. Connections can also be redirected to different servers and different ports, or, by specifying a configured connect profile, through a SOCKS or an HTTP CONNECT proxy.\n\nThe SSH Server will look for a match in account connect rules first. If no match is found, it will look for a match in group settings."
				},
				{
				name:"listenRules &#x2192; <a href=\"#IListeningRules915\" onclick=\"SetInterface('IListeningRules915', false);return false;\">IListeningRules915</a> {get}",
				description:"For client-configured server-2-client port forwarding, these settings control what interfaces and ports the client can request listening on, as well as what origin addresses connections will be accepted from.\n\nThe SSH Server will look for a match in account listening rules first. If no match is found, it will look for a match in group settings."
				},
				{
				name:"srvSideC2S &#x2192; <a href=\"#ISrvSideC2SRules915\" onclick=\"SetInterface('ISrvSideC2SRules915', false);return false;\">ISrvSideC2SRules915</a> {get}",
				description:"A list of client-2-server port forwardings that will be requested and managed by the server, rather than by the client.\n\nThe SSH Server will establish first the server-configured forwarding rules configured in account settings, and then also any rules configured in group settings. In case of a conflict, account rules prevail.\n\nServer-configured port forwarding allows port forwarding rules to be managed centrally, which is valuable in environments with a large number of port forwarding clients.\n\nServer-configured forwarding is supported by Bitvise SSH Client versions 4.14 and higher."
				},
				{
				name:"srvSideS2C &#x2192; <a href=\"#ISrvSideS2CRules915\" onclick=\"SetInterface('ISrvSideS2CRules915', false);return false;\">ISrvSideS2CRules915</a> {get}",
				description:"A list of server-2-client port forwardings that will be requested and managed by the server, rather than by the client.\n\nThe SSH Server will establish first the server-configured forwarding rules configured in account settings, and then also any rules configured in group settings. In case of a conflict, account rules prevail.\n\nServer-configured port forwarding allows port forwarding rules to be managed centrally, which is valuable in environments with a large number of port forwarding clients.\n\nServer-configured forwarding is supported by Bitvise SSH Client versions 4.14 and higher."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAccountForwarding915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"DefaultGroupYesNo915",
				description:"DefaultGroupYesNo_defaultValue (0): Use group default<br />DefaultGroupYesNo_yes (1): Yes<br />DefaultGroupYesNo_no (2): No"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IAccountKbdiTotp915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"totpAuth &#x2192; <a href=\"#IAccountKbdiTotp915\" onclick=\"ScrollToEnum();return false;\">KbdiTotpAuth915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.KbdiTotpAuth.defaultValue",
				description:"Whether time-based one-time password authentication is disabled or required for this user."
				},
				{
				name:"showAdvancedTotp &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Advanced TOTP settings are available for advanced users. These settings should not be changed in most situations."
				},
				{
				name:"alg &#x2192; <a href=\"#IAccountKbdiTotp915\" onclick=\"ScrollToEnum();return false;\">KbdiTotpAlg915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.KbdiTotpAlg.defaultValue",
				description:"The algorithm to use for time-based one-time password authentication. This must match the algorithm used by the authenticator device or application. If the authenticator does not have an algorithm setting, it probably uses hmac-sha1 and does not support other algorithms."
				},
				{
				name:"numDigits &#x2192; <a href=\"#IAccountKbdiTotp915\" onclick=\"ScrollToEnum();return false;\">KbdiTotpNumDigits915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.KbdiTotpNumDigits.defaultValue",
				description:"The number of digits to use for time-based one-time password authentication. This must match the number of digits used by the authenticator device or application. If the authenticator does not have a setting for the number of digits, it probably uses 6 and does not support other values."
				},
				{
				name:"useDefaultTimeStepSize &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the default time-step size configured in a group settings entry, or the value configured here."
				},
				{
				name:"timeStepSizeInSecs &#x2192; ULONG {get} {set}",
				defaultValue:"default: 30",
				description:"Time-step size for time-based one-time password authentication.\n\nRFC 6238 recommends a time-step value of 30 seconds as a compromise between security and usability. A longer time-step permits more time during which a third party can use an OTP it has intercepted. It also requires the user to wait longer in situations where they must enter multiple consecutive OTPs. However, a shorter time-step can make it difficult for the user to successfully submit an OTP within its validity window."
				},
				{
				name:"useDefaultMaxTimeStepsFwd &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the default maximum number of forward time-steps as configured in the group settings entry associated with this user, or the value configured here."
				},
				{
				name:"maxTimeStepsFwd &#x2192; ULONG {get} {set}",
				defaultValue:"default: 1",
				description:"The maximum number forward time-steps against which the server will try to match a supplied time-based one-time password.\n\nIf this value is non-zero, the server will compare an OTP not only against the time it was received, but also against the configured number of future time-steps. This allows authentication to succeed if the current time on the authenticator device is ahead of the time on the server. However, increasing this value exposes a larger window during which a third party can use an OTP it has intercepted."
				},
				{
				name:"useDefaultMaxTimeStepsBwd &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the default maximum number of backward time-steps as configured in the group settings entry associated with this user, or the value configured here."
				},
				{
				name:"maxTimeStepsBwd &#x2192; ULONG {get} {set}",
				defaultValue:"default: 2",
				description:"The maximum number of backward time-steps against which the server will try to match a supplied time-based one-time password.\n\nIf this value is non-zero, the server will compare an OTP not only against the time it was received, but also against the configured number of previous time-steps. This allows authentication to succeed if the current time on the authenticator device is behind the time on the server. This also compensates for the time the user takes to enter the OTP and for the OTP to be transmitted. However, increasing this value exposes a larger window during which a third party can use an OTP it has intercepted."
				},
				{
				name:"secretKey &#x2192; <a href=\"#ISecretKey915\" onclick=\"SetInterface('ISecretKey915', false);return false;\">ISecretKey915</a> {get}",
				description:"The secret key to use for time-based one-time password authentication.\n\nTo use TOTP authentication, the user must configure an authenticator program or device with the same secret key, algorithm, number of digits, and time-step size as configured in SSH Server settings.\n\nUsually, only the secret key needs to be configured. The algorithm, number of digits, and time-step size will work at their default values.\n\nThe secret key can be received from the user and entered into SSH Server settings; or it can be generated here and sent to the user. A secret key can be sent to a user either as Base32 text, or as a 2D code image that can be scanned by an authenticator application."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAccountKbdiTotp915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"KbdiTotpAlg915",
				description:"KbdiTotpAlg_defaultValue (0): Use global default<br />KbdiTotpAlg_hmacSha1 (1): hmac-sha1<br />KbdiTotpAlg_hmacSha256 (2): hmac-sha256<br />KbdiTotpAlg_hmacSha512 (3): hmac-sha512"
				},
				{
				name:"KbdiTotpAuth915",
				description:"KbdiTotpAuth_defaultValue (0): Use group default<br />KbdiTotpAuth_disabled (1): Disabled<br />KbdiTotpAuth_required (2): Required"
				},
				{
				name:"KbdiTotpNumDigits915",
				description:"KbdiTotpNumDigits_defaultValue (0): Use global default<br />KbdiTotpNumDigits_digits6 (6): 6<br />KbdiTotpNumDigits_digits7 (7): 7<br />KbdiTotpNumDigits_digits8 (8): 8"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IAccountLimitsAndQuotas915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"useGroupConnLimits &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the connection limits configured in the group settings entry from which this user receives group default settings; or the values configured here."
				},
				{
				name:"maxConnections &#x2192; ULONG {get} {set}",
				defaultValue:"default: 2",
				description:"The maximum number of concurrent connections this user can establish to this server.\n\nIf this limit is set to only 1, the user will not be able to reconnect if broken connection detection fails and the SSH Server believes incorrectly that a previous connection is still in progress."
				},
				{
				name:"maxConnWithProcesses &#x2192; ULONG {get} {set}",
				defaultValue:"default: 2",
				description:"Whether to restrict the number of concurrent SSH connections with processes this user can have.\n\nThis limit applies only to connections with active child processes. A child process is started for every SCP transfer, SFTP channel, FTPS connection, SSH terminal window, or SSH exec request. Every connection with one or more active child processes occupies one desktop heap. By default, a non-interactive desktop heap is 512 KiB in size, and pre-Vista versions of Windows have a default system-wide limit, called SessionViewSize, of 48 MiB for all desktop heaps. Therefore, on pre-Vista servers with many simultaneous users, desktop heaps are usually the first resource that runs out. If the memory for desktop heaps is exhausted, other processes on the system that need their own desktop heap will not be able to start. This includes non-interactive processes such as services, scheduled tasks and CGI scripts. Windows Vista and later no longer has a fixed SessionViewSize, allowing the total size of desktop heaps to grow dynamically.\n\nIt is possible to increase the system's capacity for non-interactive desktop heaps by using the registry to decrease the size of each heap or to increase the value of SessionViewSize. Note that decreasing the size of the desktop heap may affect some applications which require a certain sized desktop heap. For more information on desktop heaps, please see: https://docs.microsoft.com/en-us/archive/blogs/ntdebugging/desktop-heap-overview"
				},
				{
				name:"bandwidthType &#x2192; <a href=\"#IAccountLimitsAndQuotas915\" onclick=\"ScrollToEnum();return false;\">BandwidthType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.BandwidthType.defaultValue",
				description:"Whether speed limits apply globally for all connections from the user, or for each concurrent connection separately."
				},
				{
				name:"permanentBandwidths &#x2192; <a href=\"#IPermanentBandwidths915\" onclick=\"SetInterface('IPermanentBandwidths915', false);return false;\">IPermanentBandwidths915</a> {get}",
				description:"Permanent bandwidth limits for this user. These limits apply regardless of whether monthly or daily quotas are exceeded."
				},
				{
				name:"monthlyQuotas &#x2192; <a href=\"#IStatsQuotas915\" onclick=\"SetInterface('IStatsQuotas915', false);return false;\">IStatsQuotas915</a> {get}",
				description:"Configure monthly upload and download quotas for this user, and actions to take if the limits are exceeded."
				},
				{
				name:"dailyQuotas &#x2192; <a href=\"#IStatsQuotas915\" onclick=\"SetInterface('IStatsQuotas915', false);return false;\">IStatsQuotas915</a> {get}",
				description:"Configure daily upload and download quotas for this user, and actions to take if the limits are exceeded."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAccountLimitsAndQuotas915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"BandwidthType915",
				description:"BandwidthType_defaultValue (0): Use group default<br />BandwidthType_perUser (1): Per user<br />BandwidthType_perConnection (2): Per connection"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IAccountSessionSetup915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"logonType &#x2192; <a href=\"#IAccountSessionSetup915\" onclick=\"ScrollToEnum();return false;\">LogonType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.LogonType.defaultValue",
				description:"The Windows logon type to use when this user logs in.\n\nThe 'Interactive' logon type grants the logon session the same Windows permissions as when the Windows account that provides the security context is logged on locally at the server's keyboard. Login with this logon type will fail if the Windows account does not have the right to 'Log on locally' configured in Windows security policy that applies to the server computer. This right is normally granted to all users in a default Windows configuration, but on a domain controller it is granted only to administrators.\n\nThe 'Network' logon type requires the Windows account to have the right to 'Access this computer from the network', but it does not require 'Log on locally'. Network logon will work well on most Windows installations, except outdated Windows Server versions where interactive logon is required to use cmd.exe and other command line tools. On those servers, unrestricted terminal shell access will not work with the 'Network' logon type, but file transfer and tunneling will function.\n\nThe 'Batch' logon type requires the Windows account to have the right to 'Log on as batch job'. Windows grants this by default to Administrators, Backup Operators and Performance Log Users. The Windows Task Scheduler uses this logon type for tasks that run when no user is logged on. This logon type may allow programs to run which do not run correctly under 'Network' or 'Interactive'.\n\nRecommendation: 'Network' is the suggested logon type for all current Windows versions. For users who require unrestricted terminal shell access, you may set logon type to 'Interactive'. Set the logon type to 'Batch' if the program you're trying to run does not run otherwise.\n\nNote: When using the Kerberos or NTLM authentication methods, Windows does not provide a way for the SSH Server to use the 'Interactive' logon type. When logging in with Kerberos or NTLM, Windows will behave as if the 'Network' logon type was used."
				},
				{
				name:"onAccountInfoFailure &#x2192; <a href=\"#IAccountSessionSetup915\" onclick=\"ScrollToEnum();return false;\">OnAccountInfoFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnAccountInfoFailure.defaultValue",
				description:"It is possible that the SSH Server can log a user in successfully, but Windows reports an error when attempting to obtain account information, such as the location of the user's profile directory. This can create undesired outcomes, or even security risks, if your configuration depends on environment variables such as %HOME% to be set correctly.\n\nIn most environments, the setting Disable access to child processes is sufficient to mitigate such risks. If an error occurs, file transfer, terminal, and exec requests will not function, but port forwarding will work.\n\nIf this is set to Disable Windows profile loading, then if there is an account info failure, file transfer and BvShell may continue to work, but environment variables may be set to different values than expected. Terminal and exec requests will not function because the user's Windows profile will not be loaded.\n\nIf this is set to No restrictions, then if there is an account info failure, and the SSH Server needs to load the user's Windows profile, it will attempt to load it with a null profile path. If this succeeds, all functionality will continue to be available, but the Windows profile may be loaded differently than expected, and related environment variables may be set to different values than expected."
				},
				{
				name:"ifTemporaryProfileLoaded &#x2192; <a href=\"#IAccountSessionSetup915\" onclick=\"ScrollToEnum();return false;\">IfTemporaryProfileLoaded915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.IfTemporaryProfileLoaded.defaultValue",
				description:"Certain settings will cause the SSH Server to load the Windows profile for the user's logon session. Profile loading is performed by Windows and can fail. If the intended Windows profile cannot be loaded, Windows might load a temporary profile instead. The temporary profile may contain different settings and environment variables than the intended Windows profile. This may cause the SSH connection to behave differently than intended.\n\nWith Treat as failure, a temporary profile is treated as if the profile failed to load. Actions which require a Windows profile to be loaded will not succeed. This includes, for example, terminal shell access (when not using BvShell), or synchronization with authorized_keys.\n\nWith No restrictions, a temporary profile will be treated as if the intended profile was successfully loaded. Actions which depend on the Windows profile to be loaded will succeed, but could have different outcomes than intended."
				},
				{
				name:"useGroupWinSessionStgs &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use default Windows session settings configured in group settings, or the settings defined here for this account. Unless configured differently, group settings themselves inherit values configured globally under Server > Sessions."
				},
				{
				name:"winSessionSharing &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether multiple connections from the same user can share the same Windows session. When connections share a Windows session, actions performed by one connection may affect others. For example, when one connection maps a Windows file share, the same share becomes accessible to other connections in the same Windows session. If one connection disconnects a share, that share stops being available to other connections. A connection which does not require a Windows profile to be loaded may run inside a Windows session in which the Windows profile is loaded, if it was loaded previously by another connection.\n\nConnections that log in as separate accounts - Windows or virtual - cannot share the same Windows session. If SSH Server settings change in a way that affects Windows session initialization, subsequent connections will receive a new Windows session."
				},
				{
				name:"winSessionKeepAliveSecs &#x2192; ULONG {get} {set}",
				defaultValue:"default: 600",
				description:"The number of seconds a Windows session stays cached after the last connection which was using the Windows session disconnects."
				},
				{
				name:"maxWinSessionAgeHours &#x2192; ULONG {get} {set}",
				defaultValue:"default: 768",
				description:"After a Windows session was created, the maximum number of hours it can continue to be reused. After this time expires, the Windows session will be closed, and a new one will be created when the next connection needs it."
				},
				{
				name:"windowsFileShareSettings &#x2192; <a href=\"#INetworkShareAccountSettings915\" onclick=\"SetInterface('INetworkShareAccountSettings915', false);return false;\">INetworkShareAccountSettings915</a> {get}",
				description:"Settings in this group control how to handle connections to Windows file shares: whether to map a remote home directory; whether to map remembered shares; and what to do if file share connections fail."
				},
				{
				name:"shares &#x2192; <a href=\"#IFileShares915\" onclick=\"SetInterface('IFileShares915', false);return false;\">IFileShares915</a> {get}",
				description:"A list of shared folders on other computers in the local network to which the SSH Server should establish connections when this user logs in.\n\nThere may be additional Windows file share entries not visible here, configured in group settings."
				},
				{
				name:"windowsOnLogonCmd &#x2192; <a href=\"#IWinOnLogonCommandWithDefault915\" onclick=\"SetInterface('IWinOnLogonCommandWithDefault915', false);return false;\">IWinOnLogonCommandWithDefault915</a> {get}",
				description:"If configured, this command will be run when a Windows session is initialized for this user.\n\nIf Windows session sharing is enabled, then a Windows session will be initialized when a user first connects and authenticates. Subsequent connections from the same user may reuse the same Windows session. When a Windows session is reused, the Windows on-logon command is not run in that session again.\n\nIf Windows session sharing is disabled, then a new Windows session is initialized for each connection where the user authenticates. In this case, the Windows on-logon command runs before the per-connection On-logon command, if one is configured.\n\nThe Windows on-logon command is suitable to initialize resources which should be available to all connections from the same user. For example, this command is suitable to map a network drive."
				},
				{
				name:"windowsOnLogoffCmd &#x2192; <a href=\"#IWinOnLogoffCommandWithDefault915\" onclick=\"SetInterface('IWinOnLogoffCommandWithDefault915', false);return false;\">IWinOnLogoffCommandWithDefault915</a> {get}",
				description:"If configured, this command will be run when a Windows session is dismissed for this user.\n\nIf Windows session sharing is enabled, a single Windows session can be used for one or more, or many connections from the same user. A Windows session gets dismissed when the user has been disconnected for a configurable amount of time. A Windows session also gets dismissed when it has been around for a configurable maximum time; or when certain user settings change in a way that requires the SSH Server to initialize a new Windows session.\n\nIf Windows session sharing is disabled, then a new Windows session is initialized for each connection where the user authenticates, and dismissed when the user disconnects. In this case, the Windows on-logoff command runs after the On-disconnect command, if one is configured.\n"
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAccountSessionSetup915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"IfTemporaryProfileLoaded915",
				description:"IfTemporaryProfileLoaded_defaultValue (0): Use group default<br />IfTemporaryProfileLoaded_treatAsFailure (1): Treat as failure<br />IfTemporaryProfileLoaded_noRestrict (2): No restrictions"
				},
				{
				name:"LogonType915",
				description:"LogonType_defaultValue (0): Use group default<br />LogonType_interactive (1): Interactive<br />LogonType_network (2): Network<br />LogonType_batch (3): Batch"
				},
				{
				name:"OnAccountInfoFailure915",
				description:"OnAccountInfoFailure_defaultValue (0): Use group default<br />OnAccountInfoFailure_denyLogin (1): Deny login<br />OnAccountInfoFailure_restrictAccess (2): Disable access to child processes<br />OnAccountInfoFailure_disableProfile (3): Disable Windows profile loading<br />OnAccountInfoFailure_noRestrict (4): No restrictions"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IAccountTerminalAndExec915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"shellAccessType &#x2192; <a href=\"#IAccountTerminalAndExec915\" onclick=\"ScrollToEnum();return false;\">ShellAccess915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.ShellAccess.defaultValue",
				description:"The type of terminal shell and exec request access the account should have.\n\nA terminal shell is what's accessed when an SSH client opens a console window into which the user can type commands. A shell can be accessed either interactively, or non-interactively. When accessed non-interactively, the SSH client starts the connection by sending an exec request containing a command, which the server runs.\n\nThe shell access types Command Prompt, PowerShell, and bash provide access restricted only by the user's Windows filesystem permissions. These shell types do not respect the SSH Server's virtual filesystem, and allow execution of arbitrary programs.\n\nFor users who only need to access the SSH Server for file transfer, shell access should be either disabled, or set to BvShell.\n\nFor users who only need to access the SSH Server for Git, shell access should be configured to Git access only.\n\nBvShell is a bash-like shell provided by the SSH Server. This is the only shell type which respects the virtual filesystem layout configured for the client in SSH Server settings. BvShell does not permit execution of arbitrary programs. It is intended for clients limited to file transfer access that may wish to use commands their SFTP or SCP client might not provide (e.g. file copy).\n\nWhen enabled, BvShell allows WinSCP to function properly when it connects to the SSH Server in SCP mode. See also the separate setting Use BvShell with WinSCP, under File transfer."
				},
				{
				name:"shellCustom &#x2192; <a href=\"#IAccountTerminalShellSettings915\" onclick=\"SetInterface('IAccountTerminalShellSettings915', false);return false;\">IAccountTerminalShellSettings915</a> {get}",
				description:"Use custom shell settings to configure a type of shell access not covered by pre-defined access types."
				},
				{
				name:"bashExePath &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"C:\\Path\\To\\bash.exe\"",
				description:"Configure the full path and file name to the bash.exe executable.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"addBashDirToPath &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If this setting is enabled, the SSH Server will add the Bash executable directory to the PATH environment variable before executing Bash."
				},
				{
				name:"gitType &#x2192; <a href=\"#IAccountTerminalAndExec915\" onclick=\"ScrollToEnum();return false;\">GitType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.GitType.msysgit",
				description:"Use Cygwin or compatible for Cygwin Git or Gitwin.\n\nUse Git for Windows, msysGit or compatible if you are using Git for Windows, msysGit, Bonobo Git Server, or GitStack.\n\nIf you experience trouble using msysGit, we recommend selecting the option 'Use Git and optional Unix tools from the Windows Command Prompt' during msysGit installation. If a different option is chosen, the SSH Server will still attempt to configure the PATH environment variable so that msysGit will work, but may not be able to do so correctly."
				},
				{
				name:"gitBinDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"C:\\Path\\To\\Git\\Bin\"",
				description:"Configure the path to a directory that contains the following Git binaries: git-receive-pack.exe, git-upload-pack.exe, and git-upload-archive.exe.\n\nFor Cygwin, the default path is either 'C:\\cygwin\\bin or C:\\cygwin64\\bin'.\n\nFor msysGit, the default path is 'C:\\Program files (x86)\\Git\\libexec\\git-core'.\n\nFor Bonobo Git Server, the default path is 'C:\\inetpub\\wwwroot\\Bonobo.Git.Server\\App_Data'.\n\nFor GitStack, the default path is 'C:\\GitStack\\git\\libexec\\git-core'.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"gitRepoDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"C:\\Path\\To\\Repo\"",
				description:"Configure the path to a directory in which your Git repositories are stored. The client will be permitted to access only repositories in this directory or its sub-folders.\n\nThe configured path must be an absolute Windows path, but it may also be a UNC path. For example: \\\\server\\share\\repo\n\nIf using a UNC path in a connection with public key authentication, you will need to either set up the SSH Server's password cache, or configure credentials for the SSH Server to access the share. See \"Network shares and public key authentication\":\nhttps://www.bitvise.com/ssh-server-accessing-file-shares\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"telnetAddr &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"127.0.0.1\"",
				description:"The IPv4 address, IPv6 address, or DNS name of the Telnet server to which to forward the terminal session."
				},
				{
				name:"telnetPort &#x2192; ULONG {get} {set}",
				defaultValue:"default: 23",
				description:"The port number of the Telnet server to which to forward the terminal session."
				},
				{
				name:"initData &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Data that will be sent to the Telnet server immediately after the connection to the Telnet server is established; after any first text is received from the server.\n\nFor example - to send the SSH user's account name in the first line, and the client's IP address and port number in the second line, use: %USERNAME%\\r\\n%SSH_CLIENT%\\r\\n\n\nValid escape sequences are:\n\\n - new line\n\\r - carriage return\n\\p - boundary between blocks of data\n\nUsually, Telnet servers expect \\r\\n as new line separator.\n\n\\p can be used to split data sent to the server without sending a new line. This can be useful e.g. for confirming questions, or navigating through a menu.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"loadProfileForBvShell &#x2192; <a href=\"#IAccountTerminalAndExec915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether the SSH Server should load this user's Windows profile before starting BvShell.\n\nEnabling this setting ensures the user's profile will be loaded if it was not already loaded for another reason. If this setting is disabled, the SSH Server may still load the user's profile because of another setting. If Windows session sharing is enabled, the user's profile may already be loaded.\n\nIf no profile is loaded for BvShell, the Preferred console version setting will have no effect: behavior will be as if it was set to System default. The maximum console character width will be reduced also.\n\nIf the setting Load profile for file transfer is enabled, the profile will be loaded for BvShell regardless of this setting. BvShell is a way of accessing the server for file transfer.\n\nFor more information about disabling Windows profile loading, see Q260 and Q265 in the SSH Server Usage FAQ:\nhttps://www.bitvise.com/ssh-server-usage-faq#Q260 \n"
				},
				{
				name:"allowJobBreakaway &#x2192; <a href=\"#IAccountTerminalAndExec915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether the user should be allowed to execute programs in a way that allows them to continue running after the SSH connection itself has ended. If execution of such programs is desired, this option should be enabled and the programs should be executed using the bvRun utility supplied with Bitvise SSH Server, using flags \"-brj -new\" or \"-brj -det\"."
				},
				{
				name:"useDefaultTerminalCodePage &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the default terminal code page setting as configured in group settings, or the terminal code page configured here."
				},
				{
				name:"terminalCodePage &#x2192; <a href=\"#IAccountTerminalAndExec915\" onclick=\"ScrollToEnum();return false;\">TerminalCodePage915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.TerminalCodePage.utf8",
				description:"The character encoding to use when the client accesses a terminal shell. The default encoding is UTF-8, which supports all international characters, but requires the client to also support UTF-8. To support international characters with clients that do not support UTF-8, this setting allows the client's code page to be explicitly configured."
				},
				{
				name:"useDefaultInitDir &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the default initial terminal shell directory as configured in group settings, or the initial terminal shell directory specified here."
				},
				{
				name:"initDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"%HOME%\"",
				description:"What initial directory to use for for terminal shell and exec requests. If an empty string is specified, the SSH Server will attempt to use the most suitable directory, e.g. the user's home directory. Note that this is a real local path on the server machine, not a virtual path.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"permitInitDirFallback &#x2192; <a href=\"#IAccountTerminalAndExec915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"If this setting is enabled, and the path configured in the setting Initial terminal shell directory is inaccessible, the SSH Server will allow the client to start a terminal shell in the directory %SYSTEMROOT%\\System32."
				},
				{
				name:"permitEnvVar &#x2192; <a href=\"#IAccountTerminalAndExec915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether the client should be allowed to set environment variables before starting a terminal shell or exec request."
				},
				{
				name:"allowAgentFwdCygwin &#x2192; <a href=\"#IAccountTerminalAndExec915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether the client should be allowed to request SSH authentication agent forwarding for Cygwin's OpenSSH client while starting a terminal shell or exec request.\n\nChanging this setting has no effect on SSH connections for which authentication agentforwarding has already been started."
				},
				{
				name:"allowAgentFwdPutty &#x2192; <a href=\"#IAccountTerminalAndExec915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether the client should be allowed to request SSH authentication agent forwarding for PuTTY's Pageant client while starting a terminal shell or exec request.\n\nChanging this setting has no effect on SSH connections for which authentication agentforwarding has already been started."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAccountTerminalAndExec915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"DefaultGroupYesNo915",
				description:"DefaultGroupYesNo_defaultValue (0): Use group default<br />DefaultGroupYesNo_yes (1): Yes<br />DefaultGroupYesNo_no (2): No"
				},
				{
				name:"GitType915",
				description:"GitType_cygwin (0): Cygwin or compatible<br />GitType_msysgit (1): Git for Windows, msysGit or compatible"
				},
				{
				name:"ShellAccess915",
				description:"ShellAccess_defaultValue (1): Use group default<br />ShellAccess_disabled (2): No shell access<br />ShellAccess_bvshell (10): BvShell<br />ShellAccess_cmdPrompt (3): Command Prompt<br />ShellAccess_powershell (4): PowerShell<br />ShellAccess_bash: 5<br />ShellAccess_gitonly (6): Git access only<br />ShellAccess_telnetSrv (9): Telnet server<br />ShellAccess_custom (7): Custom shell settings"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				},
				{
				name:"TerminalCodePage915",
				description:"TerminalCodePage_utf8 (65001): UTF-8<br />TerminalCodePage_iso88591 (28591): ISO 8859-1<br />TerminalCodePage_iso88592 (28592): ISO 8859-2<br />TerminalCodePage_iso88593 (28593): ISO 8859-3<br />TerminalCodePage_iso88594 (28594): ISO 8859-4<br />TerminalCodePage_iso88595 (28595): ISO 8859-5<br />TerminalCodePage_iso88596 (28596): ISO 8859-6<br />TerminalCodePage_iso88597 (28597): ISO 8859-7<br />TerminalCodePage_iso88598 (28598): ISO 8859-8<br />TerminalCodePage_iso88599 (28599): ISO 8859-9<br />TerminalCodePage_iso885910 (28600): ISO 8859-10<br />TerminalCodePage_iso885911 (28601): ISO 8859-11<br />TerminalCodePage_iso885913 (28603): ISO 8859-13<br />TerminalCodePage_iso885914 (28604): ISO 8859-14<br />TerminalCodePage_iso885915 (28605): ISO 8859-15<br />TerminalCodePage_iso885916 (28606): ISO 8859-16<br />TerminalCodePage_ansi1250 (1250): ANSI 1250<br />TerminalCodePage_ansi1251 (1251): ANSI 1251<br />TerminalCodePage_ansi1252 (1252): ANSI 1252<br />TerminalCodePage_ansi1253 (1253): ANSI 1253<br />TerminalCodePage_ansi1254 (1254): ANSI 1254<br />TerminalCodePage_ansi1255 (1255): ANSI 1255<br />TerminalCodePage_ansi1256 (1256): ANSI 1256<br />TerminalCodePage_ansi1257 (1257): ANSI 1257<br />TerminalCodePage_ansi1258 (1258): ANSI 1258<br />TerminalCodePage_ansi874 (874): ANSI 874<br />TerminalCodePage_ansi932 (932): ANSI 932<br />TerminalCodePage_ansi936 (936): ANSI 936<br />TerminalCodePage_ansi949 (949): ANSI 949<br />TerminalCodePage_ansi950 (950): ANSI 950<br />TerminalCodePage_oem437 (437): OEM 437<br />TerminalCodePage_oem720 (720): OEM 720<br />TerminalCodePage_oem737 (737): OEM 737<br />TerminalCodePage_oem775 (775): OEM 775<br />TerminalCodePage_oem850 (850): OEM 850<br />TerminalCodePage_oem852 (852): OEM 852<br />TerminalCodePage_oem855 (855): OEM 855<br />TerminalCodePage_oem857 (857): OEM 857<br />TerminalCodePage_oem858 (858): OEM 858<br />TerminalCodePage_oem860 (860): OEM 860<br />TerminalCodePage_oem861 (861): OEM 861<br />TerminalCodePage_oem862 (862): OEM 862<br />TerminalCodePage_oem863 (863): OEM 863<br />TerminalCodePage_oem864 (864): OEM 864<br />TerminalCodePage_oem865 (865): OEM 865<br />TerminalCodePage_oem866 (866): OEM 866<br />TerminalCodePage_oem869 (869): OEM 869<br />TerminalCodePage_koi8r (20866): KOI8-R<br />TerminalCodePage_koi8u (21866): KOI8-U<br />TerminalCodePage_johab (1361): Johab"
				}
			]
			},
			{
			name:"IAccountTerminalShellSettings915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"permitTerminalShell &#x2192; <a href=\"#IAccountTerminalShellSettings915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether the user should be permitted access to terminal shell.\n\nNote: If you deny terminal shell access for security reasons, you should normally also deny exec requests."
				},
				{
				name:"useDefaultTerminalShell &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the default terminal shell as configured in group settings, or the terminal shell specified here."
				},
				{
				name:"terminalShell &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"cmd.exe\"",
				description:"What program to use as the terminal shell. This program will normally be a command processor, but any text-mode program can be used.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"permitExecRequests &#x2192; <a href=\"#IAccountTerminalShellSettings915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether exec requests should be allowed for this user. An exec request is a method of command execution that is more appropriate for use by automated clients than a terminal shell."
				},
				{
				name:"useDefaultExecReqPrefix &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the default exec request prefix as configured in group settings, or the exec request prefix specified here."
				},
				{
				name:"execReqPrefix &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"cmd.exe /c\"",
				description:"What string to prefix before a command supplied in an exec request. If empty, commands like 'dir' will need to be phrased fully as 'cmd /c dir' on the client.\n\nTo use git-shell, you must disable the 'Convert Git parameters' setting, then configure the exec request prefix as:\n\nC:\\Path\\To\\git-shell.exe -c \"\n\nThe double quote at the end is important."
				},
				{
				name:"spaceAfterPrefix &#x2192; <a href=\"#IAccountTerminalShellSettings915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether the SSH Server should add a space between the exec request prefix and the command when executing an exec request."
				},
				{
				name:"convertGitParams &#x2192; <a href=\"#IAccountTerminalShellSettings915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether the SSH Server should perform automatic detection and conversion of Git command lines.\n\nWhen detection and conversion of Git command lines is enabled, the SSH Server will transform exec requests starting with 'git ' or 'git-' from Unix-like syntax to Windows syntax according to the following rules:\n\na) Single quote characters, which aren't recognized by the Windows command interpreter, will be converted into double quote characters.\n\nb) Unquoted escaped spaces ('\\ ') will be changed to double quoted spaces ('\" \"').\n\nc) Backslash escape sequences that do not end with a regular or an escaped double quote will be removed.\n\nThis feature should be disabled when using git-shell as exec request prefix."
				},
				{
				name:"base64EncodeCmd &#x2192; <a href=\"#IAccountTerminalShellSettings915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether the SSH Server should Base64 encode commands received with execute requests.\n\nThis setting is intended for use with PowerShell -EncodedCommand."
				},
				{
				name:"doubleQuoteCmd &#x2192; <a href=\"#IAccountTerminalShellSettings915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether the SSH Server should add double quotes around commands received with execute requests.\n\nIf enabled, the SSH Server will add double quotes around exec request commands. Any quotes and backslash characters inside the command will be escaped with a backslash (\"\\\")."
				},
				{
				name:"forceDumbPty &#x2192; <a href=\"#IAccountTerminalShellSettings915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"If this setting is enabled, the terminal type requested by the client for terminal sessions and exec requests will be ignored, and the \"dumb\" terminal type will be used instead. Output of the terminal shell and any executed programs will be passed to the client directly, without terminal emulation."
				},
				{
				name:"customSubsysAccess &#x2192; <a href=\"#IAccountTerminalShellSettings915\" onclick=\"ScrollToEnum();return false;\">CustomSubsysAccess915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.CustomSubsysAccess.defaultValue",
				description:"Whether the user should be allowed to invoke custom subsystems defined in Advanced settings. Custom subsystems are accessed like a terminal shell, but the server executes a custom command configured in server settings, and the \"dumb\" terminal type is always used (no terminal emulation)."
				},
				{
				name:"allowSubsystems &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"A comma-separated list of custom subsystem names the user can invoke. Names that do not correspond to a subsystem defined in Advanced settings will have no effect."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAccountTerminalShellSettings915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"CustomSubsysAccess915",
				description:"CustomSubsysAccess_defaultValue (1): Use group default<br />CustomSubsysAccess_denyAll (2): Deny all<br />CustomSubsysAccess_allowSpecific (3): Allow specific<br />CustomSubsysAccess_allowAll (4): Allow all"
				},
				{
				name:"DefaultGroupYesNo915",
				description:"DefaultGroupYesNo_defaultValue (0): Use group default<br />DefaultGroupYesNo_yes (1): Yes<br />DefaultGroupYesNo_no (2): No"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IActState915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"isEvaluation &#x2192; BOOL {get}",
				description:"True if the SSH Server is operating under evaluation."
				},
				{
				name:"isExpired &#x2192; BOOL {get}",
				description:"True if the evaluation period has expired. Available only if the SSH Server is operating under evaluation."
				},
				{
				name:"daysRemaining &#x2192; ULONG {get}",
				description:"The number of days remaining for evaluation. A value of 0 indicates that the evaluation period has expired. Available only if the SSH Server is operating under evaluation."
				},
				{
				name:"licensedTo &#x2192; BSTR {get}",
				description:"A string identifying the licensee. Available only if the SSH Server is NOT under evaluation."
				},
				{
				name:"licenseType &#x2192; <a href=\"#IActState915\" onclick=\"ScrollToEnum();return false;\">LicenseType915</a> {get}",
				description:"The type of license. Available only if the SSH Server is NOT under evaluation."
				},
				{
				name:"upgradeExpiry &#x2192; BSTR {get}",
				description:"Upgrade access expiry date. Available only if the SSH Server is NOT under evaluation."
				},
				{
				name:"seller &#x2192; BSTR {get}",
				description:"A string identifying the seller of the license. Available only if the SSH Server is NOT under evaluation."
				},
				{
				name:"orderNr &#x2192; ULONG {get}",
				description:"An order number associated with the license. Available only if the SSH Server is NOT under evaluation."
				}
			],
			methods:
			[
				{
				name:"Remove ()",
				description:"Removes the currently applied activation code. Returns an error if no activation code is applied."
				},
				{
				name:"Reload ()",
				description:"Reloads the activation code. Any existing references to older instances of this object will continue to point to the old instance with stale information."
				},
				{
				name:"SetActCode (BSTR actCodeHex)",
				description:"Sets a new activation code.",
				parameters:
				[
					{
					parameter:"actCodeHex: The full hex-encoded activation code. Concatenate BOTH lines of the activation code."
					}
				]
				}
			],
			enums:
			[
				{
				name:"LicenseType915",
				description:"LicenseType_unknown: 0<br />LicenseType_personal: 1<br />LicenseType_nonProfit: 2<br />LicenseType_business: 3"
				}
			]
			},
			{
			name:"IAdditionalDomains915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IAdditionalDomainsEntry915\" onclick=\"SetInterface('IAdditionalDomainsEntry915', false);return false;\">IAdditionalDomainsEntry915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IAdditionalDomainsEntry915\" onclick=\"SetInterface('IAdditionalDomainsEntry915', false);return false;\">IAdditionalDomainsEntry915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAdditionalDomains915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IAdditionalDomainsEntry915\" onclick=\"SetInterface('IAdditionalDomainsEntry915', false);return false;\">IAdditionalDomainsEntry915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IAdditionalDomains915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IAdditionalDomainsEntry915\" onclick=\"SetInterface('IAdditionalDomainsEntry915', false);return false;\">IAdditionalDomainsEntry915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IAdditionalDomainsEntry915\" onclick=\"SetInterface('IAdditionalDomainsEntry915', false);return false;\">IAdditionalDomainsEntry915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IAdditionalDomainsEntry915\" onclick=\"SetInterface('IAdditionalDomainsEntry915', false);return false;\">IAdditionalDomainsEntry915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IAdditionalDomainsEntry915\" onclick=\"SetInterface('IAdditionalDomainsEntry915', false);return false;\">IAdditionalDomainsEntry915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IAdditionalDomainsEntry915\" onclick=\"SetInterface('IAdditionalDomainsEntry915', false);return false;\">IAdditionalDomainsEntry915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IAdditionalDomainsEntry915\" onclick=\"SetInterface('IAdditionalDomainsEntry915', false);return false;\">IAdditionalDomainsEntry915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IAdditionalDomainsEntry915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! domain &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The domain name for which additional match domains are being configured."
				},
				{
				name:"additionalDomains &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"A space-separated list of additional domain names that will also count as matches for secure email delivery to the the main domain. For example, enter \"google.com\" as an additional domain for \"gmail.com\"."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAdditionalDomainsEntry915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IAddressAcceptRule915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:2,
				name:"! addressRule &#x2192; <a href=\"#IAddressRuleIPv6_915\" onclick=\"SetInterface('IAddressRuleIPv6_915', false);return false;\">IAddressRuleIPv6_915</a> {get}",
				description:"Defines the criterion which the origin address of a connection must match, in order to match this rule."
				},
				{
				name:"onDnsError &#x2192; <a href=\"#IAddressAcceptRule915\" onclick=\"ScrollToEnum();return false;\">OnDnsResolvingError915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnDnsResolvingError.next",
				description:"Action to take if this rule cannot be processed due to a DNS name resolve error."
				},
				{
				name:"useDefMaxCachedLookupAge &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the global default setting for the maximum cached lookup age."
				},
				{
				name:"maxCachedLookupAge &#x2192; ULONG {get} {set}",
				defaultValue:"default: 30",
				description:"Maximum number of seconds during which a cached DNS or IP lookup result can be reused. Set this to 0 to disable caching of DNS and IP lookup results and always perform a new lookup."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"An optional comment describing the purpose of this rule."
				},
				{
				name:"instr &#x2192; <a href=\"#IAcceptInstructions915\" onclick=\"SetInterface('IAcceptInstructions915', false);return false;\">IAcceptInstructions915</a> {get}",
				description:"Defines what is to be done when a connection attempt is received whose origin address matches this rule."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAddressAcceptRule915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"OnDnsResolvingError915",
				description:"OnDnsResolvingError_next (0): Continue processing next rule<br />OnDnsResolvingError_deny (1): Deny connection"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IAddressAcceptRuleForIPv4_915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:2,
				name:"! addressRule &#x2192; <a href=\"#IAddressRule915\" onclick=\"SetInterface('IAddressRule915', false);return false;\">IAddressRule915</a> {get}",
				description:"Defines the criterion which the origin address of a connection must match, in order to match this rule."
				},
				{
				name:"onDnsError &#x2192; <a href=\"#IAddressAcceptRuleForIPv4_915\" onclick=\"ScrollToEnum();return false;\">OnDnsResolvingError915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnDnsResolvingError.next",
				description:"Action to take if this rule cannot be processed due to a DNS name resolve error."
				},
				{
				name:"useDefMaxCachedLookupAge &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the global default setting for the maximum cached lookup age."
				},
				{
				name:"maxCachedLookupAge &#x2192; ULONG {get} {set}",
				defaultValue:"default: 30",
				description:"Maximum number of seconds during which a cached DNS or IP lookup result can be reused. Set this to 0 to disable caching of DNS and IP lookup results and always perform a new lookup."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"An optional comment describing the purpose of this rule."
				},
				{
				name:"instr &#x2192; <a href=\"#IAcceptInstructions915\" onclick=\"SetInterface('IAcceptInstructions915', false);return false;\">IAcceptInstructions915</a> {get}",
				description:"Defines what is to be done when a connection attempt is received whose origin address matches this rule."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAddressAcceptRuleForIPv4_915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"OnDnsResolvingError915",
				description:"OnDnsResolvingError_next (0): Continue processing next rule<br />OnDnsResolvingError_deny (1): Deny connection"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IAddressAcceptRules915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IAddressAcceptRule915\" onclick=\"SetInterface('IAddressAcceptRule915', false);return false;\">IAddressAcceptRule915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IAddressAcceptRule915\" onclick=\"SetInterface('IAddressAcceptRule915', false);return false;\">IAddressAcceptRule915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAddressAcceptRules915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IAddressAcceptRule915\" onclick=\"SetInterface('IAddressAcceptRule915', false);return false;\">IAddressAcceptRule915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Move (ULONG indexFrom, ULONG indexTo)",
				description:"Moves the entry with the specified zero-based index to the new location within the list."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				names:
				[
					"ImportCsvEx (BSTR separator, BSTR csvData, <a href=\"#IAddressAcceptRules915\" onclick=\"ScrollToEnum();return false;\">IpListType915</a> type)",
					"TryImportCsvEx (BSTR separator, BSTR csvData, <a href=\"#IAddressAcceptRules915\" onclick=\"ScrollToEnum();return false;\">IpListType915</a> type) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list of the specified type. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.<br />The following CSV input line formats are accepted for bulk import of blocked or permitted IP addresses:<br /><br />\tIP address,[\"optional description\"]<br />\tDNS name,[\"optional description\"]<br />\tStart-IP,End-IP,[\"optional description\"]<br />\tIP/SignificantBits,[\"optional description\"]<br /><br />An IP address can be either IPv4 or IPv6. Descriptions are optional; if omitted, a default description will be added.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					},
					{
					parameter:"type: Defines the type of the CSV file."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IAddressAcceptRules915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IAddressAcceptRule915\" onclick=\"SetInterface('IAddressAcceptRule915', false);return false;\">IAddressAcceptRule915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IAddressAcceptRule915\" onclick=\"SetInterface('IAddressAcceptRule915', false);return false;\">IAddressAcceptRule915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IAddressAcceptRule915\" onclick=\"SetInterface('IAddressAcceptRule915', false);return false;\">IAddressAcceptRule915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IAddressAcceptRule915\" onclick=\"SetInterface('IAddressAcceptRule915', false);return false;\">IAddressAcceptRule915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IAddressAcceptRule915\" onclick=\"SetInterface('IAddressAcceptRule915', false);return false;\">IAddressAcceptRule915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IAddressAcceptRule915\" onclick=\"SetInterface('IAddressAcceptRule915', false);return false;\">IAddressAcceptRule915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"IpListType915",
				description:"IpListType_defaultType (0): Default IP list type<br />IpListType_blockedIPs (1): Import blocked IPs<br />IpListType_permittedIPs (2): Import permitted IPs"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IAddressAcceptRulesForIPv4_915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IAddressAcceptRuleForIPv4_915\" onclick=\"SetInterface('IAddressAcceptRuleForIPv4_915', false);return false;\">IAddressAcceptRuleForIPv4_915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IAddressAcceptRuleForIPv4_915\" onclick=\"SetInterface('IAddressAcceptRuleForIPv4_915', false);return false;\">IAddressAcceptRuleForIPv4_915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAddressAcceptRulesForIPv4_915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IAddressAcceptRuleForIPv4_915\" onclick=\"SetInterface('IAddressAcceptRuleForIPv4_915', false);return false;\">IAddressAcceptRuleForIPv4_915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Move (ULONG indexFrom, ULONG indexTo)",
				description:"Moves the entry with the specified zero-based index to the new location within the list."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				names:
				[
					"ImportCsvEx (BSTR separator, BSTR csvData, <a href=\"#IAddressAcceptRulesForIPv4_915\" onclick=\"ScrollToEnum();return false;\">IpListType915</a> type)",
					"TryImportCsvEx (BSTR separator, BSTR csvData, <a href=\"#IAddressAcceptRulesForIPv4_915\" onclick=\"ScrollToEnum();return false;\">IpListType915</a> type) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list of the specified type. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.<br />The following CSV input line formats are accepted for bulk import of blocked or permitted IP addresses:<br /><br />\tIP address,[\"optional description\"]<br />\tDNS name,[\"optional description\"]<br />\tStart-IP,End-IP,[\"optional description\"]<br />\tIP/SignificantBits,[\"optional description\"]<br /><br />An IP address can be either IPv4 or IPv6. Descriptions are optional; if omitted, a default description will be added.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					},
					{
					parameter:"type: Defines the type of the CSV file."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IAddressAcceptRulesForIPv4_915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IAddressAcceptRuleForIPv4_915\" onclick=\"SetInterface('IAddressAcceptRuleForIPv4_915', false);return false;\">IAddressAcceptRuleForIPv4_915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IAddressAcceptRuleForIPv4_915\" onclick=\"SetInterface('IAddressAcceptRuleForIPv4_915', false);return false;\">IAddressAcceptRuleForIPv4_915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IAddressAcceptRuleForIPv4_915\" onclick=\"SetInterface('IAddressAcceptRuleForIPv4_915', false);return false;\">IAddressAcceptRuleForIPv4_915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IAddressAcceptRuleForIPv4_915\" onclick=\"SetInterface('IAddressAcceptRuleForIPv4_915', false);return false;\">IAddressAcceptRuleForIPv4_915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IAddressAcceptRuleForIPv4_915\" onclick=\"SetInterface('IAddressAcceptRuleForIPv4_915', false);return false;\">IAddressAcceptRuleForIPv4_915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IAddressAcceptRuleForIPv4_915\" onclick=\"SetInterface('IAddressAcceptRuleForIPv4_915', false);return false;\">IAddressAcceptRuleForIPv4_915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"IpListType915",
				description:"IpListType_defaultType (0): Default IP list type<br />IpListType_blockedIPs (1): Import blocked IPs<br />IpListType_permittedIPs (2): Import permitted IPs"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IAddressRule915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"addressType &#x2192; <a href=\"#IAddressRule915\" onclick=\"ScrollToEnum();return false;\">AddressVer4Type915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.AddressVer4Type.ipv4",
				description:"Type of address to match."
				},
				{
				name:"ipv4range &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to specify a single IPv4 address (or interface), or a range of IPv4 addresses."
				},
				{
				name:"ipv4 &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"0.0.0.0\"",
				description:"The IPv4 address or interface to match."
				},
				{
				name:"ipv4start &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"0.0.0.0\"",
				description:"The beginning of the IPv4 address range to match (inclusive)."
				},
				{
				name:"ipv4end &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"255.255.255.255\"",
				description:"The end of the IPv4 address range to match (inclusive). Must be greater than \"Start IPv4 address\"."
				},
				{
				name:"locationType &#x2192; <a href=\"#IAddressRule915\" onclick=\"ScrollToEnum();return false;\">LocationType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.LocationType.country",
				description:"Type of location an IP address must originate from, in order to match this rule."
				},
				{
				name:"countryName &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Match any IP address originating from this country.",
				values:"Must match one of the listed country names."
				},
				{
				name:"continentName &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Match any IP address originating from this continent.",
				values:"Must match one of the listed continent names."
				},
				{
				name:"dnsNameAddress &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"*\"",
				description:"The DNS name to match. Wildcards can be used only if Lookup direction is set to Reverse lookup. A wildcard of the form '*.xxx' matches an entire domain. A single asterisk ('*') matches all names."
				},
				{
				name:"lookupDirection &#x2192; <a href=\"#IAddressRule915\" onclick=\"ScrollToEnum();return false;\">LookupDirection915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.LookupDirection.forward",
				description:"When matching this DNS rule, whether to use reverse or forward lookup.\n\nIn reverse lookup, each IP address that's being tested is looked up to get a DNS name. Then, the DNS name is checked against this rule.\n\nReverse lookup results are controlled by the internet service provider that controls the IP address. Reverse lookup can fail, and not all IP addresses have an associated DNS name.\n\nIn forward lookup, the DNS name is looked up to get one or more IP addresses via A and AAAA records. Then, the IP address being tested is compared to the looked up IPs.\n\nForward lookup results are controlled by the owner of the DNS name. Forward lookup can fail, and not all DNS names have an associated IP address."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAddressRule915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"AddressVer4Type915",
				description:"AddressVer4Type_ipv4 (0): IPv4<br />AddressVer4Type_location (4): Any IP from a country or continent<br />AddressVer4Type_dnsName (3): DNS name"
				},
				{
				name:"LocationType915",
				description:"LocationType_country (0): Country<br />LocationType_continent (1): Continent"
				},
				{
				name:"LookupDirection915",
				description:"LookupDirection_forward (0): Forward lookup<br />LookupDirection_reverse (1): Reverse lookup"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IAddressRuleIPv6_915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"addressType &#x2192; <a href=\"#IAddressRuleIPv6_915\" onclick=\"ScrollToEnum();return false;\">AddressVer6Type915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.AddressVer6Type.anyIP",
				description:"Type of address to match."
				},
				{
				name:"ipv4range &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to specify a single IPv4 address (or interface), or a range of IPv4 addresses."
				},
				{
				name:"ipv4 &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"0.0.0.0\"",
				description:"The IPv4 address or interface to match."
				},
				{
				name:"ipv4start &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"0.0.0.0\"",
				description:"The beginning of the IPv4 address range to match (inclusive)."
				},
				{
				name:"ipv4end &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"0.0.0.0\"",
				description:"The end of the IPv4 address range to match (inclusive). Must be greater than \"Start IPv4 address\"."
				},
				{
				name:"ipv6range &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to specify a single IPv6 address (or interface), or a range of IPv6 addresses."
				},
				{
				name:"ipv6 &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"::\"",
				description:"The IPv6 address or interface to match."
				},
				{
				name:"ipv6start &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"::\"",
				description:"The beginning of the IPv6 address range to match (inclusive)."
				},
				{
				name:"ipv6end &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"::\"",
				description:"The end of the IPv6 address range to match (inclusive). Must be greater than \"Start IPv6 address\"."
				},
				{
				name:"locationType &#x2192; <a href=\"#IAddressRuleIPv6_915\" onclick=\"ScrollToEnum();return false;\">LocationType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.LocationType.country",
				description:"Type of location an IP address must originate from, in order to match this rule."
				},
				{
				name:"countryName &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Match any IP address originating from this country.",
				values:"Must match one of the listed country names."
				},
				{
				name:"continentName &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Match any IP address originating from this continent.",
				values:"Must match one of the listed continent names."
				},
				{
				name:"dnsNameAddress &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"*\"",
				description:"The DNS name to match. Wildcards can be used only if Lookup direction is set to Reverse lookup. A wildcard of the form '*.xxx' matches an entire domain. A single asterisk ('*') matches all names."
				},
				{
				name:"lookupDirection &#x2192; <a href=\"#IAddressRuleIPv6_915\" onclick=\"ScrollToEnum();return false;\">LookupDirection915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.LookupDirection.forward",
				description:"When matching this DNS rule, whether to use reverse or forward lookup.\n\nIn reverse lookup, each IP address that's being tested is looked up to get a DNS name. Then, the DNS name is checked against this rule.\n\nReverse lookup results are controlled by the internet service provider that controls the IP address. Reverse lookup can fail, and not all IP addresses have an associated DNS name.\n\nIn forward lookup, the DNS name is looked up to get one or more IP addresses via A and AAAA records. Then, the IP address being tested is compared to the looked up IPs.\n\nForward lookup results are controlled by the owner of the DNS name. Forward lookup can fail, and not all DNS names have an associated IP address."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAddressRuleIPv6_915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"AddressVer6Type915",
				description:"AddressVer6Type_ipv4 (0): IPv4<br />AddressVer6Type_ipv6 (1): IPv6<br />AddressVer6Type_location (4): Any IP from a country or continent<br />AddressVer6Type_anyIP (2): Any IP address<br />AddressVer6Type_dnsName (3): DNS name"
				},
				{
				name:"LocationType915",
				description:"LocationType_country (0): Country<br />LocationType_continent (1): Continent"
				},
				{
				name:"LookupDirection915",
				description:"LookupDirection_forward (0): Forward lookup<br />LookupDirection_reverse (1): Reverse lookup"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IAllowAcceptInstructions915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"allowAccess &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether or not to allow access attempts matching this rule. If disabled, an access attempt matching this rule will be rejected, otherwise it will be accepted."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAllowAcceptInstructions915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IAllowAddressAcceptRule915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:2,
				name:"! addressRule &#x2192; <a href=\"#IAddressRuleIPv6_915\" onclick=\"SetInterface('IAddressRuleIPv6_915', false);return false;\">IAddressRuleIPv6_915</a> {get}",
				description:"Defines the criterion which the origin address of a connection must match, in order to match this rule."
				},
				{
				name:"onDnsError &#x2192; <a href=\"#IAllowAddressAcceptRule915\" onclick=\"ScrollToEnum();return false;\">OnDnsResolvingError915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnDnsResolvingError.next",
				description:"Action to take if this rule cannot be processed due to a DNS name resolve error."
				},
				{
				name:"useDefMaxCachedLookupAge &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the global default setting for the maximum cached lookup age."
				},
				{
				name:"maxCachedLookupAge &#x2192; ULONG {get} {set}",
				defaultValue:"default: 30",
				description:"Maximum number of seconds during which a cached DNS or IP lookup result can be reused. Set this to 0 to disable caching of DNS and IP lookup results and always perform a new lookup."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"An optional comment describing the purpose of this rule."
				},
				{
				name:"instr &#x2192; <a href=\"#IAllowAcceptInstructions915\" onclick=\"SetInterface('IAllowAcceptInstructions915', false);return false;\">IAllowAcceptInstructions915</a> {get}",
				description:"Defines what is to be done when a connection attempt is received whose origin address matches this rule."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IAllowAddressAcceptRule915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"OnDnsResolvingError915",
				description:"OnDnsResolvingError_next (0): Continue processing next rule<br />OnDnsResolvingError_deny (1): Deny connection"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IBindingIpv4_915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"serviceType &#x2192; <a href=\"#IBindingIpv4_915\" onclick=\"ScrollToEnum();return false;\">ServiceType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.ServiceType.ssh",
				description:"The protocol to use when a client connects to this binding. Separate bindings are required for separate protocols.\n\nThe SSH service is for clients that connect using SSH, SFTP, and/or SCP. Depending on server configuration, SSH clients can perform file transfer, access a terminal shell, execute programs, or initiate and accept TCP network connections using SSH port forwarding.\n\nThe SSH service uses Bitvise's implementation of SSH protocol version 2, implemented and maintained by Bitvise since the first versions of our server. The SSH service is available on any Windows version where the SSH Server runs.\n\nThe FTP service is for clients that connect using FTPS. This is FTP over TLS, also known as SSL. TLS/SSL is a different protocol than SSH, and the FTP protocol is unrelated to SFTP. The protocols have different histories, and very different designs. The only similarity is in their purpose.\n\nOnly TLS-secured FTP connections are supported. Unencrypted, plaintext FTP is not supported. Clients that connect using FTP can perform file transfer, assuming this is permitted in their account and group settings.\n\nThe SSH Server uses Windows Schannel for TLS support. As a result, the FTPS service is available on Windows Vista, Windows Server 2008, and higher. FTPS is not available on Windows XP and Windows Server 2003. This is because, on these old Windows versions, Schannel only supports outdated, insecure versions of SSL 2 and 3."
				},
				{
				flag:3,
				name:"&#155; ! listenInterface &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"0.0.0.0\"",
				description:"A local IPv4 address where the server will accept incoming connections. Specify 0.0.0.0 for the server to accept connections on all IPv4 interfaces. If you have multiple network interfaces and want to accept connections on only one of them, specify the IPv4 address of that interface (network card). If you specify 127.0.0.1, the server will only accept IPv4 connections from the same host.\n\nOn some computers, the server may run into problems binding to IPv4 interfaces other than 0.0.0.0 during system startup. If you encounter this issue, configure the server to use all IPv4 listening interfaces (0.0.0.0).\nFor FTP: If an FTP binding is removed or changed, existing FTP connections made to the original listening interface and port will need to reconnect to the new binding in order to be able to initiate any new directory listings or file transfers using FTP passive mode."
				},
				{
				flag:3,
				name:"&#155; ! port &#x2192; ULONG {get} {set}",
				defaultValue:"default: 22",
				description:"The port at which the server will accept connections. Clients that connect to this binding will need to connect to this port. If there are firewalls between the client and server, such firewalls will need to be configured to allow connections to the server on this port. If there are routers between the client and server, such routers will need to be configured to forward connections to this port.\n\nTo some extent, the SSH Server can manage Windows Firewall and router rules automatically. See the \"Windows Firewall\" settings section, and the setting \"Enable UPnP gateway forwarding\" in this section.\n\nDo not use a well-known port used by another common protocol, including FTP for SSH; SSH for FTP; or HTTP, SMTP, or POP3. Traffic on these ports may be handled specially by routers, firewalls and operating systems, preventing a successful connection. Port 443 (HTTPS) may be useful if other ports are blocked by firewalls.\n\nFor SSH: The standard SSH port number is 22. If the port number is configured to a value other than 22, it will need to be configured explicitly in clients that connect to this binding.\n\nSSH servers that accept connections on port 22 will be subject to password guessing attacks from random computers on the internet. To avoid anonymous password guessing, we recommend configuring any SSH bindings to use a random port between 1024 and 49151.\n\nFor FTP: The standard port number for the FTP control connection is 21. Like for SSH, we instead suggest using an arbitrary port between 1024 and 49151. This makes it less likely that strangers will try to connect and guess usernames and passwords.\n\nFTP uses additional data connections besides the control connection. This port number is for the control connection - the first connection the FTP client makes. FTP clients must connect to this port and use explicit TLS, started using the AUTH TLS command. Implicit TLS is not supported.\n\nIf an FTP binding is removed or changed, existing FTP connections made to the original listening interface and port will need to reconnect to the new binding in order to be able to initiate any new directory listings or file transfers using FTP passive mode."
				},
				{
				name:"proxyProtocol &#x2192; <a href=\"#IBindingIpv4_915\" onclick=\"ScrollToEnum();return false;\">ProxyProtocol915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.ProxyProtocol.disabled",
				description:"The PROXY protocol can be used by load balancers when relaying client connections to the SSH Server to convey the IP addresses of clients that are connecting.\n\nIf you are not using a load balancer or proxy in front of the SSH Server for this binding, configure this setting to Disabled.\n\nIf this binding receives connections from a proxy or load balancer that supports the PROXY protocol, this should be set to Required so that the SSH Server can receive client IP addresses from the proxy.\n\nThe PROXY protocol is not authenticated. For interface and port bindings where the PROXY protocol is Required, you must use firewall and router settings to ensure that connections cannot arrive from clients in a way that bypasses the proxy. If client connections are allowed to arrive at a PROXY-enabled binding without actually going through the proxy, clients can use this to impersonate arbitrary IP addresses.\n\nIn a master/follower configuration, if the PROXY protocol is enabled on a master SSH Server's binding, then if follower SSH Server instances connect to that binding, their connections must arrive through a proxy like other connections. If there are followers that connect directly - not through a proxy - a separate binding must be provided for them on the master where the PROXY protocol is disabled."
				},
				{
				name:"gatewayForward &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the SSH Server will attempt to configure any UPnP-enabled gateway or NAT device to forward external connections, such as connections from the internet, to this binding on the computer where the SSH Server runs.\n\nFor FTP, this setting affects both the port configured for the control connection, as well as the port configured for passive-mode data connections, under \"FTP passive port\".\n\nGateways can restrict available ports for UPnP. Manual configuration is often required for ports below 1024.\n\nFor IPv4, this feature will perform UPnP NAT forwarding. For IPv6, the SSH Server will attempt to open a UPnP pinhole. Currently, few devices support UPnP pinholes with IPv6."
				},
				{
				name:"externalPort &#x2192; ULONG {get} {set}",
				defaultValue:"default: 0",
				description:"When UPnP gateway forwarding is enabled, the external port which the SSH Server should use on the gateway device. If configured, then connections from outside the local network will need to connect to this external port, rather than the port on which the SSH Server is accepting connections on the computer where it runs.\n\nIf this value is 0, the external port will equal the listening port."
				},
				{
				name:"obfuscation &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Enable this to use SSH protocol obfuscation with this binding. Obfuscation is supported by some SSH clients, and makes it more difficult for an outside observer to detect that the protocol being used is SSH. The SSH Server can be configured to accept connections on some interface and port combinations with obfuscation, and on others without.\n\nImportant: If you enable obfuscation, only clients that support obfuscation, and have it enabled, and use the correct obfuscation keyword, will be able to connect via this binding. Clients that do not support obfuscation, or do not have it configured correctly, will not be able to connect, and will not receive useful information as to why not.\n\nThe obfuscation protocol implemented is obfuscated-openssh:\nhttps://github.com/brl/obfuscated-openssh/blob/master/README"
				},
				{
				name:"obfsKeyword &#x2192; <a href=\"#IPassword915\" onclick=\"SetInterface('IPassword915', false);return false;\">IPassword915</a> {get}",
				description:"If SSH protocol obfuscation is enabled, this setting configures a keyword that SSH clients have to use in order to successfully connect to the SSH Server at this interface and port. For clients and observers who do not know this keyword, it will be more difficult to determine that the protocol being provided by the server is SSH."
				},
				{
				name:"pasvPort &#x2192; ULONG {get} {set}",
				defaultValue:"default: 20020",
				description:"Port number on which to accept FTP passive-mode connections. We suggest using an arbitrary port between 1024 and 49151.\n\nTo accept FTP connections from the internet, this port must be open for connections, in addition to the FTP control port. However, users do not need to be informed of the passive port number. In order to connect, users only need to know the FTP control port (if it's not set to default).\n\nIf set to 0, the SSH Server will select a random port when it starts and use it for all passive-mode connections until the next time it is started. The value 0 should therefore not be used if you must manually configure a firewall or router to allow connections from clients.\n\nWhen FTP clients connect to this port for passive-mode connections, they must use TLS resume to associate the data connection with the control connection. FTP clients that do not use TLS resume are not supported. If they were, this would open a vulnerability in the form of port number guessing.\n\nChanging this value while the server is handling existing FTP connections may cause temporary problems with completing any in-progress passive-mode data connections. These problems will be resolved if the client tries to open a data connection again.\n\nThe setting Enable UPnP gateway forwarding also affects this port."
				},
				{
				name:"overridePasvAddr &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Enable to configure the IPv4 address that the server will return to a client that sends a PASV request. The client should be able to connect to this address to reach the server's FTP passive-mode interface.\n\nWhen this setting is disabled (default), the server will use the local IPv4 address that accepted the FTP connection. However, if the FTP control connection arrived over server-side NAT, 0.0.0.0 will be used instead, in order to protect server-side private network details.\n\nThis setting only affects PASV, not EPSV, and is configurable only for IPv4. When using EPSV, the client connects to the same address it used for the control connection, and IPv6 uses EPSV only."
				},
				{
				name:"pasvAddress &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"0.0.0.0\"",
				description:"The IPv4 address that the server should send to a client that sends a PASV request. For detailed information, see Override FTP passive address."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IBindingIpv4_915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ProxyProtocol915",
				description:"ProxyProtocol_disabled (0): Disabled<br />ProxyProtocol_required (1): Required"
				},
				{
				name:"ServiceType915",
				description:"ServiceType_ssh (0): SSH<br />ServiceType_ftp (1): FTP"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IBindingIpv6_915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"serviceType &#x2192; <a href=\"#IBindingIpv6_915\" onclick=\"ScrollToEnum();return false;\">ServiceType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.ServiceType.ssh",
				description:"The protocol to use when a client connects to this binding. Separate bindings are required for separate protocols.\n\nThe SSH service is for clients that connect using SSH, SFTP, and/or SCP. Depending on server configuration, SSH clients can perform file transfer, access a terminal shell, execute programs, or initiate and accept TCP network connections using SSH port forwarding.\n\nThe SSH service uses Bitvise's implementation of SSH protocol version 2, implemented and maintained by Bitvise since the first versions of our server. The SSH service is available on any Windows version where the SSH Server runs.\n\nThe FTP service is for clients that connect using FTPS. This is FTP over TLS, also known as SSL. TLS/SSL is a different protocol than SSH, and the FTP protocol is unrelated to SFTP. The protocols have different histories, and very different designs. The only similarity is in their purpose.\n\nOnly TLS-secured FTP connections are supported. Unencrypted, plaintext FTP is not supported. Clients that connect using FTP can perform file transfer, assuming this is permitted in their account and group settings.\n\nThe SSH Server uses Windows Schannel for TLS support. As a result, the FTPS service is available on Windows Vista, Windows Server 2008, and higher. FTPS is not available on Windows XP and Windows Server 2003. This is because, on these old Windows versions, Schannel only supports outdated, insecure versions of SSL 2 and 3."
				},
				{
				flag:3,
				name:"&#155; ! listenInterface &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"::\"",
				description:"A local IPv6 address where the server will accept incoming connections. Specify '::' for the server to accept connections on all IPv6 interfaces. If you have multiple network interfaces and want to accept connections on only one of them, specify the IPv6 address of that interface (network card). If you specify '::1', the server will only accept IPv6 connections from the same host.\n\nOn some computers, the server may run into problems binding to IPv6 interfaces other than '::' during system startup. If you encounter this issue, configure the server to use all IPv6 listening interfaces ('::').\nFor FTP: If an FTP binding is removed or changed, existing FTP connections made to the original listening interface and port will need to reconnect to the new binding in order to be able to initiate any new directory listings or file transfers using FTP passive mode."
				},
				{
				flag:3,
				name:"&#155; ! port &#x2192; ULONG {get} {set}",
				defaultValue:"default: 22",
				description:"The port at which the server will accept connections. Clients that connect to this binding will need to connect to this port. If there are firewalls between the client and server, such firewalls will need to be configured to allow connections to the server on this port. If there are routers between the client and server, such routers will need to be configured to forward connections to this port.\n\nTo some extent, the SSH Server can manage Windows Firewall and router rules automatically. See the \"Windows Firewall\" settings section, and the setting \"Enable UPnP gateway forwarding\" in this section.\n\nDo not use a well-known port used by another common protocol, including FTP for SSH; SSH for FTP; or HTTP, SMTP, or POP3. Traffic on these ports may be handled specially by routers, firewalls and operating systems, preventing a successful connection. Port 443 (HTTPS) may be useful if other ports are blocked by firewalls.\n\nFor SSH: The standard SSH port number is 22. If the port number is configured to a value other than 22, it will need to be configured explicitly in clients that connect to this binding.\n\nSSH servers that accept connections on port 22 will be subject to password guessing attacks from random computers on the internet. To avoid anonymous password guessing, we recommend configuring any SSH bindings to use a random port between 1024 and 49151.\n\nFor FTP: The standard port number for the FTP control connection is 21. Like for SSH, we instead suggest using an arbitrary port between 1024 and 49151. This makes it less likely that strangers will try to connect and guess usernames and passwords.\n\nFTP uses additional data connections besides the control connection. This port number is for the control connection - the first connection the FTP client makes. FTP clients must connect to this port and use explicit TLS, started using the AUTH TLS command. Implicit TLS is not supported.\n\nIf an FTP binding is removed or changed, existing FTP connections made to the original listening interface and port will need to reconnect to the new binding in order to be able to initiate any new directory listings or file transfers using FTP passive mode."
				},
				{
				name:"proxyProtocol &#x2192; <a href=\"#IBindingIpv6_915\" onclick=\"ScrollToEnum();return false;\">ProxyProtocol915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.ProxyProtocol.disabled",
				description:"The PROXY protocol can be used by load balancers when relaying client connections to the SSH Server to convey the IP addresses of clients that are connecting.\n\nIf you are not using a load balancer or proxy in front of the SSH Server for this binding, configure this setting to Disabled.\n\nIf this binding receives connections from a proxy or load balancer that supports the PROXY protocol, this should be set to Required so that the SSH Server can receive client IP addresses from the proxy.\n\nThe PROXY protocol is not authenticated. For interface and port bindings where the PROXY protocol is Required, you must use firewall and router settings to ensure that connections cannot arrive from clients in a way that bypasses the proxy. If client connections are allowed to arrive at a PROXY-enabled binding without actually going through the proxy, clients can use this to impersonate arbitrary IP addresses.\n\nIn a master/follower configuration, if the PROXY protocol is enabled on a master SSH Server's binding, then if follower SSH Server instances connect to that binding, their connections must arrive through a proxy like other connections. If there are followers that connect directly - not through a proxy - a separate binding must be provided for them on the master where the PROXY protocol is disabled."
				},
				{
				name:"gatewayForward &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the SSH Server will attempt to configure any UPnP-enabled gateway or NAT device to forward external connections, such as connections from the internet, to this binding on the computer where the SSH Server runs.\n\nFor FTP, this setting affects both the port configured for the control connection, as well as the port configured for passive-mode data connections, under \"FTP passive port\".\n\nGateways can restrict available ports for UPnP. Manual configuration is often required for ports below 1024.\n\nFor IPv4, this feature will perform UPnP NAT forwarding. For IPv6, the SSH Server will attempt to open a UPnP pinhole. Currently, few devices support UPnP pinholes with IPv6."
				},
				{
				name:"externalPort &#x2192; ULONG {get} {set}",
				defaultValue:"default: 0",
				description:"When UPnP gateway forwarding is enabled, the external port which the SSH Server should use on the gateway device. If configured, then connections from outside the local network will need to connect to this external port, rather than the port on which the SSH Server is accepting connections on the computer where it runs.\n\nIf this value is 0, the external port will equal the listening port."
				},
				{
				name:"obfuscation &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Enable this to use SSH protocol obfuscation with this binding. Obfuscation is supported by some SSH clients, and makes it more difficult for an outside observer to detect that the protocol being used is SSH. The SSH Server can be configured to accept connections on some interface and port combinations with obfuscation, and on others without.\n\nImportant: If you enable obfuscation, only clients that support obfuscation, and have it enabled, and use the correct obfuscation keyword, will be able to connect via this binding. Clients that do not support obfuscation, or do not have it configured correctly, will not be able to connect, and will not receive useful information as to why not.\n\nThe obfuscation protocol implemented is obfuscated-openssh:\nhttps://github.com/brl/obfuscated-openssh/blob/master/README"
				},
				{
				name:"obfsKeyword &#x2192; <a href=\"#IPassword915\" onclick=\"SetInterface('IPassword915', false);return false;\">IPassword915</a> {get}",
				description:"If SSH protocol obfuscation is enabled, this setting configures a keyword that SSH clients have to use in order to successfully connect to the SSH Server at this interface and port. For clients and observers who do not know this keyword, it will be more difficult to determine that the protocol being provided by the server is SSH."
				},
				{
				name:"pasvPort &#x2192; ULONG {get} {set}",
				defaultValue:"default: 20020",
				description:"Port number on which to accept FTP passive-mode connections. We suggest using an arbitrary port between 1024 and 49151.\n\nTo accept FTP connections from the internet, this port must be open for connections, in addition to the FTP control port. However, users do not need to be informed of the passive port number. In order to connect, users only need to know the FTP control port (if it's not set to default).\n\nIf set to 0, the SSH Server will select a random port when it starts and use it for all passive-mode connections until the next time it is started. The value 0 should therefore not be used if you must manually configure a firewall or router to allow connections from clients.\n\nWhen FTP clients connect to this port for passive-mode connections, they must use TLS resume to associate the data connection with the control connection. FTP clients that do not use TLS resume are not supported. If they were, this would open a vulnerability in the form of port number guessing.\n\nChanging this value while the server is handling existing FTP connections may cause temporary problems with completing any in-progress passive-mode data connections. These problems will be resolved if the client tries to open a data connection again.\n\nThe setting Enable UPnP gateway forwarding also affects this port."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IBindingIpv6_915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ProxyProtocol915",
				description:"ProxyProtocol_disabled (0): Disabled<br />ProxyProtocol_required (1): Required"
				},
				{
				name:"ServiceType915",
				description:"ServiceType_ssh (0): SSH<br />ServiceType_ftp (1): FTP"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IBindings915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"ipv4 &#x2192; <a href=\"#IBindingsIpv4_915\" onclick=\"SetInterface('IBindingsIpv4_915', false);return false;\">IBindingsIpv4_915</a> {get}",
				description:"A list of IPv4 interfaces and ports where the SSH Server will accept incoming SSH client connections."
				},
				{
				name:"ipv6 &#x2192; <a href=\"#IBindingsIpv6_915\" onclick=\"SetInterface('IBindingsIpv6_915', false);return false;\">IBindingsIpv6_915</a> {get}",
				description:"A list of IPv6 interfaces and ports where the SSH Server will accept incoming SSH client connections."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IBindings915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IBindingsIpv4_915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IBindingIpv4_915\" onclick=\"SetInterface('IBindingIpv4_915', false);return false;\">IBindingIpv4_915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IBindingIpv4_915\" onclick=\"SetInterface('IBindingIpv4_915', false);return false;\">IBindingIpv4_915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IBindingsIpv4_915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IBindingIpv4_915\" onclick=\"SetInterface('IBindingIpv4_915', false);return false;\">IBindingIpv4_915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IBindingsIpv4_915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IBindingIpv4_915\" onclick=\"SetInterface('IBindingIpv4_915', false);return false;\">IBindingIpv4_915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IBindingIpv4_915\" onclick=\"SetInterface('IBindingIpv4_915', false);return false;\">IBindingIpv4_915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IBindingIpv4_915\" onclick=\"SetInterface('IBindingIpv4_915', false);return false;\">IBindingIpv4_915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IBindingIpv4_915\" onclick=\"SetInterface('IBindingIpv4_915', false);return false;\">IBindingIpv4_915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IBindingIpv4_915\" onclick=\"SetInterface('IBindingIpv4_915', false);return false;\">IBindingIpv4_915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IBindingIpv4_915\" onclick=\"SetInterface('IBindingIpv4_915', false);return false;\">IBindingIpv4_915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IBindingsIpv6_915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IBindingIpv6_915\" onclick=\"SetInterface('IBindingIpv6_915', false);return false;\">IBindingIpv6_915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IBindingIpv6_915\" onclick=\"SetInterface('IBindingIpv6_915', false);return false;\">IBindingIpv6_915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IBindingsIpv6_915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IBindingIpv6_915\" onclick=\"SetInterface('IBindingIpv6_915', false);return false;\">IBindingIpv6_915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IBindingsIpv6_915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IBindingIpv6_915\" onclick=\"SetInterface('IBindingIpv6_915', false);return false;\">IBindingIpv6_915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IBindingIpv6_915\" onclick=\"SetInterface('IBindingIpv6_915', false);return false;\">IBindingIpv6_915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IBindingIpv6_915\" onclick=\"SetInterface('IBindingIpv6_915', false);return false;\">IBindingIpv6_915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IBindingIpv6_915\" onclick=\"SetInterface('IBindingIpv6_915', false);return false;\">IBindingIpv6_915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IBindingIpv6_915\" onclick=\"SetInterface('IBindingIpv6_915', false);return false;\">IBindingIpv6_915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IBindingIpv6_915\" onclick=\"SetInterface('IBindingIpv6_915', false);return false;\">IBindingIpv6_915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IBssCfg915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"helpExpr &#x2192; BSTR {get}",
				description:"A formal description of expressions used in AllWhere, FirstWhere and EraseAll:<br />  [...] means the part inside square brackets is optional<br />  [...]* means one or more repetitions of an optional part<br />  \"...\" means the quoted text appears literally<br />  ... | ... means one of the options appears<br />  { ... } means the parts inside curly brackets appear together<br /><br />  mainExpr := expr | { [\"not\"] [\"(\"] mainExpr [eop mainExpr]* [\")\"] }<br />  eop := \"and\" | \"or\"<br />  expr := [\"not\"] { simpleExpr | advancedExpr }<br />  simpleExpr := { \"any\" memberName } | { memberName sop \"?\" }<br />  advancedExpr := memberName [\"not\"] aop \"(\" mainExpr \")\"<br />  sop := \"eq\" | \"ne\" | \"ge\" | \"gt\" | \"le\" | \"lt\" | \"startsWith\" | \"endsWith\" | \"contains\"<br />  aop := \"contains\"<br /><br />Examples:<br />  $cfg.settings.access.virtAccounts.AllWhere1(\"(virtAccount endsWith ? )\", \"userNameEnding\")<br />  $cfg.settings.access.virtAccounts.AllWhere1(\"xfer.mountPoints.count eq ?\", 1)<br />  $cfg.settings.access.virtAccounts.FirstWhere1(\"virtAccount eq ? and any xfer.mountPoints\", \"userName\")<br />  $cfg.settings.access.virtAccounts.AllWhere1(\"xfer.mountPoints not contains(realRootPath startsWith ? )\", \"C:\\SftpRoot\")"
				},
				{
				name:"version &#x2192; <a href=\"#IVersion915\" onclick=\"SetInterface('IVersion915', false);return false;\">IVersion915</a> {get}",
				description:"Version numbers for the current SSH Server configuration object."
				},
				{
				name:"actState &#x2192; <a href=\"#IActState915\" onclick=\"SetInterface('IActState915', false);return false;\">IActState915</a> {get}",
				description:"Information about the SSH Server's activation state."
				},
				{
				name:"instances &#x2192; <a href=\"#IInstances915\" onclick=\"SetInterface('IInstances915', false);return false;\">IInstances915</a> {get}",
				description:"Information about installed SSH Server instances."
				},
				{
				name:"pwdCache &#x2192; <a href=\"#IPasswordCache915\" onclick=\"SetInterface('IPasswordCache915', false);return false;\">IPasswordCache915</a> {get}",
				description:"Access and manage the SSH Server's password cache."
				},
				{
				name:"popupAndTray &#x2192; <a href=\"#IPopupAndTray915\" onclick=\"SetInterface('IPopupAndTray915', false);return false;\">IPopupAndTray915</a> {get}",
				description:"Access and manage the SSH Server's popup and tray settings."
				},
				{
				name:"certificates &#x2192; <a href=\"#ICertificates915\" onclick=\"SetInterface('ICertificates915', false);return false;\">ICertificates915</a> {get}",
				description:"Access and manage the SSH Server's certificates for FTPS connections."
				},
				{
				name:"keypairs &#x2192; <a href=\"#IHostKeypairs915\" onclick=\"SetInterface('IHostKeypairs915', false);return false;\">IHostKeypairs915</a> {get}",
				description:"Access and manage the SSH Server's host authentication keypairs for SSH connections."
				},
				{
				name:"settings &#x2192; <a href=\"#ISettings915\" onclick=\"SetInterface('ISettings915', false);return false;\">ISettings915</a> {get}",
				description:"Access and manage main settings. Use Lock, Load, Save and Unlock to load and store main settings for the current SSH Server instance."
				},
				{
				name:"instanceSettings &#x2192; <a href=\"#IInstanceTypeSettings915\" onclick=\"SetInterface('IInstanceTypeSettings915', false);return false;\">IInstanceTypeSettings915</a> {get}",
				description:"Access and manage instance type settings. Use Lock, Load, Save, Unlock to load and store instance type settings for the current SSH Server instance."
				},
				{
				name:"enums &#x2192; <a href=\"#IEnumerations915\" onclick=\"SetInterface('IEnumerations915', false);return false;\">IEnumerations915</a> {get}",
				description:"Names and values of enumerations used in SSH Server configuration and settings."
				}
			],
			methods:
			[
				{
				name:"SetInstance (BSTR instance)",
				description:"When multiple concurrent SSH Server instances are installed, selects the instance to work with.",
				parameters:
				[
					{
					parameter:"instance: Name of an installed SSH Server instance."
					}
				]
				},
				{
				name:"CleanUpOnProcessExit (ULONG pid)",
				description:"On Windows Vista and older, resources do not get freed automatically when an application using BssCfgManip - including a PowerShell window - is closed. If this function is called, BssCfgManip will observe the specified process and free resources - for example, unlock settings - when that process is terminated.",
				parameters:
				[
					{
					parameter:"pid: The Windows process ID."
					}
				]
				},
				{
				name:"SignalServerCfgChanged ()",
				description:"Signals the current SSH Server instance to process changes in settings, instance type settings, and/or host authentication keypairs. All aspects of the SSH Server's configuration must be unlocked for the SSH Server to process changes."
				},
				{
				name:"LoadText (BSTR fileName) &#x2192; BSTR",
				description:"Alias for LoadTextCP defaulting to system default ANSI code page (CP_ACP, decimal value 0).",
				parameters:
				[
					{
					parameter:"fileName: Path to a file to be loaded."
					}
				]
				},
				{
				name:"LoadTextUnicode (BSTR fileName) &#x2192; BSTR",
				description:"Alias for LoadTextCP defaulting to little-endian UTF-16 encoding (CP_UTF16, decimal value 1200).",
				parameters:
				[
					{
					parameter:"fileName: Path to a file to be loaded."
					}
				]
				},
				{
				name:"LoadTextCP (BSTR fileName, UINT codePage) &#x2192; BSTR",
				description:"Loads text from a file in a textual format as would be saved by one of the SaveText functions. If the file starts with a BOM for UTF-8 or UTF-16 (little or big-endian), the encoding indicated by the BOM overrides the specified code page. If there is no BOM, then the specified encoding is used.",
				parameters:
				[
					{
					parameter:"fileName: Path to a file to be loaded."
					},
					{
					parameter:"codePage: If encoding detection fails, the Windows code page to use when reading file content. For the system default ANSI code page, use 0. For UTF-8, use 65001. For little-endian UTF-16, use 1200. For big-endian UTF-16, use 1201."
					}
				]
				},
				{
				name:"SaveText (BSTR text, BSTR fileName)",
				description:"Alias for SaveTextCP using the system default ANSI code page (CP_ACP, decimal value 0).",
				parameters:
				[
					{
					parameter:"text: The text to be saved."
					},
					{
					parameter:"fileName: Path to a file in which to store the text."
					}
				]
				},
				{
				name:"SaveTextUnicode (BSTR text, BSTR fileName)",
				description:"Alias for SaveTextCP using little-endian UTF-16 encoding (CP_UTF16, decimal value 1200).",
				parameters:
				[
					{
					parameter:"text: The text to be saved."
					},
					{
					parameter:"fileName: Path to a file in which to store the text."
					}
				]
				},
				{
				name:"SaveTextCP (BSTR text, BSTR fileName, UINT codePage)",
				description:"Saves text into a file in a textual format. Uses the specified encoding. Writes a BOM when using UTF-8 or UTF-16.",
				parameters:
				[
					{
					parameter:"text: The text to be saved."
					},
					{
					parameter:"fileName: Path to a file in which to store the text."
					},
					{
					parameter:"codePage: The Windows code page identifying the output encoding. For the system default ANSI code page, use 0. For UTF-8, use 65001. For little-endian UTF-16, use 1200. For big-endian UTF-16, use 1201."
					}
				]
				}
			]
			},
			{
			name:"ICertificate915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"employed &#x2192; BOOL {get}",
				description:"Returns true if the certificate is employed."
				},
				{
				name:"index &#x2192; ULONG {get}",
				description:"Returns the index of the certificate. Can be used to find the certificate in the Certificates interface."
				},
				{
				name:"type &#x2192; <a href=\"#ICertificate915\" onclick=\"ScrollToEnum();return false;\">CertificateType915</a> {get}",
				description:"The type of the certificate."
				},
				{
				name:"keyBits &#x2192; ULONG {get}",
				description:"The size of the certificate's key in bits."
				},
				{
				name:"alg &#x2192; BSTR {get}",
				description:"Information about the certificate's algorithm."
				},
				{
				name:"algId &#x2192; <a href=\"#ICertificate915\" onclick=\"ScrollToEnum();return false;\">CertAlgId915</a> {get}",
				description:"Certificate algorithm ID."
				},
				{
				name:"insertTime &#x2192; BSTR {get}",
				description:"The insert time of the certificate."
				},
				{
				name:"comment &#x2192; BSTR {get} {set}",
				description:"Gets or sets a comment associated with the certificate."
				},
				{
				name:"validFrom &#x2192; BSTR {get}",
				description:"The valid-from time of the certificate."
				},
				{
				name:"validTo &#x2192; BSTR {get}",
				description:"The valid-to time of the certificate."
				},
				{
				name:"issuedTo &#x2192; BSTR {get}",
				description:"The Common Name to which the certificate is issued."
				},
				{
				name:"subjectAltNames &#x2192; BSTR {get}",
				description:"A comma-separated list of Subject Alternative Names."
				},
				{
				name:"issuedBy &#x2192; BSTR {get}",
				description:"The name of the certificate issuer."
				},
				{
				name:"serial &#x2192; BSTR {get}",
				description:"The serial number or ID of the certificate."
				},
				{
				name:"sha1 &#x2192; BSTR {get}",
				description:"The SHA-1 hash of the certificate."
				},
				{
				name:"sha256 &#x2192; BSTR {get}",
				description:"The SHA-256 hash of the certificate."
				}
			],
			methods:
			[
				{
				name:"ExportPublicKeyToBase64String (<a href=\"#ICertificate915\" onclick=\"ScrollToEnum();return false;\">CertificateFormat915</a> format) &#x2192; BSTR",
				description:"Exports a certificate's public key to a Base64-encoded string in the requested format.",
				parameters:
				[
					{
					parameter:"format: The export format. X.509 and PFX formats are supported for this operation."
					}
				]
				},
				{
				name:"ExportPublicKeyToFile (BSTR fileName, <a href=\"#ICertificate915\" onclick=\"ScrollToEnum();return false;\">CertificateFormat915</a> format)",
				description:"Exports a certificate's public key to a file in the requested format.",
				parameters:
				[
					{
					parameter:"fileName: Path to the output file."
					},
					{
					parameter:"format: The export format. X.509 and PFX formats are supported for this operation."
					}
				]
				},
				{
				name:"ExportToBase64String (<a href=\"#ICertificate915\" onclick=\"ScrollToEnum();return false;\">CertificateFormat915</a> format, BSTR pass) &#x2192; BSTR",
				description:"Exports a certificate to a Base64-encoded string in the requested format.",
				parameters:
				[
					{
					parameter:"format: The export format. Bitvise, PFX and PEM formats are supported for this operation."
					},
					{
					parameter:"pass: Password with which to protect the exported certificate. May be empty."
					}
				]
				},
				{
				name:"ExportToFile (BSTR fileName, <a href=\"#ICertificate915\" onclick=\"ScrollToEnum();return false;\">CertificateFormat915</a> format, BSTR pass)",
				description:"Exports a certificate to a file in the requested format.",
				parameters:
				[
					{
					parameter:"fileName: Path to the output file."
					},
					{
					parameter:"format: The export format. Bitvise, PFX and PEM formats are supported for this operation."
					},
					{
					parameter:"pass: Password with which to protect the exported certificate. May be empty."
					}
				]
				}
			],
			enums:
			[
				{
				name:"CertificateFormat915",
				description:"CertificateFormat_bitvise: 0<br />CertificateFormat_x509: 1<br />CertificateFormat_pfx: 2<br />CertificateFormat_pem: 3"
				},
				{
				name:"CertificateType915",
				description:"CertificateType_certificate: 0<br />CertificateType_privateKey: 1<br />CertificateType_nonEmployableCertificate: 2"
				}
			]
			},
			{
			name:"ICertificates915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"The number of certificates configured for the current SSH Server instance."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#ICertificate915\" onclick=\"SetInterface('ICertificate915', false);return false;\">ICertificate915</a>)  {get}",
				description:"Allows enumerating the SSH Server's certificates and accessing them by index."
				},
				{
				name:"employed &#x2192; <a href=\"#ICertificate915\" onclick=\"SetInterface('ICertificate915', false);return false;\">ICertificate915</a>",
				description:"The employed certificate. Null if no certificate is employed."
				},
				{
				name:"employedIndex &#x2192; ULONG {get}",
				description:"The index of the employed certificate. If no certificate is employed, returns an error."
				},
				{
				name:"existsEmployed &#x2192; BOOL {get}",
				description:"Returns true if any certificate is employed."
				},
				{
				name:"locked &#x2192; BOOL {get}",
				description:"The lock status of certificates for the current SSH Server instance."
				}
			],
			methods:
			[
				{
				name:"Lock ()",
				description:"Locks certificates for the current SSH Server instance. Certificates cannot be edited by other processes until Unlock is called."
				},
				{
				name:"Unlock ()",
				description:"Unlocks certificates for the current SSH Server instance."
				},
				{
				name:"Load ()",
				description:"Loads the certificates configured for the current SSH Server instance so that they become accessible through this object."
				},
				{
				name:"Save (BOOL autoBackup)",
				description:"Saves certificates for the current SSH Server instance.",
				parameters:
				[
					{
					parameter:"autoBackup: If true, saves a backup file of previous certificate state. If false, no automatic backup is created."
					}
				]
				},
				{
				name:"Backup ()",
				description:"Creates a backup of the certificate configuration for the current SSH Server instance."
				},
				{
				names:
				[
					"GenerateNewRequest (BSTR commonName, BSTR subjectAltNames, BSTR countryCode, BSTR state, BSTR locality, BSTR organization, BSTR organizationUnit) &#x2192; BSTR",
					"GenerateNewRequestEx (BSTR commonName, BSTR subjectAltNames, BSTR countryCode, BSTR state, BSTR locality, BSTR organization, BSTR organizationUnit, [ref] BSTR certRequest) &#x2192; <a href=\"#ICertificate915\" onclick=\"SetInterface('ICertificate915', false);return false;\">ICertificate915</a>",
					"GenerateNewRequestWithSize (BSTR commonName, BSTR subjectAltNames, BSTR countryCode, BSTR state, BSTR locality, BSTR organization, BSTR organizationUnit, ULONG keySize) &#x2192; BSTR",
					"GenerateNewRequestWithSizeEx (BSTR commonName, BSTR subjectAltNames, BSTR countryCode, BSTR state, BSTR locality, BSTR organization, BSTR organizationUnit, ULONG keySize, [ref] BSTR certRequest) &#x2192; <a href=\"#ICertificate915\" onclick=\"SetInterface('ICertificate915', false);return false;\">ICertificate915</a>"
				],
				description:"Generates a new RSA certificate request. Returns a Certificate Signing Request. The CSR needs to be sent to a certificate authority for signing. The 'Ex' versions of the function return an interface providing access to the private key.",
				parameters:
				[
					{
					parameter:"commonName: The common name (CN). Should reflect the domain name to which a client will connect. For example: 'server.example.com'."
					},
					{
					parameter:"subjectAltNames: A comma-separated or newline-separated list of Subject Alternative Names (SANs). Use this to specify any alternative DNS names to which clients will connect. For example: 'first.example,second.example'."
					},
					{
					parameter:"countryCode: The ISO two-letter country code."
					},
					{
					parameter:"state: State or province."
					},
					{
					parameter:"locality: Locality or city."
					},
					{
					parameter:"organization: Organization."
					},
					{
					parameter:"organizationUnit: Organization unit."
					},
					{
					parameter:"keySize: The size, in bits, of the RSA key to generate."
					},
					{
					parameter:"certRequest: An out parameter. Returns the generated Certificate Signing Request."
					}
				]
				},
				{
				names:
				[
					"GenerateNewSelfSignedCertificate (BSTR commonName, BSTR subjectAltNames, BSTR countryCode, BSTR state, BSTR locality, BSTR organization, BSTR organizationUnit, BOOL autoEmploy)",
					"GenerateNewSelfSignedCertificateEx (BSTR commonName, BSTR subjectAltNames, BSTR countryCode, BSTR state, BSTR locality, BSTR organization, BSTR organizationUnit, BOOL autoEmploy) &#x2192; <a href=\"#ICertificate915\" onclick=\"SetInterface('ICertificate915', false);return false;\">ICertificate915</a>",
					"GenerateNewSelfSignedCertificateWithSize (BSTR commonName, BSTR subjectAltNames, BSTR countryCode, BSTR state, BSTR locality, BSTR organization, BSTR organizationUnit, ULONG keySize, BOOL autoEmploy)",
					"GenerateNewSelfSignedCertificateWithSizeEx (BSTR commonName, BSTR subjectAltNames, BSTR countryCode, BSTR state, BSTR locality, BSTR organization, BSTR organizationUnit, ULONG keySize, BOOL autoEmploy) &#x2192; <a href=\"#ICertificate915\" onclick=\"SetInterface('ICertificate915', false);return false;\">ICertificate915</a>"
				],
				description:"Generates a new RSA self-signed certificate for the specified Common Name. The 'Ex' versions of the function return the generated self-signed certificate.",
				parameters:
				[
					{
					parameter:"commonName: The common name (CN). Should reflect the domain name to which a client will connect. For example: 'server.example.com'."
					},
					{
					parameter:"subjectAltNames: A comma-separated or newline-separated list of Subject Alternative Names (SANs). Use this to specify any alternative DNS names to which clients will connect. For example: 'first.example,second.example'."
					},
					{
					parameter:"countryCode: The ISO two-letter country code."
					},
					{
					parameter:"state: State or province."
					},
					{
					parameter:"locality: Locality or city."
					},
					{
					parameter:"organization: Organization."
					},
					{
					parameter:"organizationUnit: Organization unit."
					},
					{
					parameter:"keySize: The size, in bits, of the RSA key to generate."
					},
					{
					parameter:"autoEmploy: If true, the generated certificate will be employed immediately. If false, the certificate will not be automatically employed."
					}
				]
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#ICertificate915\" onclick=\"SetInterface('ICertificate915', false);return false;\">ICertificate915</a>",
				description:"Returns the certificate with the specified index.",
				parameters:
				[
					{
					parameter:"index: Zero-based index of the certificate."
					}
				]
				},
				{
				name:"Employ (ULONG index)",
				description:"Employs a certificate.",
				parameters:
				[
					{
					parameter:"index: Zero-based index of the certificate."
					}
				]
				},
				{
				name:"Dismiss ()",
				description:"Dismisses the employed certificate."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes a certificate.",
				parameters:
				[
					{
					parameter:"index: Zero-based index of the certificate."
					}
				]
				},
				{
				name:"Clear ()",
				description:"Removes all certificates for the current SSH Server instance."
				},
				{
				names:
				[
					"ImportFromFile (BSTR fileName, BSTR pass)",
					"ImportFromFileEx (BSTR fileName, BSTR pass) &#x2192; SAFEARRAY(<a href=\"#ICertificate915\" onclick=\"SetInterface('ICertificate915', false);return false;\">ICertificate915</a>)"
				],
				description:"Imports certificates from a file. The 'Ex' version of the function returns the imported certificates.",
				parameters:
				[
					{
					parameter:"fileName: Path to a file containing a certificate."
					},
					{
					parameter:"pass: Password, if any, to decrypt the certificate."
					}
				]
				},
				{
				names:
				[
					"ImportFromBase64String (BSTR val, BSTR pass)",
					"ImportFromBase64StringEx (BSTR val, BSTR pass) &#x2192; SAFEARRAY(<a href=\"#ICertificate915\" onclick=\"SetInterface('ICertificate915', false);return false;\">ICertificate915</a>)"
				],
				description:"Imports certificates from a string. The 'Ex' version of the function returns the imported certificates.",
				parameters:
				[
					{
					parameter:"val: String containing a certificate."
					},
					{
					parameter:"pass: Password, if any, to decrypt the certificate."
					}
				]
				},
				{
				name:"ExportToFile (BSTR fileName, BSTR pass)",
				description:"Exports all certificates into a file using a binary Bitvise format.",
				parameters:
				[
					{
					parameter:"fileName: Path to the output file."
					},
					{
					parameter:"pass: Password with which to protect the exported certificates. May be empty."
					}
				]
				},
				{
				name:"ExportToBase64String (BSTR pass) &#x2192; BSTR",
				description:"Exports all certificates to a Base64-encoded string using a binary Bitvise format.",
				parameters:
				[
					{
					parameter:"pass: Password with which to protect the exported certificates. May be empty."
					}
				]
				}
			]
			},
			{
			name:"IClientAuthKeypair915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"isSet &#x2192; BOOL {get}",
				description:"True if the keypair is set."
				},
				{
				name:"supported &#x2192; BOOL {get}",
				description:"True if the keypair is supported by the currently used cryptographic provider."
				},
				{
				name:"keyBits &#x2192; ULONG {get}",
				description:"The size of the keypair in bits."
				},
				{
				name:"effectiveSecurity &#x2192; ULONG {get}",
				description:"Equals keyBits, except for gimped DSA keys generated by outdated OpenSSH and derivatives."
				},
				{
				name:"alg &#x2192; BSTR {get}",
				description:"Information about the keypair's algorithm."
				},
				{
				name:"algId &#x2192; <a href=\"#IClientAuthKeypair915\" onclick=\"ScrollToEnum();return false;\">KeypairAlgId915</a> {get}",
				description:"The keypair algorithm ID."
				},
				{
				name:"comment &#x2192; BSTR {get} {set}",
				description:"Gets or sets a comment associated with the keypair."
				},
				{
				name:"md5 &#x2192; BSTR {get}",
				description:"The MD5 fingerprint of the keypair."
				},
				{
				name:"bubbleBabble &#x2192; BSTR {get}",
				description:"The Bubble-Babble fingerprint of the keypair."
				},
				{
				name:"sha256 &#x2192; BSTR {get}",
				description:"The SHA-256 fingerprint of the keypair."
				},
				{
				name:"crypt &#x2192; BSTR {get} {set}",
				description:"The complete hex-encoded information about the keypair."
				},
				{
				name:"info &#x2192; BSTR {get}",
				description:"A textual description of the keypair."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IClientAuthKeypair915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"GenerateNewKeypair (<a href=\"#IClientAuthKeypair915\" onclick=\"ScrollToEnum();return false;\">KeypairAlgId915</a> keypairAlgId)",
				description:"Generates a new keypair.",
				parameters:
				[
					{
					parameter:"keypairAlgId: The keypair algorithm ID."
					}
				]
				},
				{
				name:"GenerateNewKeypairWithSize (<a href=\"#IClientAuthKeypair915\" onclick=\"ScrollToEnum();return false;\">KeypairAlgId915</a> keypairAlgId, ULONG keySize)",
				description:"Generates a new keypair of specified size.",
				parameters:
				[
					{
					parameter:"keypairAlgId: The keypair algorithm ID."
					},
					{
					parameter:"keySize: Keypair size, in bits."
					}
				]
				},
				{
				name:"ExportPublicKeyToBase64String (<a href=\"#IClientAuthKeypair915\" onclick=\"ScrollToEnum();return false;\">PublicKeyFormat915</a> format) &#x2192; BSTR",
				description:"Exports the public key for this keypair to a Base64-encoded string.",
				parameters:
				[
					{
					parameter:"format: The export format."
					}
				]
				},
				{
				name:"ExportPublicKeyToFile (BSTR fileName, <a href=\"#IClientAuthKeypair915\" onclick=\"ScrollToEnum();return false;\">PublicKeyFormat915</a> format)",
				description:"Exports the public key for this keypair to a file in the requested format.",
				parameters:
				[
					{
					parameter:"fileName: Path to the output file."
					},
					{
					parameter:"format: The export format."
					}
				]
				},
				{
				name:"ExportToBase64String (<a href=\"#IClientAuthKeypair915\" onclick=\"ScrollToEnum();return false;\">KeypairFormat915</a> format, BSTR pass) &#x2192; BSTR",
				description:"Exports the full keypair to a Base64-encoded string.",
				parameters:
				[
					{
					parameter:"format: The export format."
					},
					{
					parameter:"pass: Password with which to protect the exported keypair. May be empty."
					}
				]
				},
				{
				name:"ExportToFile (BSTR fileName, <a href=\"#IClientAuthKeypair915\" onclick=\"ScrollToEnum();return false;\">KeypairFormat915</a> format, BSTR pass)",
				description:"Exports the full keypair into a file.",
				parameters:
				[
					{
					parameter:"fileName: Path to the output file."
					},
					{
					parameter:"format: The export format."
					},
					{
					parameter:"pass: Password with which to protect the exported keypair. May be empty."
					}
				]
				},
				{
				name:"ImportFromFile (BSTR fileName, BSTR pass)",
				description:"Imports a keypair from a file.",
				parameters:
				[
					{
					parameter:"fileName: Path to a file containing a keypair."
					},
					{
					parameter:"pass: Password, if any, to decrypt the keypair."
					}
				]
				},
				{
				name:"ImportFromBase64String (BSTR val, BSTR pass)",
				description:"Imports a keypair from a string.",
				parameters:
				[
					{
					parameter:"val: String containing a keypair."
					},
					{
					parameter:"pass: Password, if any, to decrypt the keypair."
					}
				]
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IClientKey915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"supported &#x2192; BOOL {get}",
				description:"True if the client key is supported by the currently used cryptographic provider."
				},
				{
				name:"keyBits &#x2192; ULONG {get}",
				description:"The size of the client key in bits."
				},
				{
				name:"alg &#x2192; BSTR {get}",
				description:"Information about the client key algorithm."
				},
				{
				name:"algId &#x2192; <a href=\"#IClientKey915\" onclick=\"ScrollToEnum();return false;\">KeypairAlgId915</a> {get}",
				description:"Algorithm ID of the client key."
				},
				{
				name:"insertTime &#x2192; BSTR {get}",
				description:"The insert time of the client key."
				},
				{
				name:"comment &#x2192; BSTR {get} {set}",
				description:"Gets or sets a comment associated with the client key."
				},
				{
				name:"md5 &#x2192; BSTR {get}",
				description:"The MD5 fingerprint of the client key."
				},
				{
				name:"bubbleBabble &#x2192; BSTR {get}",
				description:"The Bubble-Babble fingerprint of the client key."
				},
				{
				name:"sha256 &#x2192; BSTR {get}",
				description:"The SHA-256 fingerprint of the client key."
				},
				{
				name:"hex &#x2192; BSTR {get}",
				description:"The complete hex-encoded information about the client key."
				},
				{
				name:"info &#x2192; BSTR {get}",
				description:"A textual description of the client key."
				}
			],
			methods:
			[
				{
				name:"ExportToFile (BSTR fileName, <a href=\"#IClientKey915\" onclick=\"ScrollToEnum();return false;\">PublicKeyFormat915</a> format)",
				description:"Exports a public key into file.",
				parameters:
				[
					{
					parameter:"fileName: Path to a file in which to store the client key."
					},
					{
					parameter:"format: The export format to use."
					}
				]
				},
				{
				name:"ExportToBase64String (<a href=\"#IClientKey915\" onclick=\"ScrollToEnum();return false;\">PublicKeyFormat915</a> format) &#x2192; BSTR",
				description:"Exports a public key into string. Supports the same formats as when exporting to a file.",
				parameters:
				[
					{
					parameter:"format: The export format to use."
					}
				]
				},
				{
				name:"Matches (BSTR criterion) &#x2192; BOOL",
				description:"Returns true if the client key matches the criterion. Returns false if not. The client key's algorithm, comment, MD5, Bubble-Babble and SHA-256 fingerprints are matched against the criterion.",
				parameters:
				[
					{
					parameter:"criterion: Text to search for."
					}
				]
				}
			],
			enums:
			[
				{
				name:"PublicKeyFormat915",
				description:"PublicKeyFormat_ssh2: 0<br />PublicKeyFormat_openSsh: 1"
				}
			]
			},
			{
			name:"IClientKeys915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"The number of client keys configured."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IClientKey915\" onclick=\"SetInterface('IClientKey915', false);return false;\">IClientKey915</a>) {get}",
				description:"Allows enumerating client public keys and accessing them by index."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IClientKeys915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IClientKey915\" onclick=\"SetInterface('IClientKey915', false);return false;\">IClientKey915</a>",
				description:"Returns the client public key with the specified index.",
				parameters:
				[
					{
					parameter:"index: Zero-based index of the key."
					}
				]
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the client public key with the given index."
				},
				{
				name:"FindAndErase (BSTR searchString) &#x2192; ULONG",
				description:"Removes matching keys. Returns the number of removed keys.",
				parameters:
				[
					{
					parameter:"searchString: A search string to be matched as described in [ClientKey]::Matches."
					}
				]
				},
				{
				name:"Clear ()",
				description:"Removes all client public keys from the list."
				},
				{
				name:"Add (BSTR hex)",
				description:"Adds a previously exported client public key to the list.",
				parameters:
				[
					{
					parameter:"hex: Hex-encoded client key in internal format."
					}
				]
				},
				{
				name:"ImportFromFile (BSTR fileName)",
				description:"Imports a client public key from a file.",
				parameters:
				[
					{
					parameter:"fileName: Path to a file containing a client public key."
					}
				]
				},
				{
				name:"ImportFromBase64String (BSTR data)",
				description:"Imports a client public key from a string.",
				parameters:
				[
					{
					parameter:"data: String containing a client public key."
					}
				]
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IClientVersionRule915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:2,
				name:"! matchAll &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, this rule will be a catch-all rule that will match all SSH client versions. There can be only one catch-all rule, and it will be processed last."
				},
				{
				flag:2,
				name:"! caseSensitive &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether the pattern will be matched case sensitively (Abcd does not equal ABCD), or insensitively (Abcd DOES equal ABCD)."
				},
				{
				flag:2,
				name:"! pattern &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"A substring which will trigger this rule if it is found in the SSH client's version string."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"An optional comment describing this rule."
				},
				{
				name:"accept &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to allow connections from clients whose version string matches this rule. If disabled, client connections that match this rule will be rejected outright."
				},
				{
				name:"allowPasswordAuth &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether clients whose version string matches this rule should be offered the regular \"password\" authentication method, assuming that method is otherwise enabled.\n\nThis setting does not affect password authentication over \"keyboard-interactive\".\n\nThis setting can help fine-tune behavior for clients which would otherwise exhibit undesirable behaviors if offered this method."
				},
				{
				name:"allowPwKbdiAuth &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether clients whose version string matches this rule should be offered password authentication over \"keyboard-interactive\", assuming that method is otherwise enabled.\n\nThis setting does not affect the \"password\" authentication method.\nThis setting can help fine-tune behavior for clients which would otherwise exhibit undesirable behaviors if offered this method."
				},
				{
				name:"allowGssApiAuth &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether clients whose version string matches this rule should be offered GSSAPI authentication methods (Kerberos or NTLM), assuming such methods are otherwise enabled.\n\nThis setting can help fine-tune behavior for clients which would otherwise exhibit undesirable behaviors if offered this method."
				},
				{
				name:"sshUserMustMatchGssApi &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For clients that match this rule and are allowed to use GSSAPI authentication (Kerberos or NTLM), whether to enforce the RFC 4462 requirement that the SSH user name must match the identity authorized by GSSAPI.\n\nThis setting should be enabled for any client that might try to use GSSAPI in a speculative manner, without the user taking an explicit step to e.g. enable Kerberos. For such clients, disabling this setting can cause the client to create an SSH connection under a different identity than the user intended. Examples of such clients include OpenSSH and PuTTY.\n\nFor clients that require the user to explicitly enable GSSAPI, this check is not required. For such clients, enabling this check can prevent authentication attempts that would otherwise be valid. An example is Bitvise SSH Client."
				},
				{
				name:"startReexchange &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"During a lengthy connection, regular key re-exchange protects against a resourceful attacker recovering connection encryption keys. Regular key re-exchange is required by the SSH specification, but there exist implementations that will disconnect if the server starts it.\n\nIf this setting is enabled, then for clients whose version string matches this rule, the SSH Server will automatically initiate key re-exchange at regular intervals during an SSH connection. If disabled, the server will still accept key re-exchange if initiated by the client, but will not initiate it.\n\"Start key re-exchange\" can also be disabled globally, under Connections. In that case, starting of key re-exchange is disabled globally for all clients and cannot be selectively enabled."
				},
				{
				name:"globalRequestCapable &#x2192; <a href=\"#IClientVersionRule915\" onclick=\"ScrollToEnum();return false;\">GlobalRequestCapable915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.GlobalRequestCapable.builtInRules",
				description:"The SSH Server sends global requests to clients to support essential features like host key synchronization, as well as less important features like informing the client of the session elevation state.\n\nThe SSH specification requires all clients to ignore global requests they don't recognize. Almost all clients do so correctly. However, there exist clients which will disconnect or otherwise fail if they receive a global request, or if they receive it at a specific time such as when opening an SSH channel.\n\nBy default, the SSH Server contains a compatibility list of clients to which it can send global requests. From time to time, we learn of new niche clients with this issue. If you run into such a client, you can use this setting to configure the SSH Server to not send global requests to it."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IClientVersionRule915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"GlobalRequestCapable915",
				description:"GlobalRequestCapable_builtInRules (0): Use built-in rules<br />GlobalRequestCapable_yes (1): Yes<br />GlobalRequestCapable_no (2): No"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IClientVersionRules915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IClientVersionRule915\" onclick=\"SetInterface('IClientVersionRule915', false);return false;\">IClientVersionRule915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IClientVersionRule915\" onclick=\"SetInterface('IClientVersionRule915', false);return false;\">IClientVersionRule915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IClientVersionRules915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IClientVersionRule915\" onclick=\"SetInterface('IClientVersionRule915', false);return false;\">IClientVersionRule915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Move (ULONG indexFrom, ULONG indexTo)",
				description:"Moves the entry with the specified zero-based index to the new location within the list."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IClientVersionRules915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IClientVersionRule915\" onclick=\"SetInterface('IClientVersionRule915', false);return false;\">IClientVersionRule915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IClientVersionRule915\" onclick=\"SetInterface('IClientVersionRule915', false);return false;\">IClientVersionRule915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IClientVersionRule915\" onclick=\"SetInterface('IClientVersionRule915', false);return false;\">IClientVersionRule915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IClientVersionRule915\" onclick=\"SetInterface('IClientVersionRule915', false);return false;\">IClientVersionRule915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IClientVersionRule915\" onclick=\"SetInterface('IClientVersionRule915', false);return false;\">IClientVersionRule915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IClientVersionRule915\" onclick=\"SetInterface('IClientVersionRule915', false);return false;\">IClientVersionRule915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ICompression915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"zlib &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support connection data compression using the ZLIB (LZ77) algorithm."
				},
				{
				name:"none &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support SSH connections without compression. Enabling this method is highly recommended for interoperability with most clients. It must also be enabled for delayed compression to work."
				},
				{
				name:"delayCompression &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If disabled, the SSH Server will allow normal negotiation of zlib compression during the initial key exchange. If enabled, the SSH Server will not offer compression during the initial key exchange, but will offer it with the \"delay-compression extension\", or using a second key exchange after the client has authenticated. This provides a reduction of attack surface for unauthenticated attackers. For clients that implemented delayed compression using a second key exchange, this slightly extends the time to establish a connection. For clients that support the \"delay-compression\" extension, there is no performance impact."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ICompression915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IConnOnLogoffCommand915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"command &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The command to execute.\n\nThe command needs to invoke a Windows executable - such as a program, or a shell. To run a script, prefix it with the name of the shell that needs to run it. To invoke a PowerShell script, enter it like: \"PowerShell C:\\Path\\Script.ps1\" (without the quotes). The invoke a Command Prompt batch file (or command), enter it like: \"cmd /c C:\\Path\\Batch.cmd\".\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"workDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The working directory in which the command will be executed.\n\nIf an empty string is supplied, then if the command is being executed in the logged on user's context, the user's initial terminal shell directory will be used. Otherwise - if the command is being executed in service context - the SSH Server's installation directory will be used.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"execAsService &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the command will be executed in service context with global access. If disabled, the command will be executed in the logged-on user's context, with the logged-on user's security permissions."
				},
				{
				name:"loadProfile &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the logged-on user's profile will be loaded for the execution of the command.\n\nLoading the Windows profile causes the user's Windows registry hive to become available. It also makes it possible to use the user's environment variables in SSH Server settings that support environment variable expansion (%VARIABLE% syntax).\n\nFrequent loading and unloading of Windows profiles can cause a profile to break and should be avoided if possible.\n\nA Windows profile can be loaded by other settings, and may already be loaded if Windows session sharing is enabled: https://www.bitvise.com/ssh-server-usage-faq#Q260"
				},
				{
				name:"maxWaitTime &#x2192; ULONG {get} {set}",
				defaultValue:"default: 300",
				description:"If set to a non-zero value, the SSH Server will wait up to this number of seconds for the command to complete before proceeding. If the command doesn't complete in the configured time, it will be scheduled to be terminated. If set to 9999, the server will wait indefinitely."
				},
				{
				name:"jobObject &#x2192; <a href=\"#IConnOnLogoffCommand915\" onclick=\"ScrollToEnum();return false;\">JobObject915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.JobObject.noBreakaway",
				description:"Whether the command should be insulated using a job object. A job object ensures that when the command completes, all processes started by the command are also terminated. This means that processes will be abruptly ended if they are still running after the command completes.\n\nProcesses created by the command can be permitted to break away from the job object, so they can continue to run after the task completes. In this case, processes can still be ended abruptly for other reasons. For example, processes may terminate when their terminal console window closes, or when the Windows logon session associated with the command logs off.\n\nIf you wish to run a process that persists, it does not require job breakaway. You can use the Windows Task Scheduler to configure a Windows task which you can run by name. Then, run the task as follows:\n\nschtasks /run /tn NameOfTask\n\nIf you wish to use job breakaway, you can start such a child process using the bvRun utility with flags \"-brj -new\" or \"-brj -det\". You can also use a Windows function such as CreateProcess while passing the flag CREATE_BREAKAWAY_FROM_JOB, and perhaps also CREATE_NEW_CONSOLE or DETACHED_PROCESS."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IConnOnLogoffCommand915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"JobObject915",
				description:"JobObject_doNotUse (0): Do not use job object<br />JobObject_noBreakaway (1): Use job object, no breakaway<br />JobObject_allowBreakaway (2): Use job object, allow breakaway"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IConnOnLogoffCommandWithDefault915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"useDefault &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the settings here configured will be ignored, and the SSH Server will use the settings configured for the group associated with this user."
				},
				{
				name:"command &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The command to execute.\n\nThe command needs to invoke a Windows executable - such as a program, or a shell. To run a script, prefix it with the name of the shell that needs to run it. To invoke a PowerShell script, enter it like: \"PowerShell C:\\Path\\Script.ps1\" (without the quotes). The invoke a Command Prompt batch file (or command), enter it like: \"cmd /c C:\\Path\\Batch.cmd\".\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"workDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The working directory in which the command will be executed.\n\nIf an empty string is supplied, then if the command is being executed in the logged on user's context, the user's initial terminal shell directory will be used. Otherwise - if the command is being executed in service context - the SSH Server's installation directory will be used.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"execAsService &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the command will be executed in service context with global access. If disabled, the command will be executed in the logged-on user's context, with the logged-on user's security permissions."
				},
				{
				name:"loadProfile &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the logged-on user's profile will be loaded for the execution of the command.\n\nLoading the Windows profile causes the user's Windows registry hive to become available. It also makes it possible to use the user's environment variables in SSH Server settings that support environment variable expansion (%VARIABLE% syntax).\n\nFrequent loading and unloading of Windows profiles can cause a profile to break and should be avoided if possible.\n\nA Windows profile can be loaded by other settings, and may already be loaded if Windows session sharing is enabled: https://www.bitvise.com/ssh-server-usage-faq#Q260"
				},
				{
				name:"maxWaitTime &#x2192; ULONG {get} {set}",
				defaultValue:"default: 300",
				description:"If set to a non-zero value, the SSH Server will wait up to this number of seconds for the command to complete before proceeding. If the command doesn't complete in the configured time, it will be scheduled to be terminated. If set to 9999, the server will wait indefinitely."
				},
				{
				name:"jobObject &#x2192; <a href=\"#IConnOnLogoffCommandWithDefault915\" onclick=\"ScrollToEnum();return false;\">JobObject915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.JobObject.noBreakaway",
				description:"Whether the command should be insulated using a job object. A job object ensures that when the command completes, all processes started by the command are also terminated. This means that processes will be abruptly ended if they are still running after the command completes.\n\nProcesses created by the command can be permitted to break away from the job object, so they can continue to run after the task completes. In this case, processes can still be ended abruptly for other reasons. For example, processes may terminate when their terminal console window closes, or when the Windows logon session associated with the command logs off.\n\nIf you wish to run a process that persists, it does not require job breakaway. You can use the Windows Task Scheduler to configure a Windows task which you can run by name. Then, run the task as follows:\n\nschtasks /run /tn NameOfTask\n\nIf you wish to use job breakaway, you can start such a child process using the bvRun utility with flags \"-brj -new\" or \"-brj -det\". You can also use a Windows function such as CreateProcess while passing the flag CREATE_BREAKAWAY_FROM_JOB, and perhaps also CREATE_NEW_CONSOLE or DETACHED_PROCESS."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IConnOnLogoffCommandWithDefault915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"JobObject915",
				description:"JobObject_doNotUse (0): Do not use job object<br />JobObject_noBreakaway (1): Use job object, no breakaway<br />JobObject_allowBreakaway (2): Use job object, allow breakaway"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IConnOnLogonCommand915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"command &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The command to execute.\n\nThe command needs to invoke a Windows executable - such as a program, or a shell. To run a script, prefix it with the name of the shell that needs to run it. To invoke a PowerShell script, enter it like: \"PowerShell C:\\Path\\Script.ps1\" (without the quotes). The invoke a Command Prompt batch file (or command), enter it like: \"cmd /c C:\\Path\\Batch.cmd\".\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"workDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The working directory in which the command will be executed.\n\nIf an empty string is supplied, then if the command is being executed in the logged on user's context, the user's initial terminal shell directory will be used. Otherwise - if the command is being executed in service context - the SSH Server's installation directory will be used.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"execAsService &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the command will be executed in service context with global access. If disabled, the command will be executed in the logged-on user's context, with the logged-on user's security permissions."
				},
				{
				name:"loadProfile &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the logged-on user's profile will be loaded for the execution of the command.\n\nLoading the Windows profile causes the user's Windows registry hive to become available. It also makes it possible to use the user's environment variables in SSH Server settings that support environment variable expansion (%VARIABLE% syntax).\n\nFrequent loading and unloading of Windows profiles can cause a profile to break and should be avoided if possible.\n\nA Windows profile can be loaded by other settings, and may already be loaded if Windows session sharing is enabled: https://www.bitvise.com/ssh-server-usage-faq#Q260"
				},
				{
				name:"maxWaitTime &#x2192; ULONG {get} {set}",
				defaultValue:"default: 300",
				description:"If set to a non-zero value, the SSH Server will wait up to this number of seconds for the command to complete before proceeding. If the command doesn't complete in the configured time, it will be scheduled to be terminated. If set to 9999, the server will wait indefinitely."
				},
				{
				name:"jobObject &#x2192; <a href=\"#IConnOnLogonCommand915\" onclick=\"ScrollToEnum();return false;\">JobObject915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.JobObject.noBreakaway",
				description:"Whether the command should be insulated using a job object. A job object ensures that when the command completes, all processes started by the command are also terminated. This means that processes will be abruptly ended if they are still running after the command completes.\n\nProcesses created by the command can be permitted to break away from the job object, so they can continue to run after the task completes. In this case, processes can still be ended abruptly for other reasons. For example, processes may terminate when their terminal console window closes, or when the Windows logon session associated with the command logs off.\n\nIf you wish to run a process that persists, it does not require job breakaway. You can use the Windows Task Scheduler to configure a Windows task which you can run by name. Then, run the task as follows:\n\nschtasks /run /tn NameOfTask\n\nIf you wish to use job breakaway, you can start such a child process using the bvRun utility with flags \"-brj -new\" or \"-brj -det\". You can also use a Windows function such as CreateProcess while passing the flag CREATE_BREAKAWAY_FROM_JOB, and perhaps also CREATE_NEW_CONSOLE or DETACHED_PROCESS."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IConnOnLogonCommand915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"JobObject915",
				description:"JobObject_doNotUse (0): Do not use job object<br />JobObject_noBreakaway (1): Use job object, no breakaway<br />JobObject_allowBreakaway (2): Use job object, allow breakaway"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IConnOnLogonCommandWithDefault915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"useDefault &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the settings here configured will be ignored, and the SSH Server will use the settings configured for the group associated with this user."
				},
				{
				name:"command &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The command to execute.\n\nThe command needs to invoke a Windows executable - such as a program, or a shell. To run a script, prefix it with the name of the shell that needs to run it. To invoke a PowerShell script, enter it like: \"PowerShell C:\\Path\\Script.ps1\" (without the quotes). The invoke a Command Prompt batch file (or command), enter it like: \"cmd /c C:\\Path\\Batch.cmd\".\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"workDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The working directory in which the command will be executed.\n\nIf an empty string is supplied, then if the command is being executed in the logged on user's context, the user's initial terminal shell directory will be used. Otherwise - if the command is being executed in service context - the SSH Server's installation directory will be used.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"execAsService &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the command will be executed in service context with global access. If disabled, the command will be executed in the logged-on user's context, with the logged-on user's security permissions."
				},
				{
				name:"loadProfile &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the logged-on user's profile will be loaded for the execution of the command.\n\nLoading the Windows profile causes the user's Windows registry hive to become available. It also makes it possible to use the user's environment variables in SSH Server settings that support environment variable expansion (%VARIABLE% syntax).\n\nFrequent loading and unloading of Windows profiles can cause a profile to break and should be avoided if possible.\n\nA Windows profile can be loaded by other settings, and may already be loaded if Windows session sharing is enabled: https://www.bitvise.com/ssh-server-usage-faq#Q260"
				},
				{
				name:"maxWaitTime &#x2192; ULONG {get} {set}",
				defaultValue:"default: 300",
				description:"If set to a non-zero value, the SSH Server will wait up to this number of seconds for the command to complete before proceeding. If the command doesn't complete in the configured time, it will be scheduled to be terminated. If set to 9999, the server will wait indefinitely."
				},
				{
				name:"jobObject &#x2192; <a href=\"#IConnOnLogonCommandWithDefault915\" onclick=\"ScrollToEnum();return false;\">JobObject915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.JobObject.noBreakaway",
				description:"Whether the command should be insulated using a job object. A job object ensures that when the command completes, all processes started by the command are also terminated. This means that processes will be abruptly ended if they are still running after the command completes.\n\nProcesses created by the command can be permitted to break away from the job object, so they can continue to run after the task completes. In this case, processes can still be ended abruptly for other reasons. For example, processes may terminate when their terminal console window closes, or when the Windows logon session associated with the command logs off.\n\nIf you wish to run a process that persists, it does not require job breakaway. You can use the Windows Task Scheduler to configure a Windows task which you can run by name. Then, run the task as follows:\n\nschtasks /run /tn NameOfTask\n\nIf you wish to use job breakaway, you can start such a child process using the bvRun utility with flags \"-brj -new\" or \"-brj -det\". You can also use a Windows function such as CreateProcess while passing the flag CREATE_BREAKAWAY_FROM_JOB, and perhaps also CREATE_NEW_CONSOLE or DETACHED_PROCESS."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IConnOnLogonCommandWithDefault915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"JobObject915",
				description:"JobObject_doNotUse (0): Do not use job object<br />JobObject_noBreakaway (1): Use job object, no breakaway<br />JobObject_allowBreakaway (2): Use job object, allow breakaway"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IConnOnUploadCommand915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"command &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The command to execute.\n\nThe command needs to invoke a Windows executable - such as a program, or a shell. To run a script, prefix it with the name of the shell that needs to run it. To invoke a PowerShell script, enter it like: \"PowerShell C:\\Path\\Script.ps1\" (without the quotes). The invoke a Command Prompt batch file (or command), enter it like: \"cmd /c C:\\Path\\Batch.cmd\".\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env\n\nThe program or script run by the On-upload command can reference environment variables SSHUPLOADFILE, SSHUPLOADFILEORIG, SSHUPLOADBYTES, SSHUPLOADNEW, and SSHUPLOADRESIZE, in addition to other environment variables that are normally available.\n\nIf a move operation is also configured, the On-upload command will run after the file is moved. In this case, the environment variable SSHUPLOADFILE will contain the moved-to path of the file. The environment variable SSHUPLOADFILEORIG will contain the original upload path.\n\nWarning: When using environment variables SSHUPLOADFILE and SSHUPLOADFILEORIG, part or all of these variables are controlled by the file transfer client. The client can create file names using syntax not expected by the server administrator. It is best to avoid passing these variables on the command line, and instead access the environment variables directly in the script that is run. For example: in PowerShell, use $env:SSHUPLOADFILE."
				},
				{
				name:"workDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The working directory in which the command will be executed.\n\nIf an empty string is supplied, then if the command is being executed in the logged on user's context, the user's initial terminal shell directory will be used. Otherwise - if the command is being executed in service context - the SSH Server's installation directory will be used.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env\n\nThis setting can reference environment variables SSHUPLOADFILE and SSHUPLOADBYTES, in addition to other environment variables normally available for expansion."
				},
				{
				name:"execAsService &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the command will be executed in service context with global access. If disabled, the command will be executed in the logged-on user's context, with the logged-on user's security permissions."
				},
				{
				name:"maxWaitTime &#x2192; ULONG {get} {set}",
				defaultValue:"default: 300",
				description:"If an On-upload command is still running when a connection ends, the SSH Server will wait with connection cleanup and allow the command to continue running until it either completes, or it has run for this number of seconds. If the command does not complete in time, it will be forcefully terminated. If set to 9999, the server will wait indefinitely for the command to complete. If set to 0, the server will not wait with connection cleanup, but will also not forcefully terminate the command."
				},
				{
				name:"execForIncomplete &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the command will be executed for all files that were written to by a client. If disabled, the command will be executed only for files that were properly closed by the client before closing the SFTP channel or disconnecting."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IConnOnUploadCommand915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IConnOnUploadCommandWithDefault915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"useDefault &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the settings here configured will be ignored, and the SSH Server will use the settings configured for the group associated with this user."
				},
				{
				name:"command &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The command to execute.\n\nThe command needs to invoke a Windows executable - such as a program, or a shell. To run a script, prefix it with the name of the shell that needs to run it. To invoke a PowerShell script, enter it like: \"PowerShell C:\\Path\\Script.ps1\" (without the quotes). The invoke a Command Prompt batch file (or command), enter it like: \"cmd /c C:\\Path\\Batch.cmd\".\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env\n\nThe program or script run by the On-upload command can reference environment variables SSHUPLOADFILE, SSHUPLOADFILEORIG, SSHUPLOADBYTES, SSHUPLOADNEW, and SSHUPLOADRESIZE, in addition to other environment variables that are normally available.\n\nIf a move operation is also configured, the On-upload command will run after the file is moved. In this case, the environment variable SSHUPLOADFILE will contain the moved-to path of the file. The environment variable SSHUPLOADFILEORIG will contain the original upload path.\n\nWarning: When using environment variables SSHUPLOADFILE and SSHUPLOADFILEORIG, part or all of these variables are controlled by the file transfer client. The client can create file names using syntax not expected by the server administrator. It is best to avoid passing these variables on the command line, and instead access the environment variables directly in the script that is run. For example: in PowerShell, use $env:SSHUPLOADFILE."
				},
				{
				name:"workDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The working directory in which the command will be executed.\n\nIf an empty string is supplied, then if the command is being executed in the logged on user's context, the user's initial terminal shell directory will be used. Otherwise - if the command is being executed in service context - the SSH Server's installation directory will be used.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env\n\nThis setting can reference environment variables SSHUPLOADFILE and SSHUPLOADBYTES, in addition to other environment variables normally available for expansion."
				},
				{
				name:"execAsService &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the command will be executed in service context with global access. If disabled, the command will be executed in the logged-on user's context, with the logged-on user's security permissions."
				},
				{
				name:"maxWaitTime &#x2192; ULONG {get} {set}",
				defaultValue:"default: 300",
				description:"If an On-upload command is still running when a connection ends, the SSH Server will wait with connection cleanup and allow the command to continue running until it either completes, or it has run for this number of seconds. If the command does not complete in time, it will be forcefully terminated. If set to 9999, the server will wait indefinitely for the command to complete. If set to 0, the server will not wait with connection cleanup, but will also not forcefully terminate the command."
				},
				{
				name:"execForIncomplete &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the command will be executed for all files that were written to by a client. If disabled, the command will be executed only for files that were properly closed by the client before closing the SFTP channel or disconnecting."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IConnOnUploadCommandWithDefault915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IConnectInstructions915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"allowConnect &#x2192; BOOL {get} {set}",
				defaultValue:"Default value varies depending on context.",
				description:"Whether or not to allow connection attempts matching this rule. If disabled, a connection attempt matching this rule will be rejected, otherwise it will be interpreted according to settings in this section."
				},
				{
				name:"targetHost &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"If this field is specified (is non-empty), it will override the target host of the connection that is specified by the user. In contrast, leaving this field empty means that the user-supplied target host will be connected to."
				},
				{
				name:"targetPort &#x2192; ULONG {get} {set}",
				defaultValue:"default: 0",
				description:"If this field is specified (is not 0), it will override the target port of the connection that is specified by the user. In contrast, leaving this field empty means that the user-supplied target port will be connected to."
				},
				{
				name:"connectProfile &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"Default\"",
				description:"The name of the connect profile to use; must match the name of one of the profiles enumerated in the connectProfiles portion of the setup.",
				values:"Has to be the name of a configured connect profile."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IConnectInstructions915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IConnectProfile915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! profileName &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"Default\"",
				description:"Specifies the name of this connect profile, to be referred to by other configuration settings."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"An optional comment describing this profile."
				},
				{
				name:"connectIntf &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"An optional comma-separated list of interfaces from which TCP/IP connections associated with this profile will be made.\n\nThe list may contain one IPv4 and/or one IPv6 interface. Additional or invalid entries are ignored. When both an IPv4 and an IPv6 interface are specified, the one that appears first determines the preferred IP version."
				},
				{
				name:"proxyType &#x2192; <a href=\"#IConnectProfile915\" onclick=\"ScrollToEnum();return false;\">ProxyType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.ProxyType.none",
				description:"Specifies the type of proxy to connect through (if any)."
				},
				{
				name:"proxyHost &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"If a proxy type other than None is specified, the name of the proxy server to connect through."
				},
				{
				name:"proxyPort &#x2192; ULONG {get} {set}",
				defaultValue:"default: 1080",
				description:"If a proxy type other than None is specified, the port number of the proxy server to connect through (usual ports are 1080 for SOCKS proxies, 80 for HTTP proxies)."
				},
				{
				name:"resolveLocally &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, all DNS names will be attempted to be resolved locally, passing an IP address to the proxy. If disabled, any DNS names specified as the target address will be passed to the proxy untouched."
				},
				{
				name:"proxyUsername &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"If the proxy server requires authentication, the username to log into the SOCKS proxy (SOCKS5 only)."
				},
				{
				name:"proxyPassword &#x2192; <a href=\"#IPassword915\" onclick=\"SetInterface('IPassword915', false);return false;\">IPassword915</a> {get}",
				description:"If the proxy server requires authentication, the password to log into the SOCKS proxy (SOCKS5 only)."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IConnectProfile915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ProxyType915",
				description:"ProxyType_none (0): None<br />ProxyType_socks4 (1): SOCKS4<br />ProxyType_socks5 (2): SOCKS5<br />ProxyType_http (3): HTTP"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IConnectProfiles915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IConnectProfile915\" onclick=\"SetInterface('IConnectProfile915', false);return false;\">IConnectProfile915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IConnectProfile915\" onclick=\"SetInterface('IConnectProfile915', false);return false;\">IConnectProfile915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IConnectProfiles915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IConnectProfile915\" onclick=\"SetInterface('IConnectProfile915', false);return false;\">IConnectProfile915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IConnectProfiles915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IConnectProfile915\" onclick=\"SetInterface('IConnectProfile915', false);return false;\">IConnectProfile915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IConnectProfile915\" onclick=\"SetInterface('IConnectProfile915', false);return false;\">IConnectProfile915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IConnectProfile915\" onclick=\"SetInterface('IConnectProfile915', false);return false;\">IConnectProfile915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IConnectProfile915\" onclick=\"SetInterface('IConnectProfile915', false);return false;\">IConnectProfile915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IConnectProfile915\" onclick=\"SetInterface('IConnectProfile915', false);return false;\">IConnectProfile915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IConnectProfile915\" onclick=\"SetInterface('IConnectProfile915', false);return false;\">IConnectProfile915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IConnectRuleWithDefault915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:2,
				name:"! addressRule &#x2192; <a href=\"#IAddressRuleIPv6_915\" onclick=\"SetInterface('IAddressRuleIPv6_915', false);return false;\">IAddressRuleIPv6_915</a> {get}",
				description:"Defines the criterion which the target address of a connection must match, in order to match this rule."
				},
				{
				flag:2,
				name:"! portRangeRule &#x2192; <a href=\"#IPortRangeRule915\" onclick=\"SetInterface('IPortRangeRule915', false);return false;\">IPortRangeRule915</a> {get}",
				description:"Defines the criterion which the target port number of a connection must match, in order to match this rule."
				},
				{
				name:"onDnsError &#x2192; <a href=\"#IConnectRuleWithDefault915\" onclick=\"ScrollToEnum();return false;\">OnDnsResolvingError915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnDnsResolvingError.next",
				description:"Action to take if this rule cannot be processed due to a DNS name resolve error."
				},
				{
				name:"useDefMaxCachedLookupAge &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the global default setting for the maximum cached lookup age."
				},
				{
				name:"maxCachedLookupAge &#x2192; ULONG {get} {set}",
				defaultValue:"default: 30",
				description:"Maximum number of seconds during which a cached DNS or IP lookup result can be reused. Set this to 0 to disable caching of DNS and IP lookup results and always perform a new lookup."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Arbitrary information describing this rule."
				},
				{
				name:"instr &#x2192; <a href=\"#IConnectInstructions915\" onclick=\"SetInterface('IConnectInstructions915', false);return false;\">IConnectInstructions915</a> {get}",
				description:"Instructions: specifies what is to be done when a connection attempt is received whose target address and port match this rule."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IConnectRuleWithDefault915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"OnDnsResolvingError915",
				description:"OnDnsResolvingError_next (0): Continue processing next rule<br />OnDnsResolvingError_deny (1): Deny connection"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IConnectRuleWithProfileInfo915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:2,
				name:"! addressRule &#x2192; <a href=\"#IAddressRuleIPv6_915\" onclick=\"SetInterface('IAddressRuleIPv6_915', false);return false;\">IAddressRuleIPv6_915</a> {get}",
				description:"Defines the criterion which the target address of a connection must match, in order to match this rule."
				},
				{
				flag:2,
				name:"! portRangeRule &#x2192; <a href=\"#IPortRangeRule915\" onclick=\"SetInterface('IPortRangeRule915', false);return false;\">IPortRangeRule915</a> {get}",
				description:"Defines the criterion which the target port number of a connection must match, in order to match this rule."
				},
				{
				name:"onDnsError &#x2192; <a href=\"#IConnectRuleWithProfileInfo915\" onclick=\"ScrollToEnum();return false;\">OnDnsResolvingError915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnDnsResolvingError.next",
				description:"Action to take if this rule cannot be processed due to a DNS name resolve error."
				},
				{
				name:"useDefMaxCachedLookupAge &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the global default setting for the maximum cached lookup age."
				},
				{
				name:"maxCachedLookupAge &#x2192; ULONG {get} {set}",
				defaultValue:"default: 30",
				description:"Maximum number of seconds during which a cached DNS or IP lookup result can be reused. Set this to 0 to disable caching of DNS and IP lookup results and always perform a new lookup."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Arbitrary information describing this rule."
				},
				{
				name:"instr &#x2192; <a href=\"#IConnectInstructions915\" onclick=\"SetInterface('IConnectInstructions915', false);return false;\">IConnectInstructions915</a> {get}",
				description:"Instructions: specifies what is to be done when a connection attempt is received whose target address and port match this rule."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IConnectRuleWithProfileInfo915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"OnDnsResolvingError915",
				description:"OnDnsResolvingError_next (0): Continue processing next rule<br />OnDnsResolvingError_deny (1): Deny connection"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IConnectRulesWithDefault915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IConnectRuleWithDefault915\" onclick=\"SetInterface('IConnectRuleWithDefault915', false);return false;\">IConnectRuleWithDefault915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IConnectRuleWithDefault915\" onclick=\"SetInterface('IConnectRuleWithDefault915', false);return false;\">IConnectRuleWithDefault915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IConnectRulesWithDefault915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IConnectRuleWithDefault915\" onclick=\"SetInterface('IConnectRuleWithDefault915', false);return false;\">IConnectRuleWithDefault915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Move (ULONG indexFrom, ULONG indexTo)",
				description:"Moves the entry with the specified zero-based index to the new location within the list."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IConnectRulesWithDefault915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IConnectRuleWithDefault915\" onclick=\"SetInterface('IConnectRuleWithDefault915', false);return false;\">IConnectRuleWithDefault915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IConnectRuleWithDefault915\" onclick=\"SetInterface('IConnectRuleWithDefault915', false);return false;\">IConnectRuleWithDefault915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IConnectRuleWithDefault915\" onclick=\"SetInterface('IConnectRuleWithDefault915', false);return false;\">IConnectRuleWithDefault915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IConnectRuleWithDefault915\" onclick=\"SetInterface('IConnectRuleWithDefault915', false);return false;\">IConnectRuleWithDefault915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IConnectRuleWithDefault915\" onclick=\"SetInterface('IConnectRuleWithDefault915', false);return false;\">IConnectRuleWithDefault915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IConnectRuleWithDefault915\" onclick=\"SetInterface('IConnectRuleWithDefault915', false);return false;\">IConnectRuleWithDefault915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IConnectRulesWithProfileInfo915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IConnectRuleWithProfileInfo915\" onclick=\"SetInterface('IConnectRuleWithProfileInfo915', false);return false;\">IConnectRuleWithProfileInfo915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IConnectRuleWithProfileInfo915\" onclick=\"SetInterface('IConnectRuleWithProfileInfo915', false);return false;\">IConnectRuleWithProfileInfo915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IConnectRulesWithProfileInfo915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IConnectRuleWithProfileInfo915\" onclick=\"SetInterface('IConnectRuleWithProfileInfo915', false);return false;\">IConnectRuleWithProfileInfo915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Move (ULONG indexFrom, ULONG indexTo)",
				description:"Moves the entry with the specified zero-based index to the new location within the list."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IConnectRulesWithProfileInfo915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IConnectRuleWithProfileInfo915\" onclick=\"SetInterface('IConnectRuleWithProfileInfo915', false);return false;\">IConnectRuleWithProfileInfo915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IConnectRuleWithProfileInfo915\" onclick=\"SetInterface('IConnectRuleWithProfileInfo915', false);return false;\">IConnectRuleWithProfileInfo915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IConnectRuleWithProfileInfo915\" onclick=\"SetInterface('IConnectRuleWithProfileInfo915', false);return false;\">IConnectRuleWithProfileInfo915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IConnectRuleWithProfileInfo915\" onclick=\"SetInterface('IConnectRuleWithProfileInfo915', false);return false;\">IConnectRuleWithProfileInfo915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IConnectRuleWithProfileInfo915\" onclick=\"SetInterface('IConnectRuleWithProfileInfo915', false);return false;\">IConnectRuleWithProfileInfo915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IConnectRuleWithProfileInfo915\" onclick=\"SetInterface('IConnectRuleWithProfileInfo915', false);return false;\">IConnectRuleWithProfileInfo915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IConnections915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"omitVersion &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"By default, the SSH Server will include its application version in the SSH version string that is sent to SSH clients at the start of each connection. When the server software version is visible, this helps troubleshooting if any problems with the connection arise. If this setting is enabled, the server will not send its full version and will only introduce itself as \"Bitvise SSH Server (WinSSHD)\".\n\nThe server identification cannot be removed completely because an attacker can always identify the server software, and its approximate version subset, through obvious implementation characteristics. If the server identification is completely removed, this primarily thwarts troubleshooting and well-meant compatibility features."
				},
				{
				name:"sendBannerMessage &#x2192; <a href=\"#IConnections915\" onclick=\"ScrollToEnum();return false;\">SendBannerMessage915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.SendBannerMessage.no",
				description:"The SSH Server can be configured to send a banner message to SSH and FTP clients before they authenticate. If the SSH Server sends such a banner to an SSH client, the SSH specification requires the client to display it. However, not all SSH clients display the banner. The SSH Server has no way of knowing if the banner was displayed."
				},
				{
				name:"bannerMessage &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"A verbatim message that will be sent as a user authentication banner to SSH and FTP clients."
				},
				{
				name:"bannerFile &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The SSH Server will send the contents of this file as a user authentication banner to SSH and FTP clients. If the SSH Server detects a text encoding other than UTF-8, it will attempt to convert the content to UTF-8."
				},
				{
				name:"loginTimeout &#x2192; ULONG {get} {set}",
				defaultValue:"default: 60",
				description:"The maximum number of seconds that may elapse from the beginning of the SSH connection to client's successful authentication. You can specify 0 to impose no limit, but this is not recommended because it makes the server more vulnerable to denial of service attacks."
				},
				{
				name:"maxPenaltyLoginAttempts &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3",
				description:"The maximum number of login attempts that fail with a penalty that the client can make before the connection is terminated by the server. You can specify 0 to impose no limit, but this is not recommended because it makes the server more vulnerable to denial of service attacks, and because it makes it somewhat easier for an attacker to guess a password.\n\nAn example login attempt that fails with a penalty is a \"password\" authentication request with an invalid user name or password. An example login attempt without penalty is a \"publickey\" authentication request that either uses an invalid user name, or a public key that is not associated with that user name in SSH Server settings.\n\nMost types of failed public key and GSSAPI authentication attempts do not incur penalties because widely used client software will attempt to log into the SSH Server using any and all public keys it can locate on the client computer. In domain environments, such software will also automatically attempt to authenticate using GSSAPI with Kerberos, even if not instructed by the user to do so."
				},
				{
				name:"penaltyLoginAttemptDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3",
				description:"The number of seconds that the SSH Server will wait before accepting a new login attempt after a previous login attempt with the same user name or from the same IP address has failed with a penalty.\n\nThe SSH Server will delay an individual login attempt for more than the specified number of seconds if multiple concurrent login attempts are made for the same account, or coming from the same IP address. Such login attempts will be queued so that no more than one will be processed every \"Penalty login attempt delay\" number of seconds. See also \"Delayed login expiration\".\n\nAn example login attempt that fails with a penalty is a \"password\" authentication request with an invalid user name or password. An example login attempt without penalty is a \"publickey\" authentication request that either uses an invalid user name, or a public key that is not associated with that user name in SSH Server settings.\n\nMost types of failed public key and GSSAPI authentication attempts do not incur penalties because widely used client software will attempt to log into the SSH Server using any and all public keys it can locate on the client computer. In domain environments, such software will also automatically attempt to authenticate using GSSAPI with Kerberos, even if not instructed by the user to do so."
				},
				{
				name:"delayedLoginExpiration &#x2192; ULONG {get} {set}",
				defaultValue:"default: 30",
				description:"When multiple concurrent login attempts are made for the same account or coming from the same IP address, the SSH Server will queue them and process them one after another. If an attempt fails with a penalty, the next attempt is processed after \"Penalty login attempt delay\" number of seconds.\n\nIf an individual login attempt would have to wait longer than the number of seconds specified here, its SSH connection will be terminated with an error message. This setting should be shorter than the authentication timeout used by any legitimate client. Otherwise, the delayed client may disconnect due to timeout, without being informed about the circumstances of the experienced delay.\n\nAn example login attempt that fails with a penalty is a \"password\" authentication request with an invalid user name or password. An example login attempt without penalty is a \"publickey\" authentication request that either uses an invalid user name, or a public key that is not associated with that user name in SSH Server settings.\n\nMost types of failed public key and GSSAPI authentication attempts do not incur penalties because widely used client software will attempt to log into the SSH Server using any and all public keys it can locate on the client computer. In domain environments, such software will also automatically attempt to authenticate using GSSAPI with Kerberos, even if not instructed by the user to do so."
				},
				{
				name:"noDelayPublicKey &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"When multiple concurrent login attempts are made for the same account or coming from the same IP address, the SSH Server will queue them and process them one after another. If an attempt fails with a penalty, the next attempt is processed after \"Penalty login attempt delay\" number of seconds.\n\nThis is designed to thwart a distributed password guessing attack, but can be leveraged by an attacker who can guess a legitimate user's login name to deny access to that user by flooding the SSH Server with invalid login attempts coming from random IP addresses.\n\nIf this option is checked, logon delaying will not be applied to public key authentication attempts, keeping this avenue of access open."
				},
				{
				name:"noDelayGssApi &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"When multiple concurrent login attempts are made for the same account or coming from the same IP address, the SSH Server will queue them and process them one after another. If an attempt fails with a penalty, the next attempt is processed after \"Penalty login attempt delay\" number of seconds.\n\nThis is designed to thwart a distributed password guessing attack, but can be leveraged by an attacker who can guess a legitimate user's login name to deny access to that user by flooding the SSH Server with invalid login attempts coming from random IP addresses.\n\nIf this option is checked, logon delaying will not be applied to authentication requests using GSSAPI (either Kerberos or NTLM), keeping this avenue of access open."
				},
				{
				name:"maxTotalConnections &#x2192; ULONG {get} {set}",
				defaultValue:"default: 9999",
				description:"The maximum total number of authenticated connections that the SSH Server will allow simultaneously. This limit takes effect regardless of user name and type of connection.\n\nIf this limit is reached, no further client will be able to authenticate if broken connection detection fails and the SSH Server believes incorrectly that previous connections are still active."
				},
				{
				name:"maxTotalConnFromUsers &#x2192; ULONG {get} {set}",
				defaultValue:"default: 500",
				description:"The maximum total number of authenticated connections that the SSH Server will allow simultaneously from users. This limit takes effect regardless of user name. If the server is acting as a master or secondary master in master/follower synchronization, then this setting ignores incoming connections from followers.\n\nIf this limit is reached, no further user will be able to authenticate if broken connection detection fails and the SSH Server believes incorrectly that previous connections are still active.\n\nWe recommend to keep this limit under 2400, and to enable the related setting Ignore connection limits for administrators. This will provide reserve room for administrators to connect by not allowing regular users to exhaust the SSH Server's hardcoded limit of 2498 connections from all authenticated users."
				},
				{
				name:"maxTotalConnWithProcesses &#x2192; ULONG {get} {set}",
				defaultValue:"default: 500",
				description:"This limit applies only to connections with active child processes. A child process is started for every SCP transfer, SFTP channel, FTPS connection, SSH terminal window, or SSH exec request. Every connection with one or more active child processes occupies one desktop heap. By default, a non-interactive desktop heap is 512 KiB in size, and pre-Vista versions of Windows have a default system-wide limit, called SessionViewSize, of 48 MiB for all desktop heaps. Therefore, on pre-Vista servers with many simultaneous users, desktop heaps are usually the first resource that runs out. If the memory for desktop heaps is exhausted, other processes on the system that need their own desktop heap will not be able to start. This includes non-interactive processes such as services, scheduled tasks and CGI scripts. Windows Vista and later no longer has a fixed SessionViewSize, allowing the total size of desktop heaps to grow dynamically.\n\nIt is possible to increase the system's capacity for non-interactive desktop heaps by using the registry to decrease the size of each heap or to increase the value of SessionViewSize. Note that decreasing the size of the desktop heap may affect some applications which require a certain sized desktop heap. For more information on desktop heaps, please see: https://docs.microsoft.com/en-us/archive/blogs/ntdebugging/desktop-heap-overview"
				},
				{
				name:"ignoreConnLimitsForAdmins &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Allows administrators to connect to the SSH Server even when configured connection limits are reached. However, not even administrators will be able to connect when the SSH Server reaches its hardcoded limit of 2498 connections from all authenticated users."
				},
				{
				name:"startReexchange &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"During a lengthy connection, regular key re-exchange protects against a resourceful attacker who could analyze exchanged encrypted data and recover encryption keys. Regular key re-exchange is required by the SSH specification, but there exist implementations that will disconnect if the server starts it.\n\nIf this setting is enabled, the SSH Server will automatically initiate key re-exchange at regular intervals during an SSH connection. If disabled, the server will still accept key re-exchange if initiated by the client, but will not initiate it.\n\nDepending on the negotiated encryption algorithm and the amount of data transferred, disabling key re-exchange may significantly compromise connection security. If you are considering disabling key re-exchange, consider also updating the client software, or replacing it with software that supports key re-exchange."
				},
				{
				name:"keepAliveTimeout &#x2192; ULONG {get} {set}",
				defaultValue:"default: 20",
				description:"If there is no traffic over an SSH connection for longer than this number of seconds, the SSH Server will send to the client a small packet. This verifies whether the client is still connected. This detects connections that disconnect in a way that the SSH Server is not notified. This can also keep an intermediate network component from terminating the connection due to perceived inactivity.\n\nIf your SSH or SFTP connections keep disconnecting when idle, try a low non-zero value: for example, 5 seconds. To disable this feature, configure 0.\n\nFTP connections do not have a mechanism to detect broken connections. For FTP connections, a connection timeout is always in place. The FTP connection timeout either equals the SSH connection timeout, or 45 minutes, whichever is shorter. A future version will introduce this as a separate setting."
				},
				{
				name:"connectionTimeout &#x2192; ULONG {get} {set}",
				defaultValue:"default: 0",
				description:"The number of seconds an SSH connection may remain inactive before the SSH Server will terminate it. To disable this feature, configure 0.\n\nFTP connections do not have a mechanism to detect broken connections. For FTP connections, a connection timeout is always in place. The FTP connection timeout either equals the SSH connection timeout, or 45 minutes, whichever is shorter. A future version will introduce this as a separate setting.\n\nThe SSH Server will not terminate a connection that simulates activity, even if the activity is trivial. The SSH Server cannot prevent a client from reconnecting if the client is permitted to connect. If a client is creating too many simultaneous connections and not disconnecting them, limit the number of simultaneous connections the client can make. You can configure this in an account or group settings entry, under Limits and quotas."
				},
				{
				name:"sendFwdingRuleDescs &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, then if any server-configured port forwarding rules are set up in SSH Server settings, the server will send the configured descriptions of those rules to clients for which the rules are effective. Descriptions will only be sent to clients that indicate support for server-side rule descriptions."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IConnections915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"SendBannerMessage915",
				description:"SendBannerMessage_no (0): No<br />SendBannerMessage_useText (1): Yes, enter text directly<br />SendBannerMessage_useFile (2): Yes, load from file"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ICustomSubsystem915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! name &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"powershell\"",
				description:"The name of the SSH subsystem. This exact configured name will need to be sent by a client to access the custom subsystem.\n\nSubsystem names should follow conventions for SSH protocol names as per RFC 4250, section 4.6.1:\n\nhttps://tools.ietf.org/html/rfc4250#section-4.6.1\n\nSubsystem names must not contain commas or whitespace. Interoperability will be improved if the name is all lowercase, printable US-ASCII. Custom, unregistered names are encouraged to use the syntax name@example.com (using your own domain name)."
				},
				{
				name:"command &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"pwsh.exe -sshs -NoLogo -NoProfile\"",
				description:"The command that will be executed by the SSH Server to run this subsystem.\n\nThe command will be executed exactly as-is. No shell prefix (for example \"cmd /c\") will be added. If the command is meant to run a script, rather than an executable program, enter the required shell prefix.\n\nThe configured command will be run without terminal emulation. Standard input, standard output, and standard error will be passed between the client and the subsystem command without modification."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ICustomSubsystem915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ICustomSubsystems915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#ICustomSubsystem915\" onclick=\"SetInterface('ICustomSubsystem915', false);return false;\">ICustomSubsystem915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#ICustomSubsystem915\" onclick=\"SetInterface('ICustomSubsystem915', false);return false;\">ICustomSubsystem915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ICustomSubsystems915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#ICustomSubsystem915\" onclick=\"SetInterface('ICustomSubsystem915', false);return false;\">ICustomSubsystem915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#ICustomSubsystems915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#ICustomSubsystem915\" onclick=\"SetInterface('ICustomSubsystem915', false);return false;\">ICustomSubsystem915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#ICustomSubsystem915\" onclick=\"SetInterface('ICustomSubsystem915', false);return false;\">ICustomSubsystem915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#ICustomSubsystem915\" onclick=\"SetInterface('ICustomSubsystem915', false);return false;\">ICustomSubsystem915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#ICustomSubsystem915\" onclick=\"SetInterface('ICustomSubsystem915', false);return false;\">ICustomSubsystem915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#ICustomSubsystem915\" onclick=\"SetInterface('ICustomSubsystem915', false);return false;\">ICustomSubsystem915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#ICustomSubsystem915\" onclick=\"SetInterface('ICustomSubsystem915', false);return false;\">ICustomSubsystem915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IDayOccurrenceGroup915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"first &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"second &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"third &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"fourth &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"last &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IDayOccurrenceGroup915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IDayOfWeekGroup915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"sun &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"mon &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"tue &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"wed &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"thu &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"fri &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"sat &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IDayOfWeekGroup915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IDebugging915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"enableInWindowDebugMode &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Enabling this setting will slow down the SSH connection to help investigate flow control problems when data is received by the server. When enabling this setting, you should also enable the Trace log event D_SSH_WINDOW_SIZE_IN_CHANGED.\n\nEnabling this setting will change SSH connection behavior as follows:\n\n* The in-window will no longer receive immediate proactive adjustments it would normally receive to maximize transfer speed.\n\n* The in-window will be adjusted immediately when exhausted and when all in-data is flushed.\n\n* When the in-window is not exhausted, but there is no in-window activity and all in-data is flushed, the window will be adjusted after a delay. The duration of this delay depends on the remaining in-window size. A 3 second delay will be used if the remaining in-window is less than 100 bytes; 6 seconds if less than 1,000 bytes; and 9 seconds otherwise."
				},
				{
				name:"adjustInWindowImmediately &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, channel in-window adjusting won't be delayed until it reaches 1/3 of the maximum window size. Enabling this setting will increase SSH channel overhead due to sending window adjustments more frequently, in the interest of investigating issues with clients where a cause related to window adjustment is suspected.\n\nThis setting has no effect if channel in-window debug mode is enabled."
				},
				{
				name:"adjustInWindowIndividually &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, channel in-window size will be adjusted after each data packet passed to the channel, unless the window has already reached its maximum value. Enabling this setting will further increase SSH channel overhead in the interest of investigating issues with clients where a cause related to window adjustment is suspected.\n\nThis setting has no effect if channel in-window debug mode is enabled. When this setting is enabled, immediate channel in-window adjustment is implied."
				},
				{
				name:"useStaticMaxInWindowSize &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, dynamic adjustment of maximum channel in-window size will be disabled. Intended to investigate issues with clients where a cause related to window adjustment is suspected."
				},
				{
				name:"staticMaxInWindowSize &#x2192; ULONG {get} {set}",
				defaultValue:"default: 4096",
				description:"The maximum channel in-window size. The valid range is between 256 and 4096 KiB."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IDebugging915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IDenialOfServiceProtection915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"acceptDelayMs &#x2192; ULONG {get} {set}",
				defaultValue:"default: 200",
				description:"To avert denial-of-service attacks, the SSH Server will wait for a number of milliseconds between accepting new client connections, if the number of new connections that recently arrived at the server exceeds a configured number during a configured amount of time. When an accept delay is triggered, this setting configures the duration, in milliseconds.\n\nIf clients continue to connect rapidly after accept delays are triggered, some of the clients will receive an error message when they try to connect to the server. Upon receiving such an error, SSH clients attempting to establish a legitimate connection should wait a short while, then retry the connection, repeating until a connection succeeds."
				},
				{
				name:"acceptDelayThreshold &#x2192; ULONG {get} {set}",
				defaultValue:"default: 200",
				description:"The SSH Server will apply the configured accept delay if, during the configured time frame, the number of new connections exceeds the number configured in this setting."
				},
				{
				name:"acceptDelayWindowSecs &#x2192; ULONG {get} {set}",
				defaultValue:"default: 10",
				description:"The SSH Server will apply the configured accept delay if more than the configured number of new connections are received, over a time period lasting the number of seconds configured in this setting."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IDenialOfServiceProtection915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IDkimKeypair915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"isSet &#x2192; BOOL {get}",
				description:"Returns whether the DKIM keypair is set."
				},
				{
				name:"privKey &#x2192; BSTR {get} {set}",
				description:"Gets or sets the DKIM private key in ciphertext."
				},
				{
				name:"pubKeyText &#x2192; BSTR {get}",
				description:"Gets the DKIM public key in a form suitable to publish in a DNS DKIM record."
				}
			],
			methods:
			[
				{
				name:"GenerateKeypair ()",
				description:"Generates a new DKIM keypair. This will replace any DKIM keypair if it is currently set."
				}
			]
			},
			{
			name:"IDomainOrder915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IDomainOrderEntry915\" onclick=\"SetInterface('IDomainOrderEntry915', false);return false;\">IDomainOrderEntry915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IDomainOrderEntry915\" onclick=\"SetInterface('IDomainOrderEntry915', false);return false;\">IDomainOrderEntry915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IDomainOrder915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IDomainOrderEntry915\" onclick=\"SetInterface('IDomainOrderEntry915', false);return false;\">IDomainOrderEntry915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Move (ULONG indexFrom, ULONG indexTo)",
				description:"Moves the entry with the specified zero-based index to the new location within the list."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IDomainOrder915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IDomainOrderEntry915\" onclick=\"SetInterface('IDomainOrderEntry915', false);return false;\">IDomainOrderEntry915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IDomainOrderEntry915\" onclick=\"SetInterface('IDomainOrderEntry915', false);return false;\">IDomainOrderEntry915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IDomainOrderEntry915\" onclick=\"SetInterface('IDomainOrderEntry915', false);return false;\">IDomainOrderEntry915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IDomainOrderEntry915\" onclick=\"SetInterface('IDomainOrderEntry915', false);return false;\">IDomainOrderEntry915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IDomainOrderEntry915\" onclick=\"SetInterface('IDomainOrderEntry915', false);return false;\">IDomainOrderEntry915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IDomainOrderEntry915\" onclick=\"SetInterface('IDomainOrderEntry915', false);return false;\">IDomainOrderEntry915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IDomainOrderEntry915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:2,
				name:"! domain &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"A Windows domain name. Domain names will be tried in order from first to last. Set this to an empty value to specify that the local machine name should be tried.\n\nThis setting cannot be used to configure a Unix realm name. Users logging in with a login name from a Unix realm always need to provide their fully qualified principal name, including realm.\n\nNo two domain order entries can have the same value of Windows domain."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"An optional comment describing this domain order entry."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IDomainOrderEntry915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IEncryptedVolume915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! volumeName &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The name of this volume. Other parts of SSH Server settings will reference this volume name."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"An optional comment describing this volume."
				},
				{
				name:"dataFile &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Full path to a file where this volume is stored. If the data file does not yet exist, the SSH Server will create it.\n\nTo create a new volume, either browse or manually enter the full path to the volume file that the SSH Server should create. It is not necessary for the filename to have an extension. The file must not exist yet.\n\nOnce the SSH Server creates the volume, it will consist of two files. The first file, the volume file, will match the filename you enter here. A second file, the journal file, will use the same filename with a \".jnl\" extension. The journal file is used to ensure that writes to the encrypted volume are recoverable and consistent in the event of a system failure.\n\nThe SSH Server will access the encrypted volume from the security context of the main SSH Server service. The volume files need to be readable and writable from Windows session 0 by the account of the main SSH Server service. This is usually Local System. Other Windows accounts do not need Windows filesystem permissions to access the files that make up the volume.\n\nUser-specific profile directories, such as your personal Desktop folder, are probably not the best place for encrypted volumes.\n\nIf you are configuring an existing volume, configure this setting to point to the volume file, not the journal file."
				},
				{
				name:"password &#x2192; <a href=\"#IPassword915\" onclick=\"SetInterface('IPassword915', false);return false;\">IPassword915</a> {get}",
				description:"The password for this encrypted volume.\n\nIf the data file does not yet exist, the SSH Server will initialize the volume with this password.\n\nYou should generate a complex, random, long-term password and keep it in a password manager. The password for an existing volume cannot be changed, except by creating a new volume with a new password, and copying all files and directories to the new volume."
				},
				{
				name:"limitSize &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to limit the size of this volume."
				},
				{
				name:"maxSizeMb &#x2192; ULONG {get} {set}",
				defaultValue:"default: 1024",
				description:"The maximum size of this volume in mebibytes (1,048,576 bytes). If the volume already exceeds this size, it will not shrink, but it will not grow further."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IEncryptedVolume915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IEncryptedVolumes915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IEncryptedVolume915\" onclick=\"SetInterface('IEncryptedVolume915', false);return false;\">IEncryptedVolume915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IEncryptedVolume915\" onclick=\"SetInterface('IEncryptedVolume915', false);return false;\">IEncryptedVolume915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IEncryptedVolumes915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IEncryptedVolume915\" onclick=\"SetInterface('IEncryptedVolume915', false);return false;\">IEncryptedVolume915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IEncryptedVolumes915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IEncryptedVolume915\" onclick=\"SetInterface('IEncryptedVolume915', false);return false;\">IEncryptedVolume915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IEncryptedVolume915\" onclick=\"SetInterface('IEncryptedVolume915', false);return false;\">IEncryptedVolume915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IEncryptedVolume915\" onclick=\"SetInterface('IEncryptedVolume915', false);return false;\">IEncryptedVolume915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IEncryptedVolume915\" onclick=\"SetInterface('IEncryptedVolume915', false);return false;\">IEncryptedVolume915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IEncryptedVolume915\" onclick=\"SetInterface('IEncryptedVolume915', false);return false;\">IEncryptedVolume915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IEncryptedVolume915\" onclick=\"SetInterface('IEncryptedVolume915', false);return false;\">IEncryptedVolume915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IEncryption915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"chacha20_poly1305 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to support encryption using ChaCha20 with Poly1305 and a 256-bit key. This is an AEAD encryption algorithm that uses encrypted packet lengths and requires no additional MAC algorithm. A 128-bit authentication tag is appended to each packet.\n\nFor clients that do not support strict key exchange, this algorithm is vulnerable to the Terrapin man-in-the-middle prefix truncation attack. To avoid this, use this algorithm exclusively with client software which implements strict key exchange. Client software older than December 2023 does not support this.\n\nThe SSH Server's implementation of this algorithm uses OpenSSL. As a result, this algorithm cannot be used if FIPS mode is enabled in Windows. This algorithm is also not supported by the legacy Crypto++ FIPS cryptographic provider, which the SSH Server uses on Windows XP and Windows Server 2003.\n\nThe SSH Server's implementation of this algorithm is compatible with chacha20-poly1305@openssh.com."
				},
				{
				name:"aes256_gcm &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support encryption using AES in GCM mode with a 256-bit key. This is an AEAD encryption mode that uses plaintext packet lengths and requires no additional MAC algorithm. A 128-bit authentication tag is appended to each packet.\n\nThis mode is not supported by the legacy Crypto++ FIPS cryptographic provider, which is used on Windows XP and Windows Server 2003.\n\nThe SSH Server's implementation of this mode is compatible with aes256-gcm@openssh.com."
				},
				{
				name:"aes128_gcm &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support encryption using AES in GCM mode with a 128-bit key. This is an AEAD encryption mode that uses plaintext packet lengths, and requires no additional MAC algorithm. A 128-bit authentication tag is appended to each packet.\n\nThis mode is not supported by the legacy Crypto++ FIPS cryptographic provider, which is used on Windows XP and Windows Server 2003.\n\nThe SSH Server's implementation of this mode is compatible with aes128-gcm@openssh.com."
				},
				{
				name:"aes256_ctr &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support encryption using AES in SDCTR mode with a 256-bit key. Support for this algorithm is recommended for compatibility with most clients."
				},
				{
				name:"aes192_ctr &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support encryption using AES in SDCTR mode with a 192-bit key.Support for this algorithm is recommended for compatibility with most clients."
				},
				{
				name:"aes128_ctr &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support encryption using AES (Rijndael) in SDCTR mode with a 128-bit key.Support for this algorithm is recommended for compatibility with most clients."
				},
				{
				name:"alg_3des_ctr &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to support encryption using three-key triple DES in SDCTR mode with a 168-bit key (estimated 112-bit symmetric security)."
				},
				{
				name:"aes256_cbc &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to support encryption using AES (Rijndael) in CBC mode with a 256-bit key.\n\nThere is an attack against CBC mode algorithms which can allow an active attacker to extract up to 32 bits of plaintext from a previous ciphertext block, at the cost of interrupting many connections with a MAC integrity check failure.\n\nIf encrypt-then-MAC data integrity algorithms are enabled, then CBC with ETM is also vulnerable to the Terrapin man-in-the-middle prefix truncation attack. This can be mitigated by using client software which supports strict key exchange. However, such client software also supports newer encryption modes and does not need CBC.\n\nCBC mode algorithms are disabled by default. They can be enabled for compatibility with older clients."
				},
				{
				name:"aes192_cbc &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to support encryption using AES (Rijndael) in CBC mode with a 192-bit key.\n\nThere is an attack against CBC mode algorithms which can allow an active attacker to extract up to 32 bits of plaintext from a previous ciphertext block, at the cost of interrupting many connections with a MAC integrity check failure.\n\nIf encrypt-then-MAC data integrity algorithms are enabled, then CBC with ETM is also vulnerable to the Terrapin man-in-the-middle prefix truncation attack. This can be mitigated by using client software which supports strict key exchange. However, such client software also supports newer encryption modes and does not need CBC.\n\nCBC mode algorithms are disabled by default. They can be enabled for compatibility with older clients."
				},
				{
				name:"aes128_cbc &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to support encryption using AES (Rijndael) in CBC mode with a 128-bit key.\n\nThere is an attack against CBC mode algorithms which can allow an active attacker to extract up to 32 bits of plaintext from a previous ciphertext block, at the cost of interrupting many connections with a MAC integrity check failure.\n\nIf encrypt-then-MAC data integrity algorithms are enabled, then CBC with ETM is also vulnerable to the Terrapin man-in-the-middle prefix truncation attack. This can be mitigated by using client software which supports strict key exchange. However, such client software also supports newer encryption modes and does not need CBC.\n\nCBC mode algorithms are disabled by default. They can be enabled for compatibility with older clients."
				},
				{
				name:"alg_3des_cbc &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to support encryption using three-key triple DES in CBC mode with a 168-bit key (estimated 112-bit symmetric security).\n\nThere is an attack against CBC mode algorithms which can allow an active attacker to extract up to 32 bits of plaintext from a previous ciphertext block, at the cost of interrupting many connections with a MAC integrity check failure.\n\nIf encrypt-then-MAC data integrity algorithms are enabled, then CBC with ETM is also vulnerable to the Terrapin man-in-the-middle prefix truncation attack. This can be mitigated by using client software which supports strict key exchange. However, such client software also supports newer encryption modes and does not need CBC.\n\nCBC mode algorithms are disabled by default. They can be enabled for compatibility with older clients."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IEncryption915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IEnumerations915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"AddressVer4Type &#x2192; IAddressVer4Type915",
				description:"ipv4 (0): IPv4<br />location (4): Any IP from a country or continent<br />dnsName (3): DNS name"
				},
				{
				name:"AddressVer6Type &#x2192; IAddressVer6Type915",
				description:"ipv4 (0): IPv4<br />ipv6 (1): IPv6<br />location (4): Any IP from a country or continent<br />anyIP (2): Any IP address<br />dnsName (3): DNS name"
				},
				{
				name:"AdsiEncryption &#x2192; IAdsiEncryption915",
				description:"kerberos (0): Kerberos<br />tls (1): TLS (SSL)<br />plaintext (2): Plaintext"
				},
				{
				name:"AuthDisp &#x2192; IAuthDisp915",
				description:"defaultValue (0): Use group default<br />disabled (1): Disabled<br />allowed (2): Allowed<br />required (3): Required"
				},
				{
				name:"AutoManageHostKeys &#x2192; IAutoManageHostKeys915",
				description:"disabled (1): Disabled<br />enabledKeepOld (2): Enabled, keep old<br />enabledDeleteOld (3): Enabled, delete old"
				},
				{
				name:"AutomaticIpBlocking &#x2192; IAutomaticIpBlocking915",
				description:"doNotBlock (1): Do not block<br />blockTemporarily (2): Block temporarily<br />blockPermanently (3): Block permanently"
				},
				{
				name:"AutomaticUpdatesType &#x2192; IAutomaticUpdatesType915",
				description:"doNotCheck (0): Do not check for updates<br />checkOnly (1): Check for updates, apply only manually<br />stronglyRecommended (2): Apply strongly recommended updates<br />recommended (3): Apply recommended updates<br />allAvailable (4): Apply available updates"
				},
				{
				name:"BandwidthLimit &#x2192; IBandwidthLimit915",
				description:"defaultValue (0): Use group default<br />none (1): None<br />mbps (2): MB/s<br />kbps (3): KB/s"
				},
				{
				name:"BandwidthType &#x2192; IBandwidthType915",
				description:"defaultValue (0): Use group default<br />perUser (1): Per user<br />perConnection (2): Per connection"
				},
				{
				name:"CertAlgId &#x2192; ICertAlgId915",
				description:"rsa (0): RSA"
				},
				{
				name:"CertificateFormat &#x2192; ICertificateFormat915",
				description:"bitvise: 0<br />x509: 1<br />pfx: 2<br />pem: 3"
				},
				{
				name:"CertificateType &#x2192; ICertificateType915",
				description:"certificate: 0<br />privateKey: 1<br />nonEmployableCertificate: 2"
				},
				{
				name:"ConsoleVersion &#x2192; IConsoleVersion915",
				description:"systemDefault (0): System default<br />preWin10 (1): Pre-Windows 10<br />win10 (2): Windows 10"
				},
				{
				name:"CsvColumnNames &#x2192; ICsvColumnNames915",
				description:"doNotInclude (0): Do not include<br />friendlyNames (1): Include friendly names<br />scriptableNames (2): Include scriptable names"
				},
				{
				name:"CustomSubsysAccess &#x2192; ICustomSubsysAccess915",
				description:"defaultValue (1): Use group default<br />denyAll (2): Deny all<br />allowSpecific (3): Allow specific<br />allowAll (4): Allow all"
				},
				{
				name:"DayChoice &#x2192; IDayChoice915",
				description:"dayOfWeek (0): Day of week<br />dayOfMonth (1): Day of month"
				},
				{
				name:"DefaultGlobalYesNo &#x2192; IDefaultGlobalYesNo915",
				description:"defaultValue (0): Use global default<br />yes (1): Yes<br />no (2): No"
				},
				{
				name:"DefaultGroupYesNo &#x2192; IDefaultGroupYesNo915",
				description:"defaultValue (0): Use group default<br />yes (1): Yes<br />no (2): No"
				},
				{
				name:"DefaultYesNo &#x2192; IDefaultYesNo915",
				description:"defaultValue (0): Default<br />yes (1): Yes<br />no (2): No"
				},
				{
				name:"DirHandleMisuse &#x2192; IDirHandleMisuse915",
				description:"failImmediately (0): Fail immediately<br />forwardAsIs (1): Forward as-is<br />replaceWithPathOp (2): Replace with path operation"
				},
				{
				name:"DisplayTimeType &#x2192; IDisplayTimeType915",
				description:"defaultValue (0): Use group default<br />serverTimeWithOffset (1): Server local time with offset<br />serverTime (2): Server local time<br />utc (3): UTC"
				},
				{
				name:"DuplicateTaskPolicy &#x2192; IDuplicateTaskPolicy915",
				description:"doNotStart (1): Do not start<br />parallel (2): Run in parallel<br />stopExisting (3): Stop existing instance<br />queue (4): Queue"
				},
				{
				name:"EmailSending &#x2192; IEmailSending915",
				description:"notConfigured (0): Not configured<br />sendViaRelay (1): Send via outgoing SMTP server<br />sendDirectly (2): Send to destination MX (advanced)"
				},
				{
				name:"EmulateCheckFile &#x2192; IEmulateCheckFile915",
				description:"always (0): Always<br />asFallback (1): As fallback<br />never (2): Never"
				},
				{
				name:"EmulateTextMode &#x2192; IEmulateTextMode915",
				description:"always (0): Always<br />ifNeeded (1): If needed"
				},
				{
				name:"EmulateTextNewline &#x2192; IEmulateTextNewline915",
				description:"autoDetect (0): Auto detect<br />crlf (1): CR LF (Windows)<br />lf (2): LF (Unix)<br />cr (3): CR (Mac)"
				},
				{
				name:"EventType &#x2192; IEventType915",
				description:"error: 0<br />warning: 1<br />info: 2<br />trace: 3<br />debug: 4<br />unrecognized: 5"
				},
				{
				name:"FileSharing &#x2192; IFileSharing915",
				description:"none (0): None<br />read (1): Read<br />write (2): Write<br />delete (4): Delete<br />readWrite (3): Read, Write<br />readDelete (5): Read, Delete<br />writeDelete (6): Write, Delete<br />readWriteDelete (7): Read, Write, Delete"
				},
				{
				name:"FileSharingBeh &#x2192; IFileSharingBeh915",
				description:"defaultValue (0): Use global default<br />free (1): Free<br />force (2): Force"
				},
				{
				name:"GitType &#x2192; IGitType915",
				description:"cygwin (0): Cygwin or compatible<br />msysgit (1): Git for Windows, msysGit or compatible"
				},
				{
				name:"GlobalAuthMethod &#x2192; IGlobalAuthMethod915",
				description:"disabledGlobally (1): Disabled globally<br />permitWinAccounts (2): Permit for Windows accounts only<br />permitVirtAccounts (3): Permit for virtual accounts only<br />permit (4): Permit for any account type"
				},
				{
				name:"GlobalGssApiAuth &#x2192; IGlobalGssApiAuth915",
				description:"disabled (1): Disabled<br />allowed (2): Allowed<br />required (3): Required"
				},
				{
				name:"GlobalRequestCapable &#x2192; IGlobalRequestCapable915",
				description:"builtInRules (0): Use built-in rules<br />yes (1): Yes<br />no (2): No"
				},
				{
				name:"GroupType &#x2192; IGroupType915",
				description:"everyone (0): Everyone<br />local (1): Local<br />domain (2): Domain"
				},
				{
				name:"GssKex &#x2192; IGssKex915",
				description:"keep (0): Keep<br />prefer (1): Prefer<br />disable (2): Disable"
				},
				{
				name:"HostKeyType &#x2192; IHostKeyType915",
				description:"key: 0<br />unrecognizedKey: 1<br />md5Fingerprint: 2<br />bubbleBabbleFingerprint: 3<br />sha256Fingerprint: 4"
				},
				{
				name:"IfTemporaryProfileLoaded &#x2192; IIfTemporaryProfileLoaded915",
				description:"defaultValue (0): Use group default<br />treatAsFailure (1): Treat as failure<br />noRestrict (2): No restrictions"
				},
				{
				name:"ImageFileFormat &#x2192; IImageFileFormat915",
				description:"bmp1Bpp (0): BMP format, 1 bit per pixel<br />bmp8Bpp (1): BMP format, 8 bits per pixel<br />bmp16Bpp (2): BMP format, 16 bits per pixel<br />bmp24Bpp (3): BMP format, 24 bits per pixel<br />png (4): PNG format - requires Windows 7 or newer<br />svg (5): SVG format"
				},
				{
				name:"InstanceType &#x2192; IInstanceType915",
				description:"standalone (0): Standalone<br />follower (1): Follower<br />master (2): Master<br />secondaryMaster (3): Secondary master"
				},
				{
				name:"InterfaceType &#x2192; IInterfaceType915",
				description:"ipv4 (0): IPv4<br />ipv6 (1): IPv6<br />freeForm (3): Free-form<br />anyIntf (2): Any interface"
				},
				{
				name:"IpListType &#x2192; IIpListType915",
				description:"defaultType (0): Default IP list type<br />blockedIPs (1): Import blocked IPs<br />permittedIPs (2): Import permitted IPs"
				},
				{
				name:"IpVersionType &#x2192; IIpVersionType915",
				description:"ipv4 (0): IPv4<br />ipv6 (1): IPv6"
				},
				{
				name:"IpVersionWN &#x2192; IIpVersionWN915",
				description:"none (2): None<br />ipv4 (0): IPv4<br />ipv6 (1): IPv6"
				},
				{
				name:"JobObject &#x2192; IJobObject915",
				description:"doNotUse (0): Do not use job object<br />noBreakaway (1): Use job object, no breakaway<br />allowBreakaway (2): Use job object, allow breakaway"
				},
				{
				name:"KbdiTotpAlg &#x2192; IKbdiTotpAlg915",
				description:"defaultValue (0): Use global default<br />hmacSha1 (1): hmac-sha1<br />hmacSha256 (2): hmac-sha256<br />hmacSha512 (3): hmac-sha512"
				},
				{
				name:"KbdiTotpAuth &#x2192; IKbdiTotpAuth915",
				description:"defaultValue (0): Use group default<br />disabled (1): Disabled<br />required (2): Required"
				},
				{
				name:"KbdiTotpNumDigits &#x2192; IKbdiTotpNumDigits915",
				description:"defaultValue (0): Use global default<br />digits6 (6): 6<br />digits7 (7): 7<br />digits8 (8): 8"
				},
				{
				name:"KeypairAlgId &#x2192; IKeypairAlgId915",
				description:"rsa (1): RSA<br />ed25519 (6): Ed25519<br />ecdsaSecp256k1 (2): ECDSA/secp256k1<br />ecdsaNistp256 (3): ECDSA/nistp256<br />ecdsaNistp384 (4): ECDSA/nistp384<br />ecdsaNistp521 (5): ECDSA/nistp521<br />dsa (0): DSA"
				},
				{
				name:"KeypairFormat &#x2192; IKeypairFormat915",
				description:"bitvise: 0<br />openSsh: 1"
				},
				{
				name:"LicenseType &#x2192; ILicenseType915",
				description:"unknown: 0<br />personal: 1<br />nonProfit: 2<br />business: 3"
				},
				{
				name:"LocationType &#x2192; ILocationType915",
				description:"country (0): Country<br />continent (1): Continent"
				},
				{
				name:"LogArchivalPathType &#x2192; ILogArchivalPathType915",
				description:"relToInstDir (1): Relative to installation directory<br />relToLogDir (2): Relative to log file directory"
				},
				{
				name:"LogFileWriteCloseTag &#x2192; ILogFileWriteCloseTag915",
				description:"always (0): Always<br />onFileClose (1): When file is closed"
				},
				{
				name:"LogLevel_EW &#x2192; ILogLevel_EW915",
				description:"logLevelE (0): Errors<br />logLevelEW (1): Errors, Warnings<br />logLevelCustom (9): Custom events"
				},
				{
				name:"LogLevel_EWI &#x2192; ILogLevel_EWI915",
				description:"logLevelE (0): Errors<br />logLevelEW (1): Errors, Warnings<br />logLevelEWI (2): Errors, Warnings, Info<br />logLevelCustom (9): Custom events"
				},
				{
				name:"LogLevel_EWIT &#x2192; ILogLevel_EWIT915",
				description:"logLevelE (0): Errors<br />logLevelEW (1): Errors, Warnings<br />logLevelEWI (2): Errors, Warnings, Info<br />logLevelEWIT (3): Errors, Warnings, Info, Trace<br />logLevelCustom (9): Custom events"
				},
				{
				name:"LogLevel_EWITD &#x2192; ILogLevel_EWITD915",
				description:"logLevelE (0): Errors<br />logLevelEW (1): Errors, Warnings<br />logLevelEWI (2): Errors, Warnings, Info<br />logLevelEWIT (3): Errors, Warnings, Info, Trace<br />logLevelEWITD (4): Errors, Warnings, Info, Trace, Debug<br />logLevelCustom (9): Custom events"
				},
				{
				name:"LogonType &#x2192; ILogonType915",
				description:"defaultValue (0): Use group default<br />interactive (1): Interactive<br />network (2): Network<br />batch (3): Batch"
				},
				{
				name:"LookupDirection &#x2192; ILookupDirection915",
				description:"forward (0): Forward lookup<br />reverse (1): Reverse lookup"
				},
				{
				name:"NoFlowControl &#x2192; INoFlowControl915",
				description:"disabled (1): Disabled<br />supported (115): Supported<br />preferred (112): Preferred"
				},
				{
				name:"OmitDefaults &#x2192; IOmitDefaults915",
				description:"yes: 0<br />no: 1"
				},
				{
				name:"OnAccountInfoFailure &#x2192; IOnAccountInfoFailure915",
				description:"defaultValue (0): Use group default<br />denyLogin (1): Deny login<br />restrictAccess (2): Disable access to child processes<br />disableProfile (3): Disable Windows profile loading<br />noRestrict (4): No restrictions"
				},
				{
				name:"OnDestinationExist &#x2192; IOnDestinationExist915",
				description:"replace (0): Replace destination file<br />appendSuffix (1): Append suffix to moved filename<br />abort (2): Abort move operation"
				},
				{
				name:"OnDnsResolvingError &#x2192; IOnDnsResolvingError915",
				description:"next (0): Continue processing next rule<br />deny (1): Deny connection"
				},
				{
				name:"OnLogFileError &#x2192; IOnLogFileError915",
				description:"continue (0): Continue as normal without logging<br />adminOnly (1): Allow connections from administrators only<br />stopServer (2): Stop SSH Server"
				},
				{
				name:"OnMoveCompletedUploadFailure &#x2192; IOnMoveCompletedUploadFailure915",
				description:"runOnUploadCmd (0): Run On-upload command if configured<br />doNotRunOnUploadCmd (1): Do not run On-upload command"
				},
				{
				name:"OnRememberedSharesListFailure &#x2192; IOnRememberedSharesListFailure915",
				description:"defaultValue (0): Use group default<br />continue (1): Continue connection<br />disconnect (2): Disconnect"
				},
				{
				name:"OnShareConnectFailure &#x2192; IOnShareConnectFailure915",
				description:"continue (0): Continue connection<br />disconnect (1): Disconnect"
				},
				{
				name:"OnStatsQuotaReached &#x2192; IOnStatsQuotaReached915",
				description:"defaultValue (0): Use group default<br />none (1): None<br />dropConnection (2): Drop connection<br />limitBandwidthMbps (3): Limit bandwidth MB/s<br />limitBandwidthKbps (4): Limit bandwidth KB/s"
				},
				{
				name:"OverrideListeningInterface &#x2192; IOverrideListeningInterface915",
				description:"never (0): Never<br />always (1): Always<br />ifBindFails (2): If binding fails"
				},
				{
				name:"PermitMoveExist &#x2192; IPermitMoveExist915",
				description:"useGeneralPerms (0): Use general permissions<br />withinSameDir (1): Within same directory<br />withinMountPoint (2): Within mount point<br />accrossMountPoints (3): Across mount points"
				},
				{
				name:"PopupMode &#x2192; IPopupMode915",
				description:"never: 0<br />whenMinimized: 1<br />whenInvisible: 2<br />always: 3"
				},
				{
				name:"PriorityClass &#x2192; IPriorityClass915",
				description:"belowNormal (1): Below normal<br />normal (2): Normal<br />aboveNormal (3): Above normal"
				},
				{
				name:"ProxyProtocol &#x2192; IProxyProtocol915",
				description:"disabled (0): Disabled<br />required (1): Required"
				},
				{
				name:"ProxyType &#x2192; IProxyType915",
				description:"none (0): None<br />socks4 (1): SOCKS4<br />socks5 (2): SOCKS5<br />http (3): HTTP"
				},
				{
				name:"PublicKeyFormat &#x2192; IPublicKeyFormat915",
				description:"ssh2: 0<br />openSsh: 1"
				},
				{
				name:"PwCacheAutoSave &#x2192; IPwCacheAutoSave915",
				description:"never (0): Never<br />pkAccounts (1): Public-key accounts<br />allAccounts (2): All accounts"
				},
				{
				name:"RemoteAdminAccessType &#x2192; IRemoteAdminAccessType915",
				description:"defaultValue (0): Use group default<br />full (1): Full access - must be administrator<br />delegated (2): Delegated access<br />no (3): No access - even if administrator"
				},
				{
				name:"SendBannerMessage &#x2192; ISendBannerMessage915",
				description:"no (0): No<br />useText (1): Yes, enter text directly<br />useFile (2): Yes, load from file"
				},
				{
				name:"ServiceType &#x2192; IServiceType915",
				description:"ssh (0): SSH<br />ftp (1): FTP"
				},
				{
				name:"SfsMountType &#x2192; ISfsMountType915",
				description:"unlimited (0): Unlimited access<br />directory (1): Specific directory<br />encrypted (2): Encrypted volume<br />sftp (3): Another SFTP server<br />hidden (4): Hidden, access denied<br />custom (5): Custom provider"
				},
				{
				name:"SfsProviderAcl &#x2192; ISfsProviderAcl915",
				description:"disable (0): Disable<br />unknownToDefault (1): If unknown ACE, use default ACL<br />unknownToError (2): If unknown ACE, error<br />unknownToIgnore (3): If unknown ACE, ignore"
				},
				{
				name:"SfsProviderOwnerGroup &#x2192; ISfsProviderOwnerGroup915",
				description:"disable (0): Disable<br />unknownToDefault (1): If unknown owner or group, use default<br />unknownToError (2): If unknown owner or group, error"
				},
				{
				name:"ShellAccess &#x2192; IShellAccess915",
				description:"defaultValue (1): Use group default<br />disabled (2): No shell access<br />bvshell (10): BvShell<br />cmdPrompt (3): Command Prompt<br />powershell (4): PowerShell<br />bash: 5<br />gitonly (6): Git access only<br />telnetSrv (9): Telnet server<br />custom (7): Custom shell settings"
				},
				{
				name:"ShowDefaults &#x2192; IShowDefaults915",
				description:"no: 0<br />yes: 1"
				},
				{
				name:"SmtpAuthType &#x2192; ISmtpAuthType915",
				description:"none (0): No authentication<br />useSuitable (1): Use suitable<br />authPlain (2): PLAIN authentication<br />authCramMd5 (3): CRAM-MD5 authentication<br />authLogin (4): LOGIN authentication"
				},
				{
				name:"TaskElevation &#x2192; ITaskElevation915",
				description:"yesIfPossible (0): Yes, if possible<br />require (1): Require<br />noIfPossible (2): No, if possible"
				},
				{
				name:"TaskOutputCodePage &#x2192; ITaskOutputCodePage915",
				description:"ansi (1): ANSI<br />utf8 (2): UTF-8"
				},
				{
				name:"TaskSecurityContext &#x2192; ITaskSecurityContext915",
				description:"localAccount (1): A specific Windows local account<br />domainAccount (2): A specific Windows domain account<br />microsoftAccount (3): A specific Microsoft account<br />bssContext (4): SSH Server security context<br />localService (5): The Local Service account<br />networkService (6): The Network Service account"
				},
				{
				name:"TaskShutdownPolicy &#x2192; ITaskShutdownPolicy915",
				description:"stop (1): Stop task and shut down<br />continue (2): Let task continue and shut down"
				},
				{
				name:"TaskTriggerEvent &#x2192; ITaskTriggerEvent915",
				description:"I_AUTH_KEYS_SYNC_SETTINGS_APPLIED: 319069<br />I_CONNECT_ACCEPTED: 340070<br />I_CONNECT_CANCELED: 340074<br />I_CONNECT_DISCONNECTED_ABNORMALLY: 340467<br />I_CONNECT_DISCONNECTED_NORMALLY: 340085<br />I_CONNECT_REJECTED: 340071<br />I_EXECS_COMMAND_EXECUTED: 362260<br />I_LOGOFF_CONN_COMMAND_EXECUTED: 343155<br />I_LOGOFF_WIN_COMMAND_EXECUTED: 343703<br />I_LOGON_AUTH_CANNOT_COMPLETE: 342894<br />I_LOGON_AUTH_COMPLETED: 342088<br />I_LOGON_AUTH_REJECTED: 342090<br />I_LOGON_AUTH_VIRT_PASSWORD_CHANGED: 342548<br />I_LOGON_AUTH_WIN_PASSWORD_CHANGED: 342547<br />I_LOGON_CONN_COMMAND_EXECUTED: 342146<br />I_LOGON_WIN_COMMAND_EXECUTED: 342695<br />I_SCP_SERVER_COMMAND_STARTED: 363268<br />I_SERVICE_CONFIG_DESCRIPTION: 310016<br />I_SFS_TRANSFER_FILE: 370348<br />I_SSH_KEY_EXCHANGE_MISMATCH: 351498<br />I_TOTERMS_COMMAND_EXECUTED: 361247<br />I_UPDATE_MANAGER_INSTALL_LAUNCHED: 324561<br />I_UPLOAD_COMMAND_EXECUTED: 350450<br />W_SYSTEM_MONITOR_HIGH_CPU_USAGE: 229745<br />W_SYSTEM_MONITOR_HIGH_MEMORY_USAGE: 229747<br />W_SYSTEM_MONITOR_LOW_DISK_SPACE: 229749"
				},
				{
				name:"TaskTriggerPeriod &#x2192; ITaskTriggerPeriod915",
				description:"daily (1): Daily<br />weekly (2): Weekly<br />monthly (3): Monthly"
				},
				{
				name:"TaskTriggerType &#x2192; ITaskTriggerType915",
				description:"time (1): Time<br />logEvent (2): Log event<br />logEventList (3): Log event list"
				},
				{
				name:"TaskType &#x2192; ITaskType915",
				description:"logMaintenance (1): Log file maintenance<br />execCommand (2): Execute command<br />emailNotification (3): Email notification"
				},
				{
				name:"TerminalCodePage &#x2192; ITerminalCodePage915",
				description:"utf8 (65001): UTF-8<br />iso88591 (28591): ISO 8859-1<br />iso88592 (28592): ISO 8859-2<br />iso88593 (28593): ISO 8859-3<br />iso88594 (28594): ISO 8859-4<br />iso88595 (28595): ISO 8859-5<br />iso88596 (28596): ISO 8859-6<br />iso88597 (28597): ISO 8859-7<br />iso88598 (28598): ISO 8859-8<br />iso88599 (28599): ISO 8859-9<br />iso885910 (28600): ISO 8859-10<br />iso885911 (28601): ISO 8859-11<br />iso885913 (28603): ISO 8859-13<br />iso885914 (28604): ISO 8859-14<br />iso885915 (28605): ISO 8859-15<br />iso885916 (28606): ISO 8859-16<br />ansi1250 (1250): ANSI 1250<br />ansi1251 (1251): ANSI 1251<br />ansi1252 (1252): ANSI 1252<br />ansi1253 (1253): ANSI 1253<br />ansi1254 (1254): ANSI 1254<br />ansi1255 (1255): ANSI 1255<br />ansi1256 (1256): ANSI 1256<br />ansi1257 (1257): ANSI 1257<br />ansi1258 (1258): ANSI 1258<br />ansi874 (874): ANSI 874<br />ansi932 (932): ANSI 932<br />ansi936 (936): ANSI 936<br />ansi949 (949): ANSI 949<br />ansi950 (950): ANSI 950<br />oem437 (437): OEM 437<br />oem720 (720): OEM 720<br />oem737 (737): OEM 737<br />oem775 (775): OEM 775<br />oem850 (850): OEM 850<br />oem852 (852): OEM 852<br />oem855 (855): OEM 855<br />oem857 (857): OEM 857<br />oem858 (858): OEM 858<br />oem860 (860): OEM 860<br />oem861 (861): OEM 861<br />oem862 (862): OEM 862<br />oem863 (863): OEM 863<br />oem864 (864): OEM 864<br />oem865 (865): OEM 865<br />oem866 (866): OEM 866<br />oem869 (869): OEM 869<br />koi8r (20866): KOI8-R<br />koi8u (21866): KOI8-U<br />johab (1361): Johab"
				},
				{
				name:"TlsAssuranceDirect &#x2192; ITlsAssuranceDirect915",
				description:"noTls (0): No TLS<br />tlsNoHostAuth (1): TLS, no SMTP server authentication<br />tlsAnyServer (2): TLS, any authenticated server<br />tlsDomainMatch (3): TLS, destination domain match"
				},
				{
				name:"TlsAssuranceRelay &#x2192; ITlsAssuranceRelay915",
				description:"noTls (0): No TLS<br />tlsNoHostAuth (1): TLS, no server authentication<br />tlsAnyServer (2): TLS, server authenticates as anything<br />tlsDomainMatch (3): TLS, server is in expected domain<br />tlsExactMatch (4): TLS, server name is exact match"
				},
				{
				name:"UpdateDownloadMethod &#x2192; IUpdateDownloadMethod915",
				description:"downloadFromMaster (0): Download installer from master<br />downloadFromUrl (1): Download installer from a URL"
				},
				{
				name:"UserAuthType &#x2192; IUserAuthType915",
				description:"none (0): None<br />password (1): Password<br />passwordOverKbdi (2): Password over KBDI<br />publicKey (3): Public key<br />gssApiWithMic (4): GSSAPI with MIC<br />gssApiKeyEx (5): GSSAPI key exchange"
				},
				{
				name:"VirtAcctSecurityContext &#x2192; IVirtAcctSecurityContext915",
				description:"defaultValue (0): Use group default<br />autoAccount (1): Automatically managed local account<br />localAccount (2): A specific Windows local account<br />domainAccount (3): A specific Windows domain account<br />microsoftAccount (5): A specific Microsoft account<br />service (4): SSH Server security context (advanced, risky)"
				},
				{
				name:"WhitelistAddressType &#x2192; IWhitelistAddressType915",
				description:"ipv4 (0): IPv4<br />ipv6 (1): IPv6<br />location (4): Any IP from a country or continent"
				},
				{
				name:"WinAccountType &#x2192; IWinAccountType915",
				description:"localAccount (1): Local account<br />domainAccount (2): Domain account<br />microsoftAccount (3): Microsoft account"
				},
				{
				name:"WindowsFirewallSetting &#x2192; IWindowsFirewallSetting915",
				description:"dontChange (1): Do not change Windows Firewall settings<br />subnetScope (2): Open port(s) to local network (subnet scope, non-Public profiles only)<br />subnetScopeAllProfiles (4): Open port(s) to local network (all firewall profiles)<br />globalScope (3): Open port(s) to any computer"
				}
			],
			methods:
			[
				{
				name:"EnumerationInterface::ToValue (BSTR name) &#x2192; EnumerationValue",
				description:"Implemented for each enumeration interface. Converts an enumeration value name to the corresponding value."
				},
				{
				name:"EnumerationInterface::ToName (EnumerationValue value) &#x2192; BSTR",
				description:"Implemented for each enumeration interface. Converts an enumeration value to the corresponding value name."
				},
				{
				name:"EnumerationInterface::ToFriendlyName (EnumerationValue value) &#x2192; BSTR",
				description:"Implemented for each enumeration interface. Converts an enumeration value to the corresponding friendly name."
				}
			]
			},
			{
			name:"IEvent915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"type &#x2192; <a href=\"#IEvent915\" onclick=\"ScrollToEnum();return false;\">EventType915</a> {get}",
				description:"The type of the event."
				},
				{
				name:"name &#x2192; BSTR {get}",
				description:"The name of the event."
				},
				{
				name:"description &#x2192; BSTR {get}",
				description:"A description of the event."
				},
				{
				name:"number &#x2192; BSTR {get}",
				description:"The event number."
				},
				{
				name:"value &#x2192; BOOL {get} {set}",
				description:"Gets or sets the enabled state of the event."
				}
			],
			enums:
			[
				{
				name:"EventType915",
				description:"EventType_error: 0<br />EventType_warning: 1<br />EventType_info: 2<br />EventType_trace: 3<br />EventType_debug: 4<br />EventType_unrecognized: 5"
				}
			]
			},
			{
			name:"IEventList915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"The number of events."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IEvent915\" onclick=\"SetInterface('IEvent915', false);return false;\">IEvent915</a>) {get}",
				description:"Allows enumerating events and accessing them by index."
				},
				{
				name:"list &#x2192; BSTR {get} {set}",
				description:"Gets or sets the enabled state of all events at once, represented as a string of 0|1 characters corresponding to the state of each event."
				},
				{
				name:"logLevel &#x2192; <a href=\"#IEventList915\" onclick=\"ScrollToEnum();return false;\">LogLevel_EWITD915</a> {set}",
				description:"Sets the enabled state of every event to match the specified log level."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IEventList915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IEvent915\" onclick=\"SetInterface('IEvent915', false);return false;\">IEvent915</a>",
				description:"Returns the event with the specified index.",
				parameters:
				[
					{
					parameter:"index: Zero-based index of the event."
					}
				]
				},
				{
				name:"GetItemByName (BSTR eventName) &#x2192; <a href=\"#IEvent915\" onclick=\"SetInterface('IEvent915', false);return false;\">IEvent915</a>",
				description:"Returns the event with the specified name.",
				parameters:
				[
					{
					parameter:"eventName: Name of the event."
					}
				]
				},
				{
				name:"GetEvents (<a href=\"#IEventList915\" onclick=\"ScrollToEnum();return false;\">EventType915</a> type) &#x2192; SAFEARRAY(<a href=\"#IEvent915\" onclick=\"SetInterface('IEvent915', false);return false;\">IEvent915</a>)",
				description:"Returns a list of events matching the specified type.",
				parameters:
				[
					{
					parameter:"type: Event type."
					}
				]
				},
				{
				name:"SetAll (<a href=\"#IEventList915\" onclick=\"ScrollToEnum();return false;\">EventType915</a> type, BOOL value)",
				description:"Sets the enabled state of all events matching the specified type.",
				parameters:
				[
					{
					parameter:"type: The type of events for which to set enabled state."
					},
					{
					parameter:"value: The enabled state to set."
					}
				]
				}
			],
			enums:
			[
				{
				name:"EventType915",
				description:"EventType_error: 0<br />EventType_warning: 1<br />EventType_info: 2<br />EventType_trace: 3<br />EventType_debug: 4<br />EventType_unrecognized: 5"
				},
				{
				name:"LogLevel_EWITD915",
				description:"LogLevel_EWITD_logLevelE (0): Errors<br />LogLevel_EWITD_logLevelEW (1): Errors, Warnings<br />LogLevel_EWITD_logLevelEWI (2): Errors, Warnings, Info<br />LogLevel_EWITD_logLevelEWIT (3): Errors, Warnings, Info, Trace<br />LogLevel_EWITD_logLevelEWITD (4): Errors, Warnings, Info, Trace, Debug<br />LogLevel_EWITD_logLevelCustom (9): Custom events"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IFileShare915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"remoteDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The full UNC path to the network resource. For example: '\\\\Server\\Share'.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"specifyCredentials &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, connect to the network resource using the specified account and password. If disabled, use the logged on user's credentials.\n\nCredentials must be specified for the following types of users:\n\n- Users logged in via Kerberos or NTLM.\n\n- Windows accounts logged in using public key authentication, unless their password has been entered into the SSH Server's password cache.\n\n- Virtual users that use a custom Windows account as their security context, unless the password for that account has been entered into the SSH Server's password cache."
				},
				{
				name:"userName &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The user name to supply to the remote server when connecting to the network resource. This may be in any format recognized by the server hosting the resource, including <user> or <domain\\user>.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"password &#x2192; <a href=\"#IPassword915\" onclick=\"SetInterface('IPassword915', false);return false;\">IPassword915</a> {get}",
				description:"The password that should be supplied to the remote server when connecting to the network resource."
				},
				{
				name:"mapToLocalDrive &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to map the network resource to a local drive, or just set up the connection so that it can be accessed during the SSH connection without further authentication."
				},
				{
				name:"localDrive &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The local drive letter (C:, D:, E:, etc) that should be used to map the network resource. If empty, one of the free drive letters will be used.",
				values:"C:, D:, E:, F:, G:, H:, I:, J:, K:, L:, M:, N:, O:, P:, Q:, R:, S:, T:, U:, V:, W:, X:, Y:, Z:"
				},
				{
				name:"mustUseThisDrive &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether mapping the network resource should fail if the preferred local drive letter is already used. If not set, the SSH Server will use another free drive letter if the configured one is unavailable."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IFileShare915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IFileShares915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IFileShare915\" onclick=\"SetInterface('IFileShare915', false);return false;\">IFileShare915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IFileShare915\" onclick=\"SetInterface('IFileShare915', false);return false;\">IFileShare915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IFileShares915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IFileShare915\" onclick=\"SetInterface('IFileShare915', false);return false;\">IFileShare915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Move (ULONG indexFrom, ULONG indexTo)",
				description:"Moves the entry with the specified zero-based index to the new location within the list."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IFileShares915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IFileShare915\" onclick=\"SetInterface('IFileShare915', false);return false;\">IFileShare915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IFileShare915\" onclick=\"SetInterface('IFileShare915', false);return false;\">IFileShare915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IFileShare915\" onclick=\"SetInterface('IFileShare915', false);return false;\">IFileShare915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IFileShare915\" onclick=\"SetInterface('IFileShare915', false);return false;\">IFileShare915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IFileShare915\" onclick=\"SetInterface('IFileShare915', false);return false;\">IFileShare915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IFileShare915\" onclick=\"SetInterface('IFileShare915', false);return false;\">IFileShare915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IFileTransferSettings915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"omitRelative &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Omit relative directory entries \".\" and \"..\" from directory listings in SFTP. With most clients, relative directory entries are either helpful or ignored. However, this setting may be useful with specific clients, especially special-purpose or custom-made, that can have trouble handling them.\n\nIf this setting is enabled, an SFTP client whose group or account settings do not override this setting will not receive relative entries in directory listings."
				},
				{
				name:"limitToSftp3 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"The SFTP protocol version is a separate concept from the SSH protocol version. Bitvise SSH Server always uses SSH protocol version 2. However, the supported SFTP versions are 3, 4, and 6.\n\nSFTP versions 4 and 6 are newer and more feature-complete than SFTP version 3. There may sometimes be interoperability issues when using these versions that do not arise if the client and server settle on SFTP version 3.\n\nIf you run into an interoperability issue with an SFTP client, please report it to us so that we can improve interoperability in future SSH Server versions. In the meanwhile, enabling this setting may resolve an interoperability issue by forcing a client to use SFTP version 3 instead of newer SFTP versions.\n\nIf this setting is enabled, all SFTP clients whose group or account settings do not override this setting will be limited to SFTP version 3. Features specific to newer SFTP versions will be unavailable to these clients."
				},
				{
				name:"posixPermDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"770\"",
				description:"Controls POSIX permissions that will be sent to SFTP, SCP, and FTPS clients for directories.\n\nMust be between 0 and 7777, and may only contain digits 0 to 7."
				},
				{
				name:"posixPermFile &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"660\"",
				description:"Controls POSIX permissions that will be sent to SFTP, SCP, and FTPS clients for files.\n\nMust be between 0 and 7777, and may only contain digits 0 to 7."
				},
				{
				name:"useBvShellWithWinScp &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, BvShell will be used as terminal shell when a WinSCP client connects using the SCP file transfer protocol. When used in SCP mode, WinSCP requires a Unix-like terminal shell, which BvShell imitates.\n\nBvShell respects the virtual filesystem layout configured for the user, and does not permit execution of arbitrary programs.\n\nThis setting does not affect SFTP file transfer, or access with clients other than WinSCP. "
				},
				{
				name:"fileSharingBeh &#x2192; <a href=\"#IFileTransferSettings915\" onclick=\"ScrollToEnum();return false;\">FileSharingBeh915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.FileSharingBeh.free",
				description:"Controls file sharing mode for files opened by SFTP, SCP, and FTPS clients.\n\nIf set to Free, the File sharing setting will be used when a file sharing preference is not indicated by the client.\n\nIf set to Force, files opened by clients will always be opened in the Windows file sharing mode specified under File sharing."
				},
				{
				name:"fileSharingUl &#x2192; <a href=\"#IFileTransferSettings915\" onclick=\"ScrollToEnum();return false;\">FileSharing915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.FileSharing.delete",
				description:"Windows file sharing modes to permit, based on the setting File sharing behavior, when files are opened by file transfer clients. This setting applies when the client requests Write or Append access:\n\n- None: A client cannot access a file already opened by another application or client. Another application or client cannot access a file already opened by a client.\n\n- Read: A client can access a file that another application or client already opened for reading; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only read access.\n\n- Write: A client can access a file that another application or client already opened for writing; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only write access.\n\n- Read, Write: A client can access a file that another application or client already opened for reading or writing; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only read and/or write access.\n\n- Read, Delete: A client can access a file that another application or client already opened for reading or deletion; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only read and/or delete access.\n\n- Write, Delete: A client can access a file that another application or client already opened for writing or deletion; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only write and/or delete access.\n\n- Read, Write, Delete: A client can access a file that another application or client already opened for any purpose; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client, for any purpose.\n\nDeletion only occurs when the last application or client closes its last handle to a file. Therefore, permitting simultaneous delete access will not cause the file to disappear while it's being read or written. It will be deleted as soon as it is closed by all applications and clients."
				},
				{
				name:"fileSharingDl &#x2192; <a href=\"#IFileTransferSettings915\" onclick=\"ScrollToEnum();return false;\">FileSharing915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.FileSharing.readWriteDelete",
				description:"Windows file sharing modes to permit, based on the setting File sharing behavior, when files are opened by file transfer clients. This setting applies when the client does not request Write or Append access:\n\n- None: A client cannot access a file already opened by another application or client. Another application or client cannot access a file already opened by a client.\n\n- Read: A client can access a file that another application or client already opened for reading; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only read access.\n\n- Write: A client can access a file that another application or client already opened for writing; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only write access.\n\n- Read, Write: A client can access a file that another application or client already opened for reading or writing; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only read and/or write access.\n\n- Read, Delete: A client can access a file that another application or client already opened for reading or deletion; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only read and/or delete access.\n\n- Write, Delete: A client can access a file that another application or client already opened for writing or deletion; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only write and/or delete access.\n\n- Read, Write, Delete: A client can access a file that another application or client already opened for any purpose; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client, for any purpose.\n\nDeletion only occurs when the last application or client closes its last handle to a file. Therefore, permitting simultaneous delete access will not cause the file to disappear while it's being read or written. It will be deleted as soon as it is closed by all applications and clients."
				},
				{
				name:"maxPathLength &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3000",
				description:"Paths longer than 259 characters may be inaccessible by many programs on Windows. This was a fundamental limit in very old versions of Windows, so many programs - including Windows components - remain affected by it. The number is determined by the Windows constant MAX_PATH (260) minus 1 character for the null terminator.\n\nOn recent Windows versions, the fundamental maximum path length is around 32*1024 characters. However, not all programs support paths or filenames of such length."
				},
				{
				name:"allowAltStreams &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Windows supports alternate data streams in filesystems including NTFS (the Windows NT File System) and ReFS (Resilient File System, introduced with Windows Server 2012).\n\nIf clients are allowed to create alternate streams, data written this way may be difficult to detect or validate with many tools. If clients are allowed to read or modify alternate streams, the information in those streams may have special meaning that clients should not be able to read or modify.\n\nNote that control characters in range 0x01-0x1F are valid in names of alternate data streams. This may further complicate detecting and validating alternate stream content depending on tools used. Whether clients are able to create or access alternate data streams containing control characters is influenced by the setting Allow unsafe names."
				},
				{
				name:"allowUnsafeNames &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Windows supports creation of files with names that are difficult to access with some tools, including Windows components. Attempting to access files with such names, or even communicating the names, may have unintended side effects.\n\nThe SSH Server treats the following as unsafe Windows file names (case-insensitive): CON, PRN, AUX, NUL, COM[1-9], LPT[1-9], CONIN$, CONOUT$; names ending with space (' ') or dot ('.'); and alternate data streams with characters in range 0x01-0x1F (control characters). Note that control characters above 0x20 (e.g. 0x7F) are valid Windows path characters."
				},
				{
				name:"allowUnsafeOnUploadCmd &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the SSH Server will execute unsafe On-upload commands. An On-upload command is considered unsafe if it's expanding the SSHUPLOADFILE environment variable without enclosing it in double quotes."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IFileTransferSettings915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"FileSharing915",
				description:"FileSharing_none (0): None<br />FileSharing_read (1): Read<br />FileSharing_write (2): Write<br />FileSharing_delete (4): Delete<br />FileSharing_readWrite (3): Read, Write<br />FileSharing_readDelete (5): Read, Delete<br />FileSharing_writeDelete (6): Write, Delete<br />FileSharing_readWriteDelete (7): Read, Write, Delete"
				},
				{
				name:"FileSharingBeh915",
				description:"FileSharingBeh_free (1): Free<br />FileSharingBeh_force (2): Force"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IFollowerSettings915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"hostkeys &#x2192; <a href=\"#IHostKeys915\" onclick=\"SetInterface('IHostKeys915', false);return false;\">IHostKeys915</a> {get}",
				description:"List of host keys and host key fingerprints that will be trusted by the follower when connecting to the master."
				},
				{
				name:"host &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"DNS or IP address of the master server from which configuration will be synchronized.\n\nIf the PROXY protocol is enabled on the master's port binding to which the follower is connecting, the follower connection must go through a proxy like other connections that arrive at that binding. If the follower is connecting directly - not through a proxy - a separate binding must be provided on the master where the PROXY protocol is disabled."
				},
				{
				name:"port &#x2192; ULONG {get} {set}",
				defaultValue:"default: 22",
				description:"Port number where the master server is reachable.\n\nIf the PROXY protocol is enabled on the master's port binding to which the follower is connecting, the follower connection must go through a proxy like other connections that arrive at that binding. If the follower is connecting directly - not through a proxy - a separate binding must be provided on the master where the PROXY protocol is disabled."
				},
				{
				name:"connectIntf &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"An optional comma-separated list of interfaces from which connections to the master host will be made from.\n\nThe list may contain one IPv4 and/or one IPv6 interface. Additional or invalid entries will be ignored. When both an IPv4 and an IPv6 interface are specified, the one that appears first determines the preferred IP version."
				},
				{
				name:"allowSshRsa &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If the master has one or more RSA host keys that the follower trusts, whether the follower should permit the master to authenticate itself using the legacy ssh-rsa signature algorithm, which uses SHA-1 hashing. If disabled, the follower will require the master to use any RSA keys with one of the newer rsa-sha2-256 or rsa-sha2-512 signature algorithms, which use SHA-2 hashing."
				},
				{
				name:"passwordFollower &#x2192; <a href=\"#IPassword915\" onclick=\"SetInterface('IPassword915', false);return false;\">IPassword915</a> {get}",
				description:"Password the follower should use when authenticating with the master server for configuration synchronization."
				},
				{
				name:"enableObfsc &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Enable this setting if the master server uses SSH protocol obfuscation."
				},
				{
				name:"obfsc &#x2192; <a href=\"#IPassword915\" onclick=\"SetInterface('IPassword915', false);return false;\">IPassword915</a> {get}",
				description:"Obfuscation keyword to use for the connection to the master server."
				},
				{
				name:"syncHostKeys &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to synchronize SSH Server host keypairs from the master. The master must allow host keypairs to be synchronized. Synchronized host keys allow this server to represent the same identity as the master when clients connect via SSH."
				},
				{
				name:"syncCertificates &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to synchronize TLS (SSL) certificates from the master. The master must allow certificates to be synchronized. Synchronized certificates allow this server to represent the same identity as the master when clients connect via TLS (SSL)."
				},
				{
				name:"syncSettings &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to synchronize SSH Server settings from the master."
				},
				{
				name:"syncPwdCache &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to synchronize the SSH Server password cache from the master. The master must allow the password cache to be synchronized."
				},
				{
				name:"syncActCode &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to synchronize the SSH Server activation code from the master. The master must allow the activation code to be synchronized."
				},
				{
				name:"keepLocalBindings &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, settings synchronized from the master will not override local settings in the 'Bindings and UPnP' section."
				},
				{
				name:"keepLocalFirewallStgs &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, settings synchronized from the master will not override local settings in the 'Windows Firewall' section."
				},
				{
				name:"keepLocalLoggingStgs &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, settings synchronized from the master will not override local settings in the 'Logging' section."
				},
				{
				name:"autoManageHostKeys &#x2192; <a href=\"#IFollowerSettings915\" onclick=\"ScrollToEnum();return false;\">AutoManageHostKeys915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.AutoManageHostKeys.disabled",
				description:"If enabled, any new host keys added on the master will be automatically added by the follower to the list of trusted host keys for future connections to the master."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IFollowerSettings915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"AutoManageHostKeys915",
				description:"AutoManageHostKeys_disabled (1): Disabled<br />AutoManageHostKeys_enabledKeepOld (2): Enabled, keep old<br />AutoManageHostKeys_enabledDeleteOld (3): Enabled, delete old"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IGlobalKbdiTotp915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"totpMethod &#x2192; <a href=\"#IGlobalKbdiTotp915\" onclick=\"ScrollToEnum();return false;\">GlobalAuthMethod915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.GlobalAuthMethod.permit",
				description:"If set to Disabled globally, it will not be possible to use time-based one-time password authentication. This overrides account and group settings, so that TOTP authentication will not be possible even if a particular account settings entry configures it.\n\nIf set to Permit for Windows accounts only, TOTP authentication will be available for any Windows accounts whose group and account settings allow it. However, it will not be available for virtual accounts, regardless of virtual account or group settings.\n\nIf set to Permit for virtual accounts only, TOTP authentication will be available for any virtual accounts whose group and account settings allow it. However, it will not be available for Windows accounts, regardless of Windows account or group settings.\n\nIf set to Permit for any account type, TOTP authentication will be available for any Windows or virtual account whose group and account settings configure it.\n"
				},
				{
				name:"alg &#x2192; <a href=\"#IGlobalKbdiTotp915\" onclick=\"ScrollToEnum();return false;\">KbdiTotpAlg915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.KbdiTotpAlg.hmacSha1",
				description:"For accounts whose individual settings are not defined differently, the algorithm to use for time-based one-time password authentication. This must match the algorithm used by the authenticator device or application. If the authenticator does not have an algorithm setting, it probably uses hmac-sha1."
				},
				{
				name:"numDigits &#x2192; <a href=\"#IGlobalKbdiTotp915\" onclick=\"ScrollToEnum();return false;\">KbdiTotpNumDigits915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.KbdiTotpNumDigits.digits6",
				description:"For accounts whose individual settings are not defined differently, the number of digits to use for time-based one-time password authentication. This must match the number of digits used by the authenticator device or application. If the authenticator does not have a setting for the number of digits, it probably uses 6."
				},
				{
				name:"timeStepSizeInSecs &#x2192; ULONG {get} {set}",
				defaultValue:"default: 30",
				description:"For accounts whose individual settings are not defined differently, the time-step size for time-based one-time password authentication.\n\nRFC 6238 recommends a time-step value of 30 seconds as a compromise between security and usability. A longer time-step permits more time during which a third party can use an OTP it has intercepted. It also requires the user to wait longer in situations where they must enter multiple consecutive OTPs. However, a shorter time-step can make it difficult for the user to successfully submit an OTP within its validity window."
				},
				{
				name:"twoDCodeIssuer &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"Bitvise SSH Server\"",
				description:"An account's secret key for TOTP authentication can be exported as a 2D code image. This image embeds multiple parameters, including an issuer name. The value configured here will be used as the default issuer name.\n\nIf the issuer name is modified in any individual account's TOTP settings, the most recently used value will overwrite this global setting."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IGlobalKbdiTotp915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"GlobalAuthMethod915",
				description:"GlobalAuthMethod_disabledGlobally (1): Disabled globally<br />GlobalAuthMethod_permitWinAccounts (2): Permit for Windows accounts only<br />GlobalAuthMethod_permitVirtAccounts (3): Permit for virtual accounts only<br />GlobalAuthMethod_permit (4): Permit for any account type"
				},
				{
				name:"KbdiTotpAlg915",
				description:"KbdiTotpAlg_hmacSha1 (1): hmac-sha1<br />KbdiTotpAlg_hmacSha256 (2): hmac-sha256<br />KbdiTotpAlg_hmacSha512 (3): hmac-sha512"
				},
				{
				name:"KbdiTotpNumDigits915",
				description:"KbdiTotpNumDigits_digits6 (6): 6<br />KbdiTotpNumDigits_digits7 (7): 7<br />KbdiTotpNumDigits_digits8 (8): 8"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IGroup915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:2,
				name:"! groupType &#x2192; <a href=\"#IGroup915\" onclick=\"ScrollToEnum();return false;\">GroupType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.GroupType.everyone",
				description:"The type of the Windows group for which these settings are defined."
				},
				{
				flag:2,
				name:"! winDomain &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"For groups of 'Domain' type, the Windows domain that this group is part of."
				},
				{
				flag:2,
				name:"! group &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The name of the Windows group for which these settings apply.\n\nThis must be an existing Windows security group; not a user account, or a distribution group."
				},
				{
				name:"comment &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Optional field to describe this settings entry and its purpose.\n\nThis field is not used by the SSH Server. It is preserved and displayed in settings."
				},
				{
				name:"loginAllowed &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"For members of this group whose individual settings are not defined differently, whether login into the SSH Server is allowed."
				},
				{
				name:"limits &#x2192; <a href=\"#IGroupLimitsAndQuotas915\" onclick=\"SetInterface('IGroupLimitsAndQuotas915', false);return false;\">IGroupLimitsAndQuotas915</a> {get}",
				description:"Configure default values for the maximum number of simultaneous connections; bandwidth limits; and daily or monthly bandwidth quotas for members of this group."
				},
				{
				name:"clientAddresses &#x2192; <a href=\"#IAddressAcceptRules915\" onclick=\"SetInterface('IAddressAcceptRules915', false);return false;\">IAddressAcceptRules915</a> {get}",
				description:"Rules to accept or deny login for members of this group based on the IP address, DNS name, or geographic location from which a user connects. Rules are processed on a first-match basis, so the order of rules is important. Use arrow buttons at bottom to control which rules are processed first. To log blocked connections, enable the event T_CONNECT_REJECTED_BLOCKED."
				},
				{
				name:"auth &#x2192; <a href=\"#IGroupAuthentication915\" onclick=\"SetInterface('IGroupAuthentication915', false);return false;\">IGroupAuthentication915</a> {get}",
				description:"Configure default password and public key authentication settings for members of this group."
				},
				{
				name:"remoteAdminAccess &#x2192; <a href=\"#IRemoteAdminAccess915\" onclick=\"SetInterface('IRemoteAdminAccess915', false);return false;\">IRemoteAdminAccess915</a> {get}",
				description:"Configure default remote administration access settings for members of this group. Remote administration includes partial or complete access to server settings, host keys, and/or password cache.\n\nWhen using delegated administration, you can limit the mount point root paths which a delegated administrator can configure. This is configured outside of account and group settings, under Access control > Limit delegated administrator mount points.\n\nTo use remote administration, the user must connect using Bitvise SSH Client."
				},
				{
				name:"connection &#x2192; <a href=\"#IGroupConnectionSetup915\" onclick=\"SetInterface('IGroupConnectionSetup915', false);return false;\">IGroupConnectionSetup915</a> {get}",
				description:"Settings having to do with establishment and maintenance of incoming connections for members of this group whose individual account settings are not defined differently."
				},
				{
				name:"session &#x2192; <a href=\"#IGroupSessionSetup915\" onclick=\"SetInterface('IGroupSessionSetup915', false);return false;\">IGroupSessionSetup915</a> {get}",
				description:"Settings having to do with initialization and caching of Windows sessions for members of this group whose individual account settings are not defined differently."
				},
				{
				name:"term &#x2192; <a href=\"#IGroupTerminalAndExec915\" onclick=\"SetInterface('IGroupTerminalAndExec915', false);return false;\">IGroupTerminalAndExec915</a> {get}",
				description:"Configure default terminal shell and exec request settings for members of this group. Use BvShell to allow shell access, but still restrict the user to virtual filesystem directories configured in the user's account and group settings."
				},
				{
				name:"xfer &#x2192; <a href=\"#IGroupFileTransfer915\" onclick=\"SetInterface('IGroupFileTransfer915', false);return false;\">IGroupFileTransfer915</a> {get}",
				description:"Configure default SCP, SFTP, and FTPS file transfer settings for members of this group."
				},
				{
				name:"fwding &#x2192; <a href=\"#IGroupForwarding915\" onclick=\"SetInterface('IGroupForwarding915', false);return false;\">IGroupForwarding915</a> {get}",
				description:"Configure default settings and restrictions for SSH connection tunneling for members of this group."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IGroup915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"GroupType915",
				description:"GroupType_everyone (0): Everyone<br />GroupType_local (1): Local<br />GroupType_domain (2): Domain"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IGroupAuthentication915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"passwordAuth &#x2192; <a href=\"#IGroupAuthentication915\" onclick=\"ScrollToEnum();return false;\">AuthDisp915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.AuthDisp.allowed",
				description:"For members of this group whose individual settings are not defined differently, whether password authentication is disabled, available, or required.\n\nThis setting can be grayed-out if password authentication is disabled globally using server-wide settings under Access control."
				},
				{
				name:"publicKeyAuth &#x2192; <a href=\"#IGroupAuthentication915\" onclick=\"ScrollToEnum();return false;\">AuthDisp915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.AuthDisp.allowed",
				description:"For members of this group whose individual settings are not defined differently, whether public key authentication is disabled, available, or required."
				},
				{
				name:"allowKeyManagement &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether they should be allowed to manage (add, remove, list) public keys configured for their accounts using SSH clients that support the SSH public key management subsystem."
				},
				{
				name:"keys &#x2192; <a href=\"#IClientKeys915\" onclick=\"SetInterface('IClientKeys915', false);return false;\">IClientKeys915</a> {get}",
				description:"A list of public keys that any member of the group can use to log in. This is not secure unless your settings also require another authentication method, such as password, that individually authenticates the user.\n\nUse of this setting is not recommended. It is maintained for compatibility with existing configurations. New users should avoid using public keys in group settings. Public keys should be configured in individual account settings entries. Each user that logs in using public key authentication should be set up so they can only log in with their own individual key."
				},
				{
				name:"totp &#x2192; <a href=\"#IGroupKbdiTotp915\" onclick=\"SetInterface('IGroupKbdiTotp915', false);return false;\">IGroupKbdiTotp915</a> {get}",
				description:"Configure time-based one-time password (TOTP) settings for this group."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IGroupAuthentication915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"AuthDisp915",
				description:"AuthDisp_disabled (1): Disabled<br />AuthDisp_allowed (2): Allowed<br />AuthDisp_required (3): Required"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IGroupConnectionSetup915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"startReexchange &#x2192; <a href=\"#IGroupConnectionSetup915\" onclick=\"ScrollToEnum();return false;\">DefaultGlobalYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGlobalYesNo.defaultValue",
				description:"During a lengthy connection, regular key re-exchange protects against a resourceful attacker who could analyze exchanged encrypted data and recover encryption keys. Regular key re-exchange is required by the SSH specification, but there exist implementations that will disconnect if the server starts it.\n\nIf this setting is enabled, the SSH Server will automatically initiate key re-exchange at regular intervals during an SSH connection. If disabled, the server will still accept key re-exchange if initiated by the client, but will not initiate it.\n\nDepending on the negotiated encryption algorithm and the amount of data transferred, disabling key re-exchange may significantly compromise connection security. If you are considering disabling key re-exchange, consider also updating the client software, or replacing it with software that supports key re-exchange."
				},
				{
				name:"useGlobalKeepAlive &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether to use the server-wide keep-alive timeout configured under Server > Connections, or the value defined here for the group."
				},
				{
				name:"keepAliveTimeout &#x2192; ULONG {get} {set}",
				defaultValue:"default: 20",
				description:"If there is no traffic over an SSH connection for longer than this number of seconds, the SSH Server will send to the client a small packet. This verifies whether the client is still connected. This detects connections that disconnect in a way that the SSH Server is not notified. This can also keep an intermediate network component from terminating the connection due to perceived inactivity.\n\nIf your SSH or SFTP connections keep disconnecting when idle, try a low non-zero value: for example, 5 seconds. To disable this feature, configure 0.\n\nFTP connections do not have a mechanism to detect broken connections. For FTP connections, a connection timeout is always in place. The FTP connection timeout either equals the SSH connection timeout, or 45 minutes, whichever is shorter. A future version will introduce this as a separate setting."
				},
				{
				name:"useGlobalConnTimeout &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether to use the server-wide connection timeout configured under Server > Connections, or the value defined here for the group."
				},
				{
				name:"connectionTimeout &#x2192; ULONG {get} {set}",
				defaultValue:"default: 0",
				description:"The number of seconds an SSH connection may remain inactive before the SSH Server will terminate it. To disable this feature, configure 0.\n\nFTP connections do not have a mechanism to detect broken connections. For FTP connections, a connection timeout is always in place. The FTP connection timeout either equals the SSH connection timeout, or 45 minutes, whichever is shorter. A future version will introduce this as a separate setting.\n\nThe SSH Server will not terminate a connection that simulates activity, even if the activity is trivial. The SSH Server cannot prevent a client from reconnecting if the client is permitted to connect. If a client is creating too many simultaneous connections and not disconnecting them, limit the number of simultaneous connections the client can make. You can configure this in an account or group settings entry, under Limits and quotas."
				},
				{
				name:"onLogonCmd &#x2192; <a href=\"#IConnOnLogonCommand915\" onclick=\"SetInterface('IConnOnLogonCommand915', false);return false;\">IConnOnLogonCommand915</a> {get}",
				description:"If configured, then for members of this group that do not configure this differently, this command will be run immediately after the user authenticates and is successfully logged in, and before any other connection activity takes place.\n\nIf Windows session caching is enabled, this command can execute many times in the same Windows session, each time the user logs in and reuses the Windows session. If you want to perform actions that affect all connections in a Windows session; for example, to map a network drive; then configure a Windows on-logon command.\n\nThis command runs before the user opens a terminal window. The command is run for all connections, including file transfer connections which never open a terminal window. If you want to run something when the user opens a terminal window, change the user's Shell access type to \"Custom shell settings\". Then, configure a custom \"Terminal shell\" and \"Exec request prefix\" so that the shell runs the desired command. For example, you can set \"Terminal shell\" to \"cmd.exe /k C:\\Path\\Script.cmd\", and \"Exec request prefix\" to \"cmd.exe /c C:\\Path\\Script.cmd &&\"."
				},
				{
				name:"onLogoffCmd &#x2192; <a href=\"#IConnOnLogoffCommand915\" onclick=\"SetInterface('IConnOnLogoffCommand915', false);return false;\">IConnOnLogoffCommand915</a> {get}",
				description:"If configured, then for members of this group that do not configure this differently, this command will be run immediately after the user disconnects after successfully authenticating."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IGroupConnectionSetup915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"DefaultGlobalYesNo915",
				description:"DefaultGlobalYesNo_defaultValue (0): Use global default<br />DefaultGlobalYesNo_yes (1): Yes<br />DefaultGlobalYesNo_no (2): No"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IGroupFileTransfer915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"permitScp &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether SCP file transfer should be allowed."
				},
				{
				name:"permitSftp &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether SFTP file access should be allowed. The availability of SCP and FTPS file transfer is unaffected by this setting."
				},
				{
				name:"permitFtps &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether access using FTP over TLS (SSL) should be allowed.\n\nFTPS access requires an FTP binding to be configured in server settings. FTPS is not available on Windows XP and Windows Server 2003 due to absence of adequate TLS support on these platforms."
				},
				{
				name:"loadProfileForFileXfer &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"For members of this group whose individual settings are not defined differently, this setting controls whether the SSH Server should load a user's Windows profile before starting SCP, SFTP, or FTPS.\n\nEnabling this setting ensures the user's profile will be loaded if it was not already loaded for another reason. If this setting is disabled, the SSH Server may still load the user's profile because of another setting. If Windows session sharing is enabled, the user's profile may already be loaded.\n\nFor more information about disabling Windows profile loading, see Q260 and Q265 in the SSH Server Usage FAQ:\nhttps://www.bitvise.com/ssh-server-usage-faq#Q260 \n"
				},
				{
				name:"omitRelative &#x2192; <a href=\"#IGroupFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGlobalYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGlobalYesNo.defaultValue",
				description:"Omit relative directory entries \".\" and \"..\" from directory listings in SFTP. With most clients, relative directory entries are either helpful or ignored. However, this setting may be useful with specific clients, especially special-purpose or custom-made, that can have trouble handling them.\n\nIf this setting is enabled, an SFTP client whose account settings entry does not override this setting will not receive relative entries in directory listings."
				},
				{
				name:"limitToSftp3 &#x2192; <a href=\"#IGroupFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGlobalYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGlobalYesNo.defaultValue",
				description:"The SFTP protocol version is a separate concept from the SSH protocol version. Bitvise SSH Server always uses SSH protocol version 2. However, the supported SFTP versions are 3, 4, and 6.\n\nSFTP versions 4 and 6 are newer and more feature-complete than SFTP version 3. There may sometimes be interoperability issues when using these versions that do not arise if the client and server settle on SFTP version 3.\n\nIf you run into an interoperability issue with an SFTP client, please report it to us so that we can improve interoperability in future SSH Server versions. In the meanwhile, enabling this setting may resolve an interoperability issue by forcing a client to use SFTP version 3 instead of newer SFTP versions.\n\nIf this setting is enabled, all SFTP clients whose account settings entry does not override this setting will be limited to SFTP version 3. Features specific to newer SFTP versions will be unavailable to these clients."
				},
				{
				name:"useDefaultPosixPerm &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether to use server-wide default POSIX permissions configured in the Server section of settings, or settings defined here for the group."
				},
				{
				name:"posixPermDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"770\"",
				description:"Controls POSIX permissions that will be sent to SFTP, SCP, and FTPS clients for directories.\n\nMust be between 0 and 7777, and may only contain digits 0 to 7."
				},
				{
				name:"posixPermFile &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"660\"",
				description:"Controls POSIX permissions that will be sent to SFTP, SCP, and FTPS clients for files.\n\nMust be between 0 and 7777, and may only contain digits 0 to 7."
				},
				{
				name:"useBvShellWithWinScp &#x2192; <a href=\"#IGroupFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGlobalYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGlobalYesNo.defaultValue",
				description:"If enabled, BvShell will be used as terminal shell when a WinSCP client connects using the SCP file transfer protocol. When used in SCP mode, WinSCP requires a Unix-like terminal shell, which BvShell imitates.\n\nBvShell respects the virtual filesystem layout configured for the user, and does not permit execution of arbitrary programs.\n\nThis setting does not affect SFTP file transfer, or access with clients other than WinSCP. "
				},
				{
				name:"displayTime &#x2192; <a href=\"#IGroupFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DisplayTimeType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DisplayTimeType.serverTime",
				description:"Format of the time sent to the client in the SFTP \"long name\" field.\n\nSFTP encodes file time information in binary, using the UTC time zone, and this is used properly by most clients. Normal SFTP file times are not affected by this setting.\n\nHowever, some clients - including OpenSSH, and PuTTY's PSFTP - rely on information in the SFTP \"long name\" field. The \"long name\" field is interpreted by the client as a Unix-like directory listing, and may need to contain file times in a format preferred by the client."
				},
				{
				name:"useDefaultMaxPathLength &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether to use the server-wide maximum path length configured in the Server section of settings, or settings defined here for the group."
				},
				{
				name:"maxPathLength &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3000",
				description:"Paths longer than 259 characters may be inaccessible by many programs on Windows. This was a fundamental limit in very old versions of Windows, so many programs - including Windows components - remain affected by it. The number is determined by the Windows constant MAX_PATH (260) minus 1 character for the null terminator.\n\nOn recent Windows versions, the fundamental maximum path length is around 32*1024 characters. However, not all programs support paths or filenames of such length."
				},
				{
				name:"allowAltStreams &#x2192; <a href=\"#IGroupFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGlobalYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGlobalYesNo.defaultValue",
				description:"Windows supports alternate data streams in filesystems including NTFS (the Windows NT File System) and ReFS (Resilient File System, introduced with Windows Server 2012).\n\nIf clients are allowed to create alternate streams, data written this way may be difficult to detect or validate with many tools. If clients are allowed to read or modify alternate streams, the information in those streams may have special meaning that clients should not be able to read or modify.\n\nNote that control characters in range 0x01-0x1F are valid in names of alternate data streams. This may further complicate detecting and validating alternate stream content depending on tools used. Whether clients are able to create or access alternate data streams containing control characters is influenced by the setting Allow unsafe names."
				},
				{
				name:"allowUnsafeNames &#x2192; <a href=\"#IGroupFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGlobalYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGlobalYesNo.defaultValue",
				description:"Windows supports creation of files with names that are difficult to access with some tools, including Windows components. Attempting to access files with such names, or even communicating the names, may have unintended side effects.\n\nThe SSH Server treats the following as unsafe Windows file names (case-insensitive): CON, PRN, AUX, NUL, COM[1-9], LPT[1-9], CONIN$, CONOUT$; names ending with space (' ') or dot ('.'); and alternate data streams with characters in range 0x01-0x1F (control characters). Note that control characters above 0x20 (e.g. 0x7F) are valid Windows path characters."
				},
				{
				name:"inheritAllMountPoints &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"For members of this group whose individual settings are not defined differently, whether the account will inherit virtual filesystem mount points from this group only, or also from group settings entries for other Windows groups of which the user is a member."
				},
				{
				name:"mountPoints &#x2192; <a href=\"#ISfsMountPoints915\" onclick=\"SetInterface('ISfsMountPoints915', false);return false;\">ISfsMountPoints915</a> {get}",
				description:"Mount points are virtual folders that this user or group has access to. Add one or more virtual folders to configure file access for SCP, SFTP, and FTPS."
				},
				{
				name:"sfsHomeDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"/%HOME%\"",
				description:"The home directory must correspond to a virtual path inside the above list of mount points. This setting controls the SCP, SFTP, and FTPS initial directory for this user or group.\n\nIf this setting is left empty, the user will initially find themselves at the root of the virtual filesystem tree.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"createSfsHomeDir &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the SSH Server will create the virtual home directory, if it does not yet exist."
				},
				{
				name:"delIncompleteUploads &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, then for members of this group which do not configure this differently, the SSH Server will delete files that were created by the client and were not properly closed by the time the client disconnects or closes the SFTP channel."
				},
				{
				name:"moveCompletedUploads &#x2192; <a href=\"#IMoveCompletedUploads915\" onclick=\"SetInterface('IMoveCompletedUploads915', false);return false;\">IMoveCompletedUploads915</a> {get}",
				description:"If configured, then for members of this group which do not configure this differently, the SSH Server can automatically move files when they are properly closed by a client after uploading.\n\nThe move operation will activate only for mount points backed by the Windows filesystem. These are mount points that use the provider FlowSfsWin."
				},
				{
				name:"onUploadCmd &#x2192; <a href=\"#IConnOnUploadCommand915\" onclick=\"SetInterface('IConnOnUploadCommand915', false);return false;\">IConnOnUploadCommand915</a> {get}",
				description:"If configured, then for members of this group which do not configure this differently, the SSH Server can execute a command after closing a file that has been written to by the client."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IGroupFileTransfer915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"DefaultGlobalYesNo915",
				description:"DefaultGlobalYesNo_defaultValue (0): Use global default<br />DefaultGlobalYesNo_yes (1): Yes<br />DefaultGlobalYesNo_no (2): No"
				},
				{
				name:"DisplayTimeType915",
				description:"DisplayTimeType_serverTimeWithOffset (1): Server local time with offset<br />DisplayTimeType_serverTime (2): Server local time<br />DisplayTimeType_utc (3): UTC"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IGroupForwarding915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"permitC2S &#x2192; BOOL {get} {set}",
				defaultValue:"Default value varies depending on context.",
				description:"For members of this group whose individual settings are not defined differently, whether the client should be allowed to initiate client-2-server TCP/IP connection tunneling. The rules for C2S port forwarding can be further restricted via 'Connect rules'."
				},
				{
				name:"permitS2C &#x2192; BOOL {get} {set}",
				defaultValue:"Default value varies depending on context.",
				description:"For members of this group whose individual settings are not defined differently, whether the client should be allowed to request server-2-client TCP/IP connection tunneling. The rules for S2C port forwarding can be further restricted via 'Listening rules'."
				},
				{
				name:"connectRules &#x2192; <a href=\"#IConnectRulesWithDefault915\" onclick=\"SetInterface('IConnectRulesWithDefault915', false);return false;\">IConnectRulesWithDefault915</a> {get}",
				description:"For client-configured client-2-server port forwarding, these settings control what target hosts can be connected to and on what ports. Connections can also be redirected to different servers and different ports, or, by specifying a configured connect profile, through a SOCKS or an HTTP CONNECT proxy."
				},
				{
				name:"listenRules &#x2192; <a href=\"#IListeningRules915\" onclick=\"SetInterface('IListeningRules915', false);return false;\">IListeningRules915</a> {get}",
				description:"For client-configured server-2-client port forwarding, these settings control what interfaces and ports the client can request listening on, as well as what origin addresses connections will be accepted from."
				},
				{
				name:"srvSideC2S &#x2192; <a href=\"#ISrvSideC2SRules915\" onclick=\"SetInterface('ISrvSideC2SRules915', false);return false;\">ISrvSideC2SRules915</a> {get}",
				description:"A list of client-2-server port forwardings that will be requested and managed by the server, rather than by the client.\n\nServer-configured port forwarding allows port forwarding rules to be managed centrally, which is valuable in environments with a large number of port forwarding clients.\n\nServer-configured forwarding is supported by Bitvise SSH Client versions 4.14 and higher."
				},
				{
				name:"srvSideS2C &#x2192; <a href=\"#ISrvSideS2CRules915\" onclick=\"SetInterface('ISrvSideS2CRules915', false);return false;\">ISrvSideS2CRules915</a> {get}",
				description:"A list of server-2-client port forwardings that will be requested and managed by the server, rather than by the client.\n\nServer-configured port forwarding allows port forwarding rules to be managed centrally, which is valuable in environments with a large number of port forwarding clients.\n\nServer-configured forwarding is supported by Bitvise SSH Client versions 4.14 and higher."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IGroupForwarding915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IGroupKbdiTotp915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"totpAuth &#x2192; <a href=\"#IGroupKbdiTotp915\" onclick=\"ScrollToEnum();return false;\">KbdiTotpAuth915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.KbdiTotpAuth.disabled",
				description:"For members of this group whose individual settings are not defined differently, whether time-based one-time password authentication is disabled or required.\n\nIf TOTP authentication is required here, then every account that inherits settings from this group must either set up a TOTP secret key, or override this setting to disable TOTP, in order to be able to log in."
				},
				{
				name:"showAdvancedTotp &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Advanced TOTP settings are available for advanced users. These settings should not be changed in most situations."
				},
				{
				name:"alg &#x2192; <a href=\"#IGroupKbdiTotp915\" onclick=\"ScrollToEnum();return false;\">KbdiTotpAlg915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.KbdiTotpAlg.defaultValue",
				description:"The algorithm to use for time-based one-time password authentication. This must match the algorithm used by the authenticator device or application. If the authenticator does not have an algorithm setting, it probably uses hmac-sha1 and does not support other algorithms."
				},
				{
				name:"numDigits &#x2192; <a href=\"#IGroupKbdiTotp915\" onclick=\"ScrollToEnum();return false;\">KbdiTotpNumDigits915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.KbdiTotpNumDigits.defaultValue",
				description:"The number of digits to use for time-based one-time password authentication. This must match the number of digits used by the authenticator device or application. If the authenticator does not have a setting for the number of digits, it probably uses 6 and does not support other values."
				},
				{
				name:"useDefaultTimeStepSize &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the default time-step size configured globally, or the value configured here."
				},
				{
				name:"timeStepSizeInSecs &#x2192; ULONG {get} {set}",
				defaultValue:"default: 30",
				description:"Time-step size for time-based one-time password authentication.\n\nRFC 6238 recommends a time-step value of 30 seconds as a compromise between security and usability. A longer time-step permits more time during which a third party can use an OTP it has intercepted. It also requires the user to wait longer in situations where they must enter multiple consecutive OTPs. However, a shorter time-step can make it difficult for the user to successfully submit an OTP within its validity window."
				},
				{
				name:"maxTimeStepsFwd &#x2192; ULONG {get} {set}",
				defaultValue:"default: 1",
				description:"For members of this group whose individual settings are not defined differently, the maximum number of forward time-steps against which the server will try to match a supplied time-based one-time password.\n\nIf this value is non-zero, the server will compare an OTP not only against the time it was received, but also against the configured number of future time-steps. This allows authentication to succeed if the current time on the authenticator device is ahead of the time on the server. However, increasing this value exposes a larger window during which a third party can use an OTP it has intercepted."
				},
				{
				name:"maxTimeStepsBwd &#x2192; ULONG {get} {set}",
				defaultValue:"default: 2",
				description:"For members of this group whose individual settings are not defined differently, the maximum number of backward time-steps against which the server will try to match a supplied time-based one-time password.\n\nIf this value is non-zero, the server will compare an OTP not only against the time it was received, but also against the configured number of previous time-steps. This allows authentication to succeed if the current time on the authenticator device is behind the time on the server. This also compensates for the time the user takes to enter the OTP and for the OTP to be transmitted. However, increasing this value exposes a larger window during which a third party can use an OTP it has intercepted."
				},
				{
				name:"secretKey &#x2192; <a href=\"#ISecretKey915\" onclick=\"SetInterface('ISecretKey915', false);return false;\">ISecretKey915</a> {get}",
				description:"For members of this group whose individual settings are not defined differently, the secret key to use for time-based one-time password authentication.\n\nTo use TOTP authentication, the user must configure an authenticator program or device with the same secret key, algorithm, number of digits, and time-step size as configured in SSH Server settings.\n\nUsually, only the secret key needs to be configured. The algorithm, number of digits, and time-step size will work at their default values.\n\nThe secret key can be received from the user and entered into SSH Server settings; or it can be generated here and sent to the user. A secret key can be sent to a user either as Base32 text, or as a 2D code image that can be scanned by an authenticator application."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IGroupKbdiTotp915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"KbdiTotpAlg915",
				description:"KbdiTotpAlg_defaultValue (0): Use global default<br />KbdiTotpAlg_hmacSha1 (1): hmac-sha1<br />KbdiTotpAlg_hmacSha256 (2): hmac-sha256<br />KbdiTotpAlg_hmacSha512 (3): hmac-sha512"
				},
				{
				name:"KbdiTotpAuth915",
				description:"KbdiTotpAuth_disabled (1): Disabled<br />KbdiTotpAuth_required (2): Required"
				},
				{
				name:"KbdiTotpNumDigits915",
				description:"KbdiTotpNumDigits_defaultValue (0): Use global default<br />KbdiTotpNumDigits_digits6 (6): 6<br />KbdiTotpNumDigits_digits7 (7): 7<br />KbdiTotpNumDigits_digits8 (8): 8"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IGroupLimitsAndQuotas915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"maxConnections &#x2192; ULONG {get} {set}",
				defaultValue:"default: 20",
				description:"For members of this group whose individual settings are not defined differently, the maximum number of concurrent connections each user can establish to this server.\n\nIf this limit is set to only 1, the user will not be able to reconnect if broken connection detection fails and the SSH Server believes incorrectly that a previous connection is still in progress."
				},
				{
				name:"maxConnWithProcesses &#x2192; ULONG {get} {set}",
				defaultValue:"default: 20",
				description:"For members of this group whose individual settings are not defined differently, whether to restrict the number of concurrent SSH connections with processes each user can have.\n\nThis limit applies only to connections with active child processes. A child process is started for every SCP transfer, SFTP channel, FTPS connection, SSH terminal window, or SSH exec request. Every connection with one or more active child processes occupies one desktop heap. By default, a non-interactive desktop heap is 512 KiB in size, and pre-Vista versions of Windows have a default system-wide limit, called SessionViewSize, of 48 MiB for all desktop heaps. Therefore, on pre-Vista servers with many simultaneous users, desktop heaps are usually the first resource that runs out. If the memory for desktop heaps is exhausted, other processes on the system that need their own desktop heap will not be able to start. This includes non-interactive processes such as services, scheduled tasks and CGI scripts. Windows Vista and later no longer has a fixed SessionViewSize, allowing the total size of desktop heaps to grow dynamically.\n\nIt is possible to increase the system's capacity for non-interactive desktop heaps by using the registry to decrease the size of each heap or to increase the value of SessionViewSize. Note that decreasing the size of the desktop heap may affect some applications which require a certain sized desktop heap. For more information on desktop heaps, please see: https://docs.microsoft.com/en-us/archive/blogs/ntdebugging/desktop-heap-overview"
				},
				{
				name:"bandwidthType &#x2192; <a href=\"#IGroupLimitsAndQuotas915\" onclick=\"ScrollToEnum();return false;\">BandwidthType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.BandwidthType.perUser",
				description:"For members of this group whose individual settings are not defined differently, whether speed limits apply globally for all connections from a user, or for each concurrent connection separately."
				},
				{
				name:"permanentBandwidths &#x2192; <a href=\"#IPermanentBandwidths915\" onclick=\"SetInterface('IPermanentBandwidths915', false);return false;\">IPermanentBandwidths915</a> {get}",
				description:"For members of this group whose individual settings are not defined differently, the permanent bandwidth limits for each user. These limits apply regardless of whether monthly or daily quotas are exceeded."
				},
				{
				name:"monthlyQuotas &#x2192; <a href=\"#IStatsQuotas915\" onclick=\"SetInterface('IStatsQuotas915', false);return false;\">IStatsQuotas915</a> {get}",
				description:"For members of this group whose individual settings are not defined differently, this configures monthly upload and download quotas for each user, and actions to take if the limits are exceeded."
				},
				{
				name:"dailyQuotas &#x2192; <a href=\"#IStatsQuotas915\" onclick=\"SetInterface('IStatsQuotas915', false);return false;\">IStatsQuotas915</a> {get}",
				description:"For members of this group whose individual settings are not defined differently, this configures daily upload and download quotas for each user, and actions to take if the limits are exceeded."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IGroupLimitsAndQuotas915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"BandwidthType915",
				description:"BandwidthType_perUser (1): Per user<br />BandwidthType_perConnection (2): Per connection"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IGroupSessionSetup915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"logonType &#x2192; <a href=\"#IGroupSessionSetup915\" onclick=\"ScrollToEnum();return false;\">LogonType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.LogonType.network",
				description:"For members of this group whose individual settings are not defined differently, the Windows logon type to use.\n\nThe 'Interactive' logon type grants the logon session the same Windows permissions as when the Windows account that provides the security context is logged on locally at the server's keyboard. Login with this logon type will fail if the Windows account does not have the right to 'Log on locally' configured in Windows security policy that applies to the server computer. This right is normally granted to all users in a default Windows configuration, but on a domain controller it is granted only to administrators.\n\nThe 'Network' logon type requires the Windows account to have the right to 'Access this computer from the network', but it does not require 'Log on locally'. Network logon will work well on most Windows installations, except outdated Windows Server versions where interactive logon is required to use cmd.exe and other command line tools. On those servers, unrestricted terminal shell access will not work with the 'Network' logon type, but file transfer and tunneling will function.\n\nThe 'Batch' logon type requires the Windows account to have the right to 'Log on as batch job'. Windows grants this by default to Administrators, Backup Operators and Performance Log Users. The Windows Task Scheduler uses this logon type for tasks that run when no user is logged on. This logon type may allow programs to run which do not run correctly under 'Network' or 'Interactive'.\n\nRecommendation: 'Network' is the suggested logon type for all current Windows versions. For users who require unrestricted terminal shell access, you may set logon type to 'Interactive'. Set the logon type to 'Batch' if the program you're trying to run does not run otherwise.\n\nNote: When using the Kerberos or NTLM authentication methods, Windows does not provide a way for the SSH Server to use the 'Interactive' logon type. When logging in with Kerberos or NTLM, Windows will behave as if the 'Network' logon type was used."
				},
				{
				name:"onAccountInfoFailure &#x2192; <a href=\"#IGroupSessionSetup915\" onclick=\"ScrollToEnum();return false;\">OnAccountInfoFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnAccountInfoFailure.restrictAccess",
				description:"For members of this group whose individual settings are not defined differently, the action the SSH Server should take if the SSH Server has been able to create a logon session, but Windows reports an error obtaining Windows account information.\n\nIt is possible that the SSH Server can log a user in successfully, but Windows reports an error when attempting to obtain account information, such as the location of the user's profile directory. This can create undesired outcomes, or even security risks, if your configuration depends on environment variables such as %HOME% to be set correctly.\n\nIn most environments, the setting Disable access to child processes is sufficient to mitigate such risks. If an error occurs, file transfer, terminal, and exec requests will not function, but port forwarding will work.\n\nIf this is set to Disable Windows profile loading, then if there is an account info failure, file transfer and BvShell may continue to work, but environment variables may be set to different values than expected. Terminal and exec requests will not function because the user's Windows profile will not be loaded.\n\nIf this is set to No restrictions, then if there is an account info failure, and the SSH Server needs to load the user's Windows profile, it will attempt to load it with a null profile path. If this succeeds, all functionality will continue to be available, but the Windows profile may be loaded differently than expected, and related environment variables may be set to different values than expected."
				},
				{
				name:"ifTemporaryProfileLoaded &#x2192; <a href=\"#IGroupSessionSetup915\" onclick=\"ScrollToEnum();return false;\">IfTemporaryProfileLoaded915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.IfTemporaryProfileLoaded.noRestrict",
				description:"For members of this group whose individual settings are not defined differently, the action the SSH Server should take if a temporary Windows profile is loaded.\n\nCertain settings will cause the SSH Server to load the Windows profile for the user's logon session. Profile loading is performed by Windows and can fail. If the intended Windows profile cannot be loaded, Windows might load a temporary profile instead. The temporary profile may contain different settings and environment variables than the intended Windows profile. This may cause the SSH connection to behave differently than intended.\n\nWith Treat as failure, a temporary profile is treated as if the profile failed to load. Actions which require a Windows profile to be loaded will not succeed. This includes, for example, terminal shell access (when not using BvShell), or synchronization with authorized_keys.\n\nWith No restrictions, a temporary profile will be treated as if the intended profile was successfully loaded. Actions which depend on the Windows profile to be loaded will succeed, but could have different outcomes than intended."
				},
				{
				name:"useGlobalWinSessionStgs &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not configured differently, whether to use server-wide Windows session settings configured under Server > Sessions, or the settings defined here for the group."
				},
				{
				name:"winSessionSharing &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether multiple connections from the same user can share the same Windows session. When connections share a Windows session, actions performed by one connection may affect others. For example, when one connection maps a Windows file share, the same share becomes accessible to other connections in the same Windows session. If one connection disconnects a share, that share stops being available to other connections. A connection which does not require a Windows profile to be loaded may run inside a Windows session in which the Windows profile is loaded, if it was loaded previously by another connection.\n\nConnections that log in as separate accounts - Windows or virtual - cannot share the same Windows session. If SSH Server settings change in a way that affects Windows session initialization, subsequent connections will receive a new Windows session."
				},
				{
				name:"winSessionKeepAliveSecs &#x2192; ULONG {get} {set}",
				defaultValue:"default: 600",
				description:"The number of seconds a Windows session stays cached after the last connection which was using the Windows session disconnects."
				},
				{
				name:"maxWinSessionAgeHours &#x2192; ULONG {get} {set}",
				defaultValue:"default: 768",
				description:"After a Windows session was created, the maximum number of hours it can continue to be reused. After this time expires, the Windows session will be closed, and a new one will be created when the next connection needs it."
				},
				{
				name:"windowsFileShareSettings &#x2192; <a href=\"#INetworkShareGroupSettings915\" onclick=\"SetInterface('INetworkShareGroupSettings915', false);return false;\">INetworkShareGroupSettings915</a> {get}",
				description:"Settings in this group control how to handle connections to Windows file shares: whether to map a remote home directory; whether to map remembered shares; and what to do if file share connections fail."
				},
				{
				name:"shares &#x2192; <a href=\"#IFileShares915\" onclick=\"SetInterface('IFileShares915', false);return false;\">IFileShares915</a> {get}",
				description:"A list of shared folders on other computers in the local network that the SSH Server should establish connections to when members of this group log in."
				},
				{
				name:"windowsOnLogonCmd &#x2192; <a href=\"#IWinOnLogonCommand915\" onclick=\"SetInterface('IWinOnLogonCommand915', false);return false;\">IWinOnLogonCommand915</a> {get}",
				description:"If configured, then for members of this group whose individual settings are not configured differently, this command will be run when a Windows session is initialized for the user.\n\nIf Windows session sharing is enabled, then a Windows session will be initialized when a user first connects and authenticates. Subsequent connections from the same user may reuse the same Windows session. When a Windows session is reused, the Windows on-logon command is not run in that session again.\n\nIf Windows session sharing is disabled, then a new Windows session is initialized for each connection where the user authenticates. In this case, the Windows on-logon command runs before the per-connection On-logon command, if one is configured.\n\nThe Windows on-logon command is suitable to initialize resources which should be available to all connections from the same user. For example, this command is suitable to map a network drive."
				},
				{
				name:"windowsOnLogoffCmd &#x2192; <a href=\"#IWinOnLogoffCommand915\" onclick=\"SetInterface('IWinOnLogoffCommand915', false);return false;\">IWinOnLogoffCommand915</a> {get}",
				description:"If configured, then for members of this group whose individual settings are not configured differently, this command will be run when a Windows session is dismissed for the user.\n\nIf Windows session sharing is enabled, a single Windows session can be used for one or more, or many connections from the same user. A Windows session gets dismissed when the user has been disconnected for a configurable amount of time. A Windows session also gets dismissed when it has been around for a configurable maximum time; or when certain user settings change in a way that requires the SSH Server to initialize a new Windows session.\n\nIf Windows session sharing is disabled, then a new Windows session is initialized for each connection where the user authenticates, and dismissed when the user disconnects. In this case, the Windows on-logoff command runs after the On-disconnect command, if one is configured.\n"
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IGroupSessionSetup915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"IfTemporaryProfileLoaded915",
				description:"IfTemporaryProfileLoaded_treatAsFailure (1): Treat as failure<br />IfTemporaryProfileLoaded_noRestrict (2): No restrictions"
				},
				{
				name:"LogonType915",
				description:"LogonType_interactive (1): Interactive<br />LogonType_network (2): Network<br />LogonType_batch (3): Batch"
				},
				{
				name:"OnAccountInfoFailure915",
				description:"OnAccountInfoFailure_denyLogin (1): Deny login<br />OnAccountInfoFailure_restrictAccess (2): Disable access to child processes<br />OnAccountInfoFailure_disableProfile (3): Disable Windows profile loading<br />OnAccountInfoFailure_noRestrict (4): No restrictions"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IGroupTerminalAndExec915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"shellAccessType &#x2192; <a href=\"#IGroupTerminalAndExec915\" onclick=\"ScrollToEnum();return false;\">ShellAccess915</a> {get} {set}",
				defaultValue:"Default value varies depending on context.",
				description:"For members of this group whose individual settings are not defined differently, the type of terminal shell and exec request access the accounts should have.\n\nA terminal shell is what's accessed when an SSH client opens a console window into which the user can type commands. A shell can be accessed either interactively, or non-interactively. When accessed non-interactively, the SSH client starts the connection by sending an exec request containing a command, which the server runs.\n\nThe shell access types Command Prompt, PowerShell, and bash provide access restricted only by the user's Windows filesystem permissions. These shell types do not respect the SSH Server's virtual filesystem, and allow execution of arbitrary programs.\n\nFor users who only need to access the SSH Server for file transfer, shell access should be either disabled, or set to BvShell.\n\nFor users who only need to access the SSH Server for Git, shell access should be configured to Git access only.\n\nBvShell is a bash-like shell provided by the SSH Server. This is the only shell type which respects the virtual filesystem layout configured for the client in SSH Server settings. BvShell does not permit execution of arbitrary programs. It is intended for clients limited to file transfer access that may wish to use commands their SFTP or SCP client might not provide (e.g. file copy).\n\nWhen enabled, BvShell allows WinSCP to function properly when it connects to the SSH Server in SCP mode. See also the separate setting Use BvShell with WinSCP, under File transfer."
				},
				{
				name:"shellCustom &#x2192; <a href=\"#IGroupTerminalShellSettings915\" onclick=\"SetInterface('IGroupTerminalShellSettings915', false);return false;\">IGroupTerminalShellSettings915</a> {get}",
				description:"Use custom shell settings to configure a type of shell access not covered by pre-defined access types."
				},
				{
				name:"bashExePath &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"C:\\Path\\To\\bash.exe\"",
				description:"Configure the full path and file name to the bash.exe executable.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"addBashDirToPath &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If this setting is enabled, the SSH Server will add the Bash executable directory to the PATH environment variable before executing Bash."
				},
				{
				name:"gitType &#x2192; <a href=\"#IGroupTerminalAndExec915\" onclick=\"ScrollToEnum();return false;\">GitType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.GitType.msysgit",
				description:"Use Cygwin or compatible for Cygwin Git or Gitwin.\n\nUse Git for Windows, msysGit or compatible if you are using Git for Windows, msysGit, Bonobo Git Server, or GitStack.\n\nIf you experience trouble using msysGit, we recommend selecting the option 'Use Git and optional Unix tools from the Windows Command Prompt' during msysGit installation. If a different option is chosen, the SSH Server will still attempt to configure the PATH environment variable so that msysGit will work, but may not be able to do so correctly."
				},
				{
				name:"gitBinDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"C:\\Path\\To\\Git\\Bin\"",
				description:"Configure the path to a directory that contains the following Git binaries: git-receive-pack.exe, git-upload-pack.exe, and git-upload-archive.exe.\n\nFor Cygwin, the default path is either 'C:\\cygwin\\bin or C:\\cygwin64\\bin'.\n\nFor msysGit, the default path is 'C:\\Program files (x86)\\Git\\libexec\\git-core'.\n\nFor Bonobo Git Server, the default path is 'C:\\inetpub\\wwwroot\\Bonobo.Git.Server\\App_Data'.\n\nFor GitStack, the default path is 'C:\\GitStack\\git\\libexec\\git-core'.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"gitRepoDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"C:\\Path\\To\\Repo\"",
				description:"Configure the path to a directory in which your Git repositories are stored. The client will be permitted to access only repositories in this directory or its sub-folders.\n\nThe configured path must be an absolute Windows path, but it may also be a UNC path. For example: \\\\server\\share\\repo\n\nIf using a UNC path in a connection with public key authentication, you will need to either set up the SSH Server's password cache, or configure credentials for the SSH Server to access the share. See \"Network shares and public key authentication\":\nhttps://www.bitvise.com/ssh-server-accessing-file-shares\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"telnetAddr &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"127.0.0.1\"",
				description:"The IPv4 address, IPv6 address, or DNS name of the Telnet server to which to forward the terminal session."
				},
				{
				name:"telnetPort &#x2192; ULONG {get} {set}",
				defaultValue:"default: 23",
				description:"The port number of the Telnet server to which to forward the terminal session."
				},
				{
				name:"initData &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Data that will be sent to the Telnet server immediately after the connection to the Telnet server is established; after any first text is received from the server.\n\nFor example - to send the SSH user's account name in the first line, and the client's IP address and port number in the second line, use: %USERNAME%\\r\\n%SSH_CLIENT%\\r\\n\n\nValid escape sequences are:\n\\n - new line\n\\r - carriage return\n\\p - boundary between blocks of data\n\nUsually, Telnet servers expect \\r\\n as new line separator.\n\n\\p can be used to split data sent to the server without sending a new line. This can be useful e.g. for confirming questions, or navigating through a menu.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"loadProfileForBvShell &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"For members of this group whose individual settings are not defined differently, this setting controls whether the SSH Server should load a user's Windows profile before starting BvShell.\n\nEnabling this setting ensures the user's profile will be loaded if it was not already loaded for another reason. If this setting is disabled, the SSH Server may still load the user's profile because of another setting. If Windows session sharing is enabled, the user's profile may already be loaded.\n\nIf no profile is loaded for BvShell, the Preferred console version setting will have no effect: behavior will be as if it was set to System default. The maximum console character width will be reduced also.\n\nIf the setting Load profile for file transfer is enabled, the profile will be loaded for BvShell regardless of this setting. BvShell is a way of accessing the server for file transfer.\n\nFor more information about disabling Windows profile loading, see Q260 and Q265 in the SSH Server Usage FAQ:\nhttps://www.bitvise.com/ssh-server-usage-faq#Q260 \n"
				},
				{
				name:"allowJobBreakaway &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether the user should be allowed to execute programs in a way that allows them to continue running after the SSH connection itself has ended. If execution of such programs is desired, this option should be enabled and the programs should be executed using the bvRun utility supplied with Bitvise SSH Server, using flags \"-brj -new\" or \"-brj -det\"."
				},
				{
				name:"terminalCodePage &#x2192; <a href=\"#IGroupTerminalAndExec915\" onclick=\"ScrollToEnum();return false;\">TerminalCodePage915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.TerminalCodePage.utf8",
				description:"For members of this group whose individual settings are not defined differently, the character encoding to use when a client accesses a terminal shell. The default encoding is UTF-8, which supports all international characters, but requires the client to also support UTF-8. To support international characters with clients that do not support UTF-8, this setting allows the client's code page to be explicitly configured."
				},
				{
				name:"initDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"%HOME%\"",
				description:"For members of this group whose individual settings are not defined differently, what initial directory to use for for terminal shell and exec requests. If an empty string is specified, the SSH Server will attempt to use the most suitable directory, e.g. the user's home directory. Note that this is a real local path on the server machine, not a virtual path.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"permitInitDirFallback &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently: if this setting is enabled, and the path configured in the setting Initial terminal shell directory is inaccessible, the SSH Server will allow the client to start a terminal shell in the directory %SYSTEMROOT%\\System32."
				},
				{
				name:"permitEnvVar &#x2192; BOOL {get} {set}",
				defaultValue:"Default value varies depending on context.",
				description:"For members of this group whose individual settings are not defined differently, whether the client should be allowed to set environment variables before starting a terminal shell or exec request."
				},
				{
				name:"allowAgentFwdCygwin &#x2192; BOOL {get} {set}",
				defaultValue:"Default value varies depending on context.",
				description:"For members of this group whose individual settings are not defined differently, whether the client should be allowed to request SSH authentication agent forwarding for Cygwin's OpenSSH client while starting a terminal shell or exec request.\n\nChanging this setting has no effect on SSH connections for which authentication agentforwarding has already been started."
				},
				{
				name:"allowAgentFwdPutty &#x2192; BOOL {get} {set}",
				defaultValue:"Default value varies depending on context.",
				description:"For members of this group whose individual settings are not defined differently, whether the client should be allowed to request SSH authentication agent forwarding for PuTTY's Pageant client while starting a terminal shell or exec request.\n\nChanging this setting has no effect on SSH connections for which authentication agentforwarding has already been started."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IGroupTerminalAndExec915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"GitType915",
				description:"GitType_cygwin (0): Cygwin or compatible<br />GitType_msysgit (1): Git for Windows, msysGit or compatible"
				},
				{
				name:"ShellAccess915",
				description:"ShellAccess_disabled (2): No shell access<br />ShellAccess_bvshell (10): BvShell<br />ShellAccess_cmdPrompt (3): Command Prompt<br />ShellAccess_powershell (4): PowerShell<br />ShellAccess_bash (5): Bash<br />ShellAccess_gitonly (6): Git access only<br />ShellAccess_telnetSrv (9): Telnet server<br />ShellAccess_custom (7): Custom shell settings"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				},
				{
				name:"TerminalCodePage915",
				description:"TerminalCodePage_utf8 (65001): UTF-8<br />TerminalCodePage_iso88591 (28591): ISO 8859-1<br />TerminalCodePage_iso88592 (28592): ISO 8859-2<br />TerminalCodePage_iso88593 (28593): ISO 8859-3<br />TerminalCodePage_iso88594 (28594): ISO 8859-4<br />TerminalCodePage_iso88595 (28595): ISO 8859-5<br />TerminalCodePage_iso88596 (28596): ISO 8859-6<br />TerminalCodePage_iso88597 (28597): ISO 8859-7<br />TerminalCodePage_iso88598 (28598): ISO 8859-8<br />TerminalCodePage_iso88599 (28599): ISO 8859-9<br />TerminalCodePage_iso885910 (28600): ISO 8859-10<br />TerminalCodePage_iso885911 (28601): ISO 8859-11<br />TerminalCodePage_iso885913 (28603): ISO 8859-13<br />TerminalCodePage_iso885914 (28604): ISO 8859-14<br />TerminalCodePage_iso885915 (28605): ISO 8859-15<br />TerminalCodePage_iso885916 (28606): ISO 8859-16<br />TerminalCodePage_ansi1250 (1250): ANSI 1250<br />TerminalCodePage_ansi1251 (1251): ANSI 1251<br />TerminalCodePage_ansi1252 (1252): ANSI 1252<br />TerminalCodePage_ansi1253 (1253): ANSI 1253<br />TerminalCodePage_ansi1254 (1254): ANSI 1254<br />TerminalCodePage_ansi1255 (1255): ANSI 1255<br />TerminalCodePage_ansi1256 (1256): ANSI 1256<br />TerminalCodePage_ansi1257 (1257): ANSI 1257<br />TerminalCodePage_ansi1258 (1258): ANSI 1258<br />TerminalCodePage_ansi874 (874): ANSI 874<br />TerminalCodePage_ansi932 (932): ANSI 932<br />TerminalCodePage_ansi936 (936): ANSI 936<br />TerminalCodePage_ansi949 (949): ANSI 949<br />TerminalCodePage_ansi950 (950): ANSI 950<br />TerminalCodePage_oem437 (437): OEM 437<br />TerminalCodePage_oem720 (720): OEM 720<br />TerminalCodePage_oem737 (737): OEM 737<br />TerminalCodePage_oem775 (775): OEM 775<br />TerminalCodePage_oem850 (850): OEM 850<br />TerminalCodePage_oem852 (852): OEM 852<br />TerminalCodePage_oem855 (855): OEM 855<br />TerminalCodePage_oem857 (857): OEM 857<br />TerminalCodePage_oem858 (858): OEM 858<br />TerminalCodePage_oem860 (860): OEM 860<br />TerminalCodePage_oem861 (861): OEM 861<br />TerminalCodePage_oem862 (862): OEM 862<br />TerminalCodePage_oem863 (863): OEM 863<br />TerminalCodePage_oem864 (864): OEM 864<br />TerminalCodePage_oem865 (865): OEM 865<br />TerminalCodePage_oem866 (866): OEM 866<br />TerminalCodePage_oem869 (869): OEM 869<br />TerminalCodePage_koi8r (20866): KOI8-R<br />TerminalCodePage_koi8u (21866): KOI8-U<br />TerminalCodePage_johab (1361): Johab"
				}
			]
			},
			{
			name:"IGroupTerminalShellSettings915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"permitTerminalShell &#x2192; BOOL {get} {set}",
				defaultValue:"Default value varies depending on context.",
				description:"For members of this group whose individual settings are not defined differently, whether terminal shell access should be allowed.\n\nNote: If you deny terminal shell access for security reasons, you should normally also deny exec requests."
				},
				{
				name:"terminalShell &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"cmd.exe\"",
				description:"For members of this group whose individual settings are not defined differently, what program to use as the terminal shell. This program will normally be a command processor, but any text-mode program can be used.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"permitExecRequests &#x2192; BOOL {get} {set}",
				defaultValue:"Default value varies depending on context.",
				description:"For members of this group whose individual settings are not defined differently, whether exec requests should be allowed. An exec request is a method of command execution that is more appropriate for use by automated clients than a terminal shell."
				},
				{
				name:"execReqPrefix &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"cmd.exe /c\"",
				description:"For members of this group whose individual settings are not defined differently, what string to prefix before a command supplied in an exec request. If empty, commands like 'dir' will need to be phrased fully as 'cmd /c dir' on the client.\n\nTo use git-shell, you must disable the 'Convert Git parameters' setting, then configure the exec request prefix as:\n\nC:\\Path\\To\\git-shell.exe -c \"\n\nThe double quote at the end is important."
				},
				{
				name:"spaceAfterPrefix &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether the server should add a space between the exec request prefix and the command when executing an exec request."
				},
				{
				name:"convertGitParams &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether the server should perform automatic detection and conversion of Git command lines.\n\nWhen detection and conversion of Git command lines is enabled, the SSH Server will transform exec requests starting with 'git ' or 'git-' from Unix-like syntax to Windows syntax according to the following rules:\n\na) Single quote characters, which aren't recognized by the Windows command interpreter, will be converted into double quote characters.\n\nb) Unquoted escaped spaces ('\\ ') will be changed to double quoted spaces ('\" \"').\n\nc) Backslash escape sequences that do not end with a regular or an escaped double quote will be removed.\n\nThis feature should be disabled when using git-shell as exec request prefix."
				},
				{
				name:"base64EncodeCmd &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"For members of this group whose individual settings are not defined differently, whether the server should Base64 encode commands received with execute requests.\n\nThis setting is intended for use with PowerShell -EncodedCommand."
				},
				{
				name:"doubleQuoteCmd &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"For members of this group whose individual settings are not defined differently, whether the server should add double quotes around commands received with execute requests.\n\nIf enabled, the SSH Server will add double quotes around exec request commands. Any quotes and backslash characters inside the command will be escaped with a backslash (\"\\\")."
				},
				{
				name:"forceDumbPty &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If this setting is enabled, then for all members of this group whose individual settings are not defined differently, the terminal type requested by the client for terminal sessions and exec requests will be ignored, and the \"dumb\" terminal type will be used instead. Output of the terminal shell and any executed programs will be passed to the client directly, without terminal emulation."
				},
				{
				name:"customSubsysAccess &#x2192; <a href=\"#IGroupTerminalShellSettings915\" onclick=\"ScrollToEnum();return false;\">CustomSubsysAccess915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.CustomSubsysAccess.denyAll",
				description:"For members of this group whose individual settings are not defined differently, whether access should be permitted to custom subsystems defined in Advanced settings. Custom subsystems are accessed like a terminal shell, but the server executes a custom command configured in server settings, and the \"dumb\" terminal type is always used (no terminal emulation)."
				},
				{
				name:"allowSubsystems &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"For members of this group whose individual settings are not defined differently, a comma-separated list of custom subsystem names the user may invoke. Names that do not correspond to a subsystem defined in Advanced settings will have no effect."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IGroupTerminalShellSettings915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"CustomSubsysAccess915",
				description:"CustomSubsysAccess_denyAll (2): Deny all<br />CustomSubsysAccess_allowSpecific (3): Allow specific<br />CustomSubsysAccess_allowAll (4): Allow all"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IHealthMonitoring915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"monitorCpu &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the SSH Server will monitor CPU usage on the system as a whole, and generate a warning log message when the configured high CPU threshold is exceeded."
				},
				{
				name:"cpuThreshold &#x2192; ULONG {get} {set}",
				defaultValue:"default: 90",
				description:"If system-wide CPU usage on all cores exceeds the specified threshold, the SSH Server will log the warning W_SYSTEM_MONITOR_HIGH_CPU_USAGE.\n\nElsewhere in SSH Server settings, warnings can be configured as triggers for custom actions. For example, a warning can trigger execution of a command, or send an email notification."
				},
				{
				name:"monitorMemory &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the SSH Server will monitor memory usage on the system as a whole, and generate a warning log message when the configured memory threshold is exceeded."
				},
				{
				name:"memoryThreshold &#x2192; ULONG {get} {set}",
				defaultValue:"default: 90",
				description:"If system-wide memory usage exceeds the specified threshold, the SSH Server will log the warning W_SYSTEM_MONITOR_HIGH_MEMORY_USAGE.\n\nElsewhere in SSH Server settings, warnings can be configured as triggers for custom actions. For example, a warning can trigger execution of a command, or send an email notification."
				},
				{
				name:"monitorVolumes &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the SSH Server will monitor available space on configured disk volumes and generate a warning log message if available space drops below a configured threshold."
				},
				{
				name:"instVolThresholdMb &#x2192; ULONG {get} {set}",
				defaultValue:"default: 1024",
				description:"If available space on the volume that contains the SSH Server's installation directory drops below this threshold, the SSH Server will log the warning W_SYSTEM_MONITOR_LOW_DISK_SPACE.\n\nElsewhere in SSH Server settings, warnings can be configured as triggers for custom actions. For example, a warning can trigger execution of a command, or send an email notification."
				},
				{
				name:"volumes &#x2192; <a href=\"#IMonitoredVolumes915\" onclick=\"SetInterface('IMonitoredVolumes915', false);return false;\">IMonitoredVolumes915</a> {get}",
				description:"A list of disk volumes to monitor."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IHealthMonitoring915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IHostKey915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"type &#x2192; <a href=\"#IHostKey915\" onclick=\"ScrollToEnum();return false;\">HostKeyType915</a> {get}",
				description:"The type of the saved host key or fingerprint."
				},
				{
				name:"keyBits &#x2192; ULONG {get}",
				description:"The size of the saved host key in bits. Not available for fingerprints."
				},
				{
				name:"alg &#x2192; BSTR {get}",
				description:"Information about the saved host key's algorithm. Not available for fingerprints."
				},
				{
				name:"algId &#x2192; <a href=\"#IHostKey915\" onclick=\"ScrollToEnum();return false;\">KeypairAlgId915</a> {get}",
				description:"Algorithm ID of the saved host key. Not available for fingerprints."
				},
				{
				name:"host &#x2192; BSTR {get}",
				description:"The host name associated with the saved host key. Not available for fingerprints."
				},
				{
				name:"port &#x2192; ULONG {get}",
				description:"The port number associated with the saved host key. Not available for fingerprints."
				},
				{
				name:"insertTime &#x2192; BSTR {get}",
				description:"The insert time of the saved host key or fingerprint."
				},
				{
				name:"comment &#x2192; BSTR {get} {set}",
				description:"Gets or sets a comment associated with the saved host key or fingerprint."
				},
				{
				name:"md5 &#x2192; BSTR {get}",
				description:"The MD5 fingerprint of the saved host key, or the saved MD5 fingerprint. Not available for Bubble-Babble or SHA-256 fingerprints."
				},
				{
				name:"bubbleBabble &#x2192; BSTR {get}",
				description:"The Bubble-Babble fingerprint of the saved host key, or the saved Bubble-Babble fingerprint. Not available for MD5 or SHA-256 fingerprints."
				},
				{
				name:"sha256 &#x2192; BSTR {get}",
				description:"The SHA-256 fingerprint of the saved host key, or the saved SHA-256 fingerprint. Not available for MD5 or Bubble-Babble fingerprints."
				},
				{
				name:"hex &#x2192; BSTR {get}",
				description:"The complete hex-encoded information about the saved host key or fingerprint."
				},
				{
				name:"info &#x2192; BSTR {get}",
				description:"A textual description of the saved host key or fingerprint."
				}
			],
			methods:
			[
				{
				name:"ExportToFile (BSTR fileName, <a href=\"#IHostKey915\" onclick=\"ScrollToEnum();return false;\">PublicKeyFormat915</a> format)",
				description:"Exports the host key into file. Not available for saved fingerprints.",
				parameters:
				[
					{
					parameter:"fileName: Path to the output file."
					},
					{
					parameter:"format: The export host key format."
					}
				]
				},
				{
				name:"ExportToBase64String (<a href=\"#IHostKey915\" onclick=\"ScrollToEnum();return false;\">PublicKeyFormat915</a> format) &#x2192; BSTR",
				description:"Exports the host key into string. Supports the same formats as when exporting to a file. Not available for saved fingerprints.",
				parameters:
				[
					{
					parameter:"format: The export host key format."
					}
				]
				},
				{
				name:"Matches (BSTR criterion) &#x2192; BOOL",
				description:"Returns true if the saved host key or fingerprint matches the criterion. Returns false if not. The saved host key's algorithm, comment, MD5, Bubble-Babble and SHA-256 fingerprints are matched against the criterion. For saved fingerprints, the comment and fingerprint value are matched.",
				parameters:
				[
					{
					parameter:"criterion: Text to search for."
					}
				]
				}
			],
			enums:
			[
				{
				name:"HostKeyType915",
				description:"HostKeyType_key: 0<br />HostKeyType_unrecognizedKey: 1<br />HostKeyType_md5Fingerprint: 2<br />HostKeyType_bubbleBabbleFingerprint: 3<br />HostKeyType_sha256Fingerprint: 4"
				}
			]
			},
			{
			name:"IHostKeypair915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"employed &#x2192; BOOL {get}",
				description:"Returns true if the keypair is employed."
				},
				{
				name:"index &#x2192; ULONG {get}",
				description:"Returns the index of the keypair. Can be used to find the keypair in the Keypairs interface."
				},
				{
				name:"keyBits &#x2192; ULONG {get}",
				description:"The size of the keypair in bits."
				},
				{
				name:"alg &#x2192; BSTR {get}",
				description:"Information about the keypair's algorithm."
				},
				{
				name:"algId &#x2192; <a href=\"#IHostKeypair915\" onclick=\"ScrollToEnum();return false;\">KeypairAlgId915</a> {get}",
				description:"Keypair algorithm ID."
				},
				{
				name:"insertTime &#x2192; BSTR {get}",
				description:"The insert time of the key."
				},
				{
				name:"comment &#x2192; BSTR {get} {set}",
				description:"Gets or sets a comment associated with the host authentication keypair."
				},
				{
				name:"md5 &#x2192; BSTR {get}",
				description:"The MD5 fingerprint of the host authentication keypair."
				},
				{
				name:"sha1 &#x2192; BSTR {get}",
				description:"The SHA-1 fingerprint of the host authentication keypair."
				},
				{
				name:"bubbleBabble &#x2192; BSTR {get}",
				description:"The Bubble-Babble fingerprint of the host authentication keypair."
				},
				{
				name:"sha256 &#x2192; BSTR {get}",
				description:"The SHA-256 fingerprint of the host authentication keypair."
				}
			],
			methods:
			[
				{
				name:"ExportPublicKeyToBase64String (<a href=\"#IHostKeypair915\" onclick=\"ScrollToEnum();return false;\">PublicKeyFormat915</a> format) &#x2192; BSTR",
				description:"Exports the public key for this host authentication keypair to a Base64-encoded string.",
				parameters:
				[
					{
					parameter:"format: The export format."
					}
				]
				},
				{
				name:"ExportPublicKeyToFile (BSTR fileName, <a href=\"#IHostKeypair915\" onclick=\"ScrollToEnum();return false;\">PublicKeyFormat915</a> format)",
				description:"Exports the public key for this host authentication keypair into a file.",
				parameters:
				[
					{
					parameter:"fileName: Path to the output file."
					},
					{
					parameter:"format: The export format."
					}
				]
				},
				{
				name:"ExportToBase64String (<a href=\"#IHostKeypair915\" onclick=\"ScrollToEnum();return false;\">KeypairFormat915</a> format, BSTR pass) &#x2192; BSTR",
				description:"Exports the full host authentication keypair to a Base64-encoded string.",
				parameters:
				[
					{
					parameter:"format: The export format."
					},
					{
					parameter:"pass: Password with which to protect the exported keypair. May be empty."
					}
				]
				},
				{
				name:"ExportToFile (BSTR fileName, <a href=\"#IHostKeypair915\" onclick=\"ScrollToEnum();return false;\">KeypairFormat915</a> format, BSTR pass)",
				description:"Exports the full host authentication keypair into a file.",
				parameters:
				[
					{
					parameter:"fileName: Path to the output file."
					},
					{
					parameter:"format: The export format."
					},
					{
					parameter:"pass: Password with which to protect the exported keypair. May be empty."
					}
				]
				}
			],
			enums:
			[
				{
				name:"KeypairFormat915",
				description:"KeypairFormat_bitvise: 0<br />KeypairFormat_openSsh: 1"
				},
				{
				name:"PublicKeyFormat915",
				description:"PublicKeyFormat_ssh2: 0<br />PublicKeyFormat_openSsh: 1"
				}
			]
			},
			{
			name:"IHostKeypairs915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"The number of host authentication keypairs configured for the current SSH Server instance."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IHostKeypair915\" onclick=\"SetInterface('IHostKeypair915', false);return false;\">IHostKeypair915</a>) {get}",
				description:"Allows enumerating host authentication keypairs and accessing them by index."
				},
				{
				name:"locked &#x2192; BOOL {get}",
				description:"The lock status of host authentication keypairs for the current SSH Server instance."
				}
			],
			methods:
			[
				{
				name:"Lock ()",
				description:"Locks host authentication keypairs for the current SSH Server instance. Keypairs cannot be edited by other processes until Unlock is called."
				},
				{
				name:"Unlock ()",
				description:"Unlocks host authentication keypairs for the current SSH Server instance."
				},
				{
				name:"Load ()",
				description:"Loads the host authentication keypairs configured for the current SSH Server instance so that they become accessible through this object."
				},
				{
				name:"Save (BOOL autoBackup)",
				description:"Saves host authentication keypairs for the current SSH Server instance.",
				parameters:
				[
					{
					parameter:"autoBackup: If true, saves a backup file of previous certificate state. If false, no automatic backup is created."
					}
				]
				},
				{
				name:"Backup ()",
				description:"Creates a backup of the host authentication keypair configuration for the current SSH Server instance."
				},
				{
				names:
				[
					"GenerateNewKeypair (<a href=\"#IHostKeypairs915\" onclick=\"ScrollToEnum();return false;\">KeypairAlgId915</a> keypairAlgId, BOOL autoEmploy)",
					"GenerateNewKeypairEx (<a href=\"#IHostKeypairs915\" onclick=\"ScrollToEnum();return false;\">KeypairAlgId915</a> keypairAlgId, BOOL autoEmploy) &#x2192; <a href=\"#IHostKeypair915\" onclick=\"SetInterface('IHostKeypair915', false);return false;\">IHostKeypair915</a>",
					"GenerateNewKeypairWithSize (<a href=\"#IHostKeypairs915\" onclick=\"ScrollToEnum();return false;\">KeypairAlgId915</a> keypairAlgId, ULONG keySize, BOOL autoEmploy)",
					"GenerateNewKeypairWithSizeEx (<a href=\"#IHostKeypairs915\" onclick=\"ScrollToEnum();return false;\">KeypairAlgId915</a> keypairAlgId, ULONG keySize, BOOL autoEmploy) &#x2192; <a href=\"#IHostKeypair915\" onclick=\"SetInterface('IHostKeypair915', false);return false;\">IHostKeypair915</a>"
				],
				description:"Generates a new host authentication keypair. The 'Ex' versions of the function return the generated keypair.",
				parameters:
				[
					{
					parameter:"keypairAlgId: The host key algorithm."
					},
					{
					parameter:"keySize: Keypair size, in bits."
					},
					{
					parameter:"autoEmploy: If true, the generated key will be employed immediately. If false, the keypair will not be employed."
					}
				]
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IHostKeypair915\" onclick=\"SetInterface('IHostKeypair915', false);return false;\">IHostKeypair915</a>",
				description:"Returns the host authentication keypair with the specified index.",
				parameters:
				[
					{
					parameter:"index: Zero-based index of the keypair."
					}
				]
				},
				{
				name:"GetEmployed (<a href=\"#IHostKeypairs915\" onclick=\"ScrollToEnum();return false;\">KeypairAlgId915</a> keypairAlgId) &#x2192; <a href=\"#IHostKeypair915\" onclick=\"SetInterface('IHostKeypair915', false);return false;\">IHostKeypair915</a>",
				description:"Returns the employed host key for the specified algorithm. Null if no host key is employed for that algorithm.",
				parameters:
				[
					{
					parameter:"keypairAlgId: Host key algorithm ID."
					}
				]
				},
				{
				name:"GetEmployedIndex (<a href=\"#IHostKeypairs915\" onclick=\"ScrollToEnum();return false;\">KeypairAlgId915</a> keypairAlgId) &#x2192; ULONG",
				description:"Returns the index of the employed host key for the specified algorithm. If no host key is employed for that algorithm, returns an error.",
				parameters:
				[
					{
					parameter:"keypairAlgId: Host key algorithm ID."
					}
				]
				},
				{
				name:"ExistsEmployed (<a href=\"#IHostKeypairs915\" onclick=\"ScrollToEnum();return false;\">KeypairAlgId915</a> keypairAlgId) &#x2192; BOOL",
				description:"Returns true if there exists an employed host key for the specified algorithm.",
				parameters:
				[
					{
					parameter:"keypairAlgId: Host key algorithm ID."
					}
				]
				},
				{
				name:"Employ (ULONG index)",
				description:"Employs a host authentication keypair.",
				parameters:
				[
					{
					parameter:"index: Zero-based index of the keypair."
					}
				]
				},
				{
				name:"Dismiss (<a href=\"#IHostKeypairs915\" onclick=\"ScrollToEnum();return false;\">KeypairAlgId915</a> keypairAlgId)",
				description:"Dismisses a host authentication keypair.",
				parameters:
				[
					{
					parameter:"keypairAlgId: Host key algorithm ID."
					}
				]
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes a keypair.",
				parameters:
				[
					{
					parameter:"index: Zero-based index of the keypair."
					}
				]
				},
				{
				name:"Clear ()",
				description:"Removes all host authentication keypairs for the current SSH Server instance."
				},
				{
				names:
				[
					"ImportFromFile (BSTR fileName, BSTR pass)",
					"ImportFromFileEx (BSTR fileName, BSTR pass) &#x2192; SAFEARRAY(<a href=\"#IHostKeypair915\" onclick=\"SetInterface('IHostKeypair915', false);return false;\">IHostKeypair915</a>)"
				],
				description:"Imports host authentication keypairs from a file. The 'Ex' version of the function returns the imported keypairs.",
				parameters:
				[
					{
					parameter:"fileName: Path to a file containing a keypair."
					},
					{
					parameter:"pass: Password, if any, to decrypt the keypair."
					}
				]
				},
				{
				names:
				[
					"ImportFromBase64String (BSTR val, BSTR pass)",
					"ImportFromBase64StringEx (BSTR val, BSTR pass) &#x2192; SAFEARRAY(<a href=\"#IHostKeypair915\" onclick=\"SetInterface('IHostKeypair915', false);return false;\">IHostKeypair915</a>)"
				],
				description:"Imports host authentication keypairs from a string. The 'Ex' version of the function returns the imported keypairs.",
				parameters:
				[
					{
					parameter:"val: String containing a keypair."
					},
					{
					parameter:"pass: Password, if any, to decrypt the keypair."
					}
				]
				},
				{
				name:"ExportToFile (BSTR fileName, BSTR pass)",
				description:"Exports all host authentication keypairs into a file using a binary Bitvise format.",
				parameters:
				[
					{
					parameter:"fileName: Path to the output file."
					},
					{
					parameter:"pass: Password with which to protect the exported keypair. May be empty."
					}
				]
				},
				{
				name:"ExportToBase64String (BSTR pass) &#x2192; BSTR",
				description:"Exports all host authentication keypairs to a Base64-encoded string using a binary Bitvise format.",
				parameters:
				[
					{
					parameter:"pass: Password with which to protect the exported keypair. May be empty."
					}
				]
				}
			],
			enums:
			[
				{
				name:"KeypairAlgId915",
				description:"KeypairAlgId_rsa (1): RSA<br />KeypairAlgId_ed25519 (6): Ed25519<br />KeypairAlgId_ecdsaSecp256k1 (2): ECDSA/secp256k1<br />KeypairAlgId_ecdsaNistp256 (3): ECDSA/nistp256<br />KeypairAlgId_ecdsaNistp384 (4): ECDSA/nistp384<br />KeypairAlgId_ecdsaNistp521 (5): ECDSA/nistp521<br />KeypairAlgId_dsa (0): DSA"
				}
			]
			},
			{
			name:"IHostKeys915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of keys."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IHostKey915\" onclick=\"SetInterface('IHostKey915', false);return false;\">IHostKey915</a>) {get}",
				description:"Allows enumerating host keys and accessing them by index."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IHostKeys915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IHostKey915\" onclick=\"SetInterface('IHostKey915', false);return false;\">IHostKey915</a>",
				description:"Returns the host key or fingerprint with the specified index.",
				parameters:
				[
					{
					parameter:"index: Zero-based index of the key."
					}
				]
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the host key or fingerprint with the given index.",
				parameters:
				[
					{
					parameter:"index: Zero-based index of the key."
					}
				]
				},
				{
				name:"FindAndErase (BSTR searchString) &#x2192; ULONG",
				description:"Removes host keys and fingerprints that match the specified criterion. Returns the number of removed entries.",
				parameters:
				[
					{
					parameter:"searchString: A search string to be matched as described in [HostKey]::Matches."
					}
				]
				},
				{
				name:"Clear ()",
				description:"Removes all host keys and fingerprints in the list."
				},
				{
				name:"Add (BSTR hex)",
				description:"Adds a previously exported host key or fingerprint to the list.",
				parameters:
				[
					{
					parameter:"hex: Hex-encoded host key or fingerprint in internal format."
					}
				]
				},
				{
				name:"AddFingerprint (BSTR fingerprint)",
				description:"Adds a new fingerprint to the list.",
				parameters:
				[
					{
					parameter:"fingerprint: hex-encoded MD5, Bubble-Babble, or SHA-256 fingerprint."
					}
				]
				},
				{
				name:"ImportFromFile (BSTR fileName)",
				description:"Imports a host public key from file.",
				parameters:
				[
					{
					parameter:"fileName: Path to a file containing a host key."
					}
				]
				},
				{
				name:"ImportFromBase64String (BSTR val)",
				description:"Imports a host public key from a string.",
				parameters:
				[
					{
					parameter:"val: String containing a host key."
					}
				]
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IImportCsvResult915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"success &#x2192; BOOL {get}",
				description:"True if import was successful; false if there were any errors."
				},
				{
				name:"failure &#x2192; BOOL {get}",
				description:"True if there were any errors during import."
				},
				{
				name:"added &#x2192; ULONG {get}",
				description:"The number of entries added to the list."
				},
				{
				name:"processed &#x2192; ULONG {get}",
				description:"The number of processed lines."
				},
				{
				name:"ignored &#x2192; ULONG {get}",
				description:"The number of ignored lines (duplicates of existing entries)."
				}
			],
			methods:
			[
				{
				name:"Describe () &#x2192; BSTR",
				description:"Describes the import results as a string."
				}
			]
			},
			{
			name:"IInstance915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"name &#x2192; BSTR {get}",
				description:"Name of this SSH Server instance, chosen by the administrator when it was installed."
				},
				{
				name:"serviceName &#x2192; BSTR {get}",
				description:"Name of the Windows service for this SSH Server instance."
				},
				{
				name:"managedAccountName &#x2192; BSTR {get}",
				description:"Name of the automatically managed virtual users account used by this SSH Server instance."
				},
				{
				name:"installDir &#x2192; BSTR {get}",
				description:"Installation directory of this SSH Server instance."
				},
				{
				name:"version &#x2192; BSTR {get}",
				description:"Installed software version of this SSH Server instance."
				},
				{
				name:"desc &#x2192; BSTR {get}",
				description:"Special build description, if any, for this SSH Server instance. Empty for release versions."
				},
				{
				name:"canManage &#x2192; BOOL {get}",
				description:"True if this instance can be managed by the current BssCfgManip object. If false, a different object is needed."
				},
				{
				name:"cfgObjName &#x2192; BSTR {get}",
				description:"A string that can be used with \"new-object -com\" to create a BssCfgManip object to manage this instance."
				},
				{
				name:"cfgObjVersion &#x2192; BSTR {get}",
				description:"Interface version of the BssCfgManip object for this SSH Server instance."
				},
				{
				name:"cfgFormatVersion &#x2192; BSTR {get}",
				description:"Configuration format version for this SSH Server instance."
				}
			]
			},
			{
			name:"IInstanceTypeSettings915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"instanceType &#x2192; <a href=\"#IInstanceTypeSettings915\" onclick=\"ScrollToEnum();return false;\">InstanceType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.InstanceType.standalone",
				description:"A Bitvise SSH Server installation can be either of the following:\n\nA standalone server: Does not participate in configuration synchronization.\n\nA follower: A server that receives part or all of its configuration from another server.\n\nA master: A server whose configuration is forwarded to follower servers.\n\nA secondary master: A server that acts both as a follower to a primary master, and as a master to other followers."
				},
				{
				name:"rank &#x2192; ULONG {get} {set}",
				defaultValue:"default: 10",
				description:"The purpose of this setting is to detect and prevent accidental cyclical configurations of secondary masters. To prevent secondary masters from connecting to one another in a cycle, a secondary master cannot connect to another secondary master of numerically equal or greater rank. For example, a rank 20 secondary master can connect to a rank 10 secondary master, but it cannot connect to rank 30. All secondary masters can connect to a primary master.\n\nAlmost always, this setting should not have to be changed. A majority of master/follower configurations do not need secondary masters. In large deployments that need secondary masters, it is generally sufficient to have a single layer of secondary masters that connect to a primary master directly. Only extremely large deployments that need multiple layers of secondary masters might need to be mindful of this setting."
				},
				{
				name:"pwdInstance &#x2192; <a href=\"#IPassword915\" onclick=\"SetInterface('IPassword915', false);return false;\">IPassword915</a> {get}",
				description:"If configured, this password will be required to change instance type settings and update settings."
				},
				{
				name:"master &#x2192; <a href=\"#IMasterSettings915\" onclick=\"SetInterface('IMasterSettings915', false);return false;\">IMasterSettings915</a> {get}"
				},
				{
				name:"follower &#x2192; <a href=\"#IFollowerSettings915\" onclick=\"SetInterface('IFollowerSettings915', false);return false;\">IFollowerSettings915</a> {get}"
				},
				{
				name:"update &#x2192; <a href=\"#IUpdateSettings915\" onclick=\"SetInterface('IUpdateSettings915', false);return false;\">IUpdateSettings915</a> {get}"
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IInstanceTypeSettings915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				names:
				[
					"Load ()",
					"TryLoad () &#x2192; <a href=\"#ILoadResult915\" onclick=\"SetInterface('ILoadResult915', false);return false;\">ILoadResult915</a>"
				],
				description:"Loads instance type settings for the current SSH Server instance. The 'Try' version of this function returns a result with properties such as whether the operation was successful and a description of any errors."
				},
				{
				names:
				[
					"LoadFromFile (BSTR fileName)",
					"TryLoadFromFile (BSTR fileName) &#x2192; <a href=\"#ILoadResult915\" onclick=\"SetInterface('ILoadResult915', false);return false;\">ILoadResult915</a>"
				],
				description:"Loads SSH Server instance type settings from a binary file. The 'Try' version of this function returns a result with properties such as whether the operation was successful and a description of any errors.",
				parameters:
				[
					{
					parameter:"fileName: Path to a file containing binary instance type settings."
					}
				]
				},
				{
				name:"Save ()",
				description:"Saves currently loaded instance type settings as the new instance type settings for the current SSH Server instance. Cannot be used when instance type settings are password-protected."
				},
				{
				name:"SaveEx (BSTR pass)",
				description:"Saves currently loaded instance type settings as the new instance type settings for the current SSH Server instance. This version of the function must be used when instance type settings are password-protected.",
				parameters:
				[
					{
					parameter:"pass: Password with which the current instance type settings is protected."
					}
				]
				},
				{
				name:"SaveToFile (BSTR fileName)",
				description:"Exports currently loaded instance type settings into a binary file.",
				parameters:
				[
					{
					parameter:"fileName: Path to a file in which to store instance type settings."
					}
				]
				},
				{
				name:"Backup ()",
				description:"Creates a backup of the instance type settings for the current SSH Server instance."
				},
				{
				name:"Lock ()",
				description:"Locks instance type settings for the current SSH Server instance."
				},
				{
				name:"Unlock ()",
				description:"Unlocks instance type settings for the current SSH Server instance."
				},
				{
				name:"Import (BSTR settings)",
				description:"Imports SSH Server instance type settings from a string in a textual format as returned by any Dump function in the settings hierarchy.",
				parameters:
				[
					{
					parameter:"settings: A string with textual instance type settings."
					}
				]
				}
			],
			enums:
			[
				{
				name:"InstanceType915",
				description:"InstanceType_standalone (0): Standalone<br />InstanceType_follower (1): Follower<br />InstanceType_master (2): Master<br />InstanceType_secondaryMaster (3): Secondary master"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IInstances915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IInstance915\" onclick=\"SetInterface('IInstance915', false);return false;\">IInstance915</a>) {get}",
				description:"Allows enumerating installed SSH Server instances and accessing them by index."
				},
				{
				name:"current &#x2192; <a href=\"#IInstance915\" onclick=\"SetInterface('IInstance915', false);return false;\">IInstance915</a>",
				description:"The current SSH Server instance. Null if no instance is selected."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"The number of installed SSH Server instances."
				}
			],
			methods:
			[
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IInstance915\" onclick=\"SetInterface('IInstance915', false);return false;\">IInstance915</a>",
				description:"Returns the instance with the specified index.",
				parameters:
				[
					{
					parameter:"index: Zero-based index of the instance."
					}
				]
				}
			]
			},
			{
			name:"IInterfaceRule915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"intfType &#x2192; <a href=\"#IInterfaceRule915\" onclick=\"ScrollToEnum();return false;\">InterfaceType915</a> {get} {set}",
				defaultValue:"Default value varies depending on context.",
				description:"Type of interface to match. An IPv4 or IPv6 rule will match only addresses of that type; the rule will not match other addresses. A free-form rule can match any type of address."
				},
				{
				name:"ipv4range &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to specify a single IPv4 interface, or a range of interfaces."
				},
				{
				name:"ipv4 &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"0.0.0.0\"",
				description:"The IPv4 interface to match."
				},
				{
				name:"ipv4start &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"0.0.0.0\"",
				description:"The beginning of the IPv4 interface range to match (inclusive)."
				},
				{
				name:"ipv4end &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"0.0.0.0\"",
				description:"The end of the IPv4 interface range to match (inclusive). Must be greater than \"Start IPv4 interface\"."
				},
				{
				name:"ipv6range &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to specify a single IPv6 interface, or a range of interfaces."
				},
				{
				name:"ipv6 &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"::\"",
				description:"The IPv6 interface to match."
				},
				{
				name:"ipv6start &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"::\"",
				description:"The beginning of the IPv6 interface range to match (inclusive)."
				},
				{
				name:"ipv6end &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"::\"",
				description:"The end of the IPv6 interface range to match (inclusive). Must be greater than \"Start IPv6 interface\"."
				},
				{
				name:"freeForm &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"*\"",
				description:"A free-form string pattern that can match any type of interface. The pattern can include wildcard characters. Use * (asterisk) to match any sequence of characters. Use ? (questionmark) to match any single character."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IInterfaceRule915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"InterfaceType915",
				description:"InterfaceType_ipv4 (0): IPv4<br />InterfaceType_ipv6 (1): IPv6<br />InterfaceType_freeForm (3): Free-form<br />InterfaceType_anyIntf (2): Any interface"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IIpBlocking915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"type &#x2192; <a href=\"#IIpBlocking915\" onclick=\"ScrollToEnum();return false;\">AutomaticIpBlocking915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.AutomaticIpBlocking.blockTemporarily",
				description:"Whether the SSH Server should automatically block IP addresses that originate unwanted login attempts, and whether such IP addresses should be blocked temporarily or permanently.\n\nFor addresses blocked temporarily, a list is maintained in the SSH Server process and is reset if the SSH Server restarts.\n\nFor addresses blocked permanently, the SSH Server will automatically alter Client IP address rules under Access control in SSH Server settings. This will cause automatic settings changes and may cause some additional settings backups."
				},
				{
				name:"windowSecs &#x2192; ULONG {get} {set}",
				defaultValue:"default: 300",
				description:"The duration of time, in seconds, to take into account when deciding whether an IP address should be blocked."
				},
				{
				name:"penaltyThreshold &#x2192; ULONG {get} {set}",
				defaultValue:"default: 20",
				description:"An IP address will be blocked if, during any time interval as configured in \"Window duration\", it originates more than this number of login attempts that fail with a penalty.\n\nA successful login from an IP address resets the counter toward this threshold for that IP address.\n\nAn example login attempt that fails with a penalty is a \"password\" authentication request with an invalid user name or password. An example login attempt without penalty is a \"publickey\" authentication request that either uses an invalid user name, or a public key that is not associated with that user name in SSH Server settings.\n\nMost types of failed public key and GSSAPI authentication attempts do not incur penalties because widely used client software will attempt to log into the SSH Server using any and all public keys it can locate on the client computer. In domain environments, such software will also automatically attempt to authenticate using GSSAPI with Kerberos, even if not instructed by the user to do so."
				},
				{
				name:"totalThreshold &#x2192; ULONG {get} {set}",
				defaultValue:"default: 50",
				description:"An IP address will be blocked if it originates more than this number of failed login attempts, with or without penalty, in any time interval as configured in \"Window duration\".\n\nA successful login from an IP address resets the counter toward this threshold for that IP address.\n"
				},
				{
				name:"lockoutMins &#x2192; ULONG {get} {set}",
				defaultValue:"default: 180",
				description:"The number of minutes an IP address will remain blocked after the failed login attempt threshold has been exceeded.\n\nThe list of temporarily blocked addresses is held by the SSH Server service, and is cleared when the SSH Server is restarted."
				},
				{
				name:"subnetBitsIPv4 &#x2192; ULONG {get} {set}",
				defaultValue:"default: 32",
				description:"When an IP address is blocked, the number of significant bits in the originating IPv4 address that will specify the subnet to block.\n\nExample: If the address being blocked is 192.168.12.34, then if this setting is 32, only that exact IP address is blocked. If 24, addresses of the form 192.168.12.* are blocked. If 16, addresses of the form 192.168.* are blocked. If 8, all addresses beginning with 192.* are blocked.\n\nSetting this to 0 will cause all IPv4 addresses to be blocked if any one is blocked."
				},
				{
				name:"subnetBitsIPv6 &#x2192; ULONG {get} {set}",
				defaultValue:"default: 64",
				description:"When an IP address is blocked, the number of significant bits in the originating IPv6 address that will specify the subnet to block.\n\nExample: If the address being blocked is 2001:0db8:85a3:0000:0000:8a2e:0370:7334, then if this setting is 128, only that exact IP address is blocked. If 64, all addresses starting with 2001:0db8:85a3:0000:* are blocked. If 48, all addresses starting with 2001:0db8:85a3:* are blocked.\n\nSetting this to 0 will cause all IPv6 addresses to be temporarily blocked if any one is blocked."
				},
				{
				name:"penalizeNoAuth &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, a penalty will be applied to an IP address each time it originates a connection that makes no authentication attempts, or only makes authentication attempts that are not successful."
				},
				{
				name:"userNameBlacklist &#x2192; <a href=\"#IUserNameBlacklist915\" onclick=\"SetInterface('IUserNameBlacklist915', false);return false;\">IUserNameBlacklist915</a> {get}",
				description:"The SSH Server can automatically block IP addresses of clients that attempt to log in with one of the user names enumerated here. If a login name matches any of the listed user names, the login attempt will fail, and the originating address will be blocked.\n\nIP addresses that match the IP blocking whitelist will not be affected by this setting."
				},
				{
				name:"enablePwAuthWhitelist &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If the password authentication whitelist is enabled, the SSH Server will permit password authentication only with usernames that appear on the whitelist. Any password authentication attempts that use a non-whitelisted username will receive a penalty and be rejected."
				},
				{
				name:"pwAuthWhitelist &#x2192; <a href=\"#IPwAuthWhitelist915\" onclick=\"SetInterface('IPwAuthWhitelist915', false);return false;\">IPwAuthWhitelist915</a> {get}",
				description:"The SSH Server will permit password authentication only with usernames that appear on the whitelist. Any password authentication attempts that use a non-whitelisted username will receive a penalty and be rejected."
				},
				{
				name:"autoWhitelistVirtAccounts &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, virtual accounts that enable password authentication will be automatically whitelisted. "
				},
				{
				name:"ipWhitelist &#x2192; <a href=\"#IWhitelistedAddresses915\" onclick=\"SetInterface('IWhitelistedAddresses915', false);return false;\">IWhitelistedAddresses915</a> {get}",
				description:"A list of IP addresses not affected by automatic IP blocking. Connections from these addresses will not be blocked after failed login attempts, or for using a blacklisted user name, or for password authentication with a user name not on the password authentication whitelist.\n\nThis whitelist affects only automatic IP blocking. Addresses that are whitelisted here can still be blocked manually, either by blocking them permanently using Client IP address rules, or temporarily through the Connections tab of the SSH Server Control Panel.\n\nIf you use this with a non-transparent load balancer, check if you can enable the PROXY protocol. This can be enabled for individual interfaces and ports under \"Bindings and UPnP\". The PROXY protocol allows a non-transparent load balancer to communicate to the SSH Server the IP address of the remote client, so that clients do not appear to connect from the load balancer's IP address."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IIpBlocking915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"AutomaticIpBlocking915",
				description:"AutomaticIpBlocking_doNotBlock (1): Do not block<br />AutomaticIpBlocking_blockTemporarily (2): Block temporarily<br />AutomaticIpBlocking_blockPermanently (3): Block permanently"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IKex915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"curve25519 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support Curve25519 key exchange using SHA-2 256 hashing. This is a variant of Elliptic Curve Diffie-Hellman using the curve well-known as 25519, selected by cryptographers for its presumed security and safety-friendly implementation characteristics.\n\nAt the time of this writing, this is considered a strong key exchange method offering the equivalent of 128-bit symmetric security."
				},
				{
				name:"ecdhSecp256k1 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support Elliptic Curve Diffie-Hellman key exchange over the elliptic curve secp256k1 using SHA-2 256 hashing.\n\nAt the time of this writing, this is considered a strong key exchange method offering the equivalent of 128-bit symmetric security. The curve secp256k1 is the same curve as used for signatures in Bitcoin transactions."
				},
				{
				name:"ecdhNistp256 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support Elliptic Curve Diffie-Hellman key exchange over the elliptic curve nistp256 (secp256r1) using SHA-2 256 hashing.\n\nNIST curves are known to have been generated in a non-transparent manner which permits the possibility that a large number of curves were tried, to settle on a few with unknown hidden characteristics."
				},
				{
				name:"ecdhNistp384 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support Elliptic Curve Diffie-Hellman key exchange over the elliptic curve nistp384 (secp384r1) using SHA-2 384 hashing.\n\nNIST curves are known to have been generated in a non-transparent manner which permits the possibility that a large number of curves were tried, to settle on a few with unknown hidden characteristics."
				},
				{
				name:"ecdhNistp521 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support Elliptic Curve Diffie-Hellman key exchange over the elliptic curve nistp521 (secp521r1) using SHA-2 512 hashing.\n\nNIST curves are known to have been generated in a non-transparent manner which permits the possibility that a large number of curves were tried, to settle on a few with unknown hidden characteristics."
				},
				{
				name:"dhGexMinBits &#x2192; ULONG {get} {set}",
				defaultValue:"default: 2048",
				description:"The smallest DH group size, in bits, that will be made available to a client if a DH key exchange algorithm with group exchange is used. The SSH Server supports four well-known DH groups with sizes 1024, 2048, 3072, and 4096 bits. If a nonsense value is configured, the SSH Server will offer the closest matching group.\n\nThis setting affects the following key exchange methods, which are enabled and disabled separately:\n* diffie-hellman-gex-sha256\n* diffie-hellman-gex-sha1\n* gss-gex-sha1 with Kerberos"
				},
				{
				name:"dhGexMaxBits &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3072",
				description:"The largest DH group size, in bits, that will be made available to a client if a DH key exchange algorithm with group exchange is used. The SSH Server supports five well-known DH groups with sizes 1024, 2048, 3072, and 4096 bits. If a nonsense value is configured, the SSH Server will offer the closest matching group.\n\nThis setting affects the following key exchange methods, which are enabled and disabled separately:\n* diffie-hellman-gex-sha256\n* diffie-hellman-gex-sha1\n* gss-gex-sha1 with Kerberos"
				},
				{
				name:"dhGexSha256 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support Diffie-Hellman key exchange with DH group negotiation using public key-based host authentication and a SHA-2 256-bit key exchange hash. The client specifies the desired size of a DH group, and the server picks a best match. The SSH Server does not generate new groups on the fly, but will choose a well-known group, subject to the client's preferences and the minimum and maximum DH group size configured in this section.\n\nAt the time of this writing, the SHA-2 digest algorithm used by this key exchange method is considered strong."
				},
				{
				name:"dhGexSha1 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to support Diffie-Hellman key exchange with DH group negotiation using public key-based host authentication and a SHA-1 key exchange hash. The client specifies the desired size of a DH group, and the server picks a best match. The SSH Server does not generate new groups on the fly, but will choose a well-known group, subject to the client's preferences and the minimum and maximum DH group size configured in this section.\n\nThe SHA-1 digest algorithm used by this key exchange method is considered weak."
				},
				{
				name:"dhG16Sha512 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to support Diffie-Hellman key exchange using 4096-bit fixed parameters, with public key-based host authentication and a SHA-2 512-bit key exchange hash.\n\nAt the time of this writing, this is considered a strong key exchange method offering the equivalent of 136 to 144-bit symmetric security. The SHA-2 digest used by this algorithm is considered strong.\n\nThis group is disabled by default since it is almost 2x slower than group 15 (3072-bit), but the additional security benefit is low."
				},
				{
				name:"dhG15Sha512 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support Diffie-Hellman key exchange using 3072-bit fixed parameters, with public key-based host authentication and a SHA-2 512-bit key exchange hash.\n\nAt the time of this writing, this is considered a strong key exchange method offering the equivalent of 128-bit symmetric security. The SHA-2 digest used by this algorithm is considered strong."
				},
				{
				name:"dhG14Sha256 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support Diffie-Hellman key exchange using 2048-bit fixed parameters, with public key-based host authentication and a SHA-2 256-bit key exchange hash.\n\nAt the time of this writing, this is considered a medium-strength key exchange method offering the equivalent of 112-bit symmetric security. The SHA-2 digest used by this algorithm is considered strong."
				},
				{
				name:"dhG14Sha1 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to support Diffie-Hellman key exchange using 2048-bit fixed parameters, with public key-based host authentication and a SHA-1 key exchange hash.\n\nAt the time of this writing, this is considered a medium-strength key exchange method offering the equivalent of 112-bit symmetric security. The SHA-1 digest used by this algorithm is considered weak."
				},
				{
				name:"dhG1Sha1 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to support Diffie-Hellman key exchange using 1024-bit fixed parameters, with public key-based host authentication and a SHA-1 key exchange hash.\n\nAt the time of this writing, this is considered a weak key exchange method offering the equivalent of 80-bit symmetric security. Because of the 1024-bit, widely used prime, the method is considered vulnerable against nation-state attackers. Enabling this algorithm is not recommended, unless needed for compatibility with older SSH clients."
				},
				{
				name:"gssGexSha1Krb5 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to support Diffie-Hellman key exchange with DH group negotiation and Kerberos host authentication using a SHA-1 key exchange hash. The client specifies the desired size of a DH group, and the server picks a best match. The SSH Server does not generate new groups on the fly, but will choose a well-known group, subject to the client's preferences and the minimum and maximum DH group size configured in this section.\n\nThe SHA-1 digest used by this algorithm is considered weak.\n\nThis is a key exchange method, and therefore authenticates only the server, not the client. See Access control to configure the use of GSSAPI in client authentication (using NTLM or Kerberos)."
				},
				{
				name:"gssG16Sha512Krb5 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to support Diffie-Hellman key exchange with 4096-bit fixed parameters, using Kerberos host authentication and a SHA-2 512-bit key exchange hash.\n\nAt the time of this writing, this is considered a strong key exchange method offering the equivalent of 136 to 144-bit symmetric security. The SHA-2 digest used by this algorithm is considered strong.\n\nThis group is disabled by default since it is almost 2x slower than group 15 (3072-bit), but the additional security benefit is low.\n\nThis is a key exchange method, and therefore authenticates only the server, not the client. See Access control to configure the use of GSSAPI in client authentication (using NTLM or Kerberos)."
				},
				{
				name:"gssG15Sha512Krb5 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support Diffie-Hellman key exchange with 3072-bit fixed parameters, using Kerberos host authentication and a SHA-2 512-bit key exchange hash.\n\nAt the time of this writing, this is considered a strong key exchange method offering the equivalent of 128-bit symmetric security. The SHA-2 digest used by this algorithm is considered strong.\n\nThis is a key exchange method, and therefore authenticates only the server, not the client. See Access control to configure the use of GSSAPI in client authentication (using NTLM or Kerberos)."
				},
				{
				name:"gssG14Sha256Krb5 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support Diffie-Hellman key exchange with 2048-bit fixed parameters, using Kerberos host authentication and a SHA-2 256-bit key exchange hash.\n\nAt the time of this writing, this is considered a medium-strength key exchange method offering the equivalent of 112-bit symmetric security. The SHA-2 digest used by this algorithm is considered strong.\n\nThis is a key exchange method, and therefore authenticates only the server, not the client. See Access control to configure the use of GSSAPI in client authentication (using NTLM or Kerberos)."
				},
				{
				name:"gssG14Sha1Krb5 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to support Diffie-Hellman key exchange with 2048-bit fixed parameters, using Kerberos host authentication and a SHA-1 key exchange hash.\n\nAt the time of this writing, this is considered a medium-strength key exchange method offering the equivalent of 112-bit symmetric security. The SHA-1 digest used by this algorithm is considered weak.\n\nThis is a key exchange method, and therefore authenticates only the server, not the client. See Access control to configure the use of GSSAPI in client authentication (using NTLM or Kerberos)."
				},
				{
				name:"gssG1Sha1Krb5 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to support Diffie-Hellman key exchange with 1024-bit fixed parameters, using Kerberos host authentication and a SHA-1 key exchange hash.\n\nAt the time of this writing, this is considered a weak key exchange method offering the equivalent of 80-bit symmetric security. Because of the 1024-bit, widely used prime, the method is considered vulnerable against nation-state attackers Enabling this algorithm is not recommended, unless needed for compatibility with older SSH clients.\n\nThis is a key exchange method, and therefore authenticates only the server, not the client. See Access control to configure the use of GSSAPI in client authentication (using NTLM or Kerberos)."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IKex915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IListenInstructions915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"allowListen &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to accept a request for listening which matches this rule."
				},
				{
				name:"overrideListenInterface &#x2192; <a href=\"#IListenInstructions915\" onclick=\"ScrollToEnum();return false;\">OverrideListeningInterface915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OverrideListeningInterface.ifBindFails",
				description:"Whether and when to override the listening interface requested by the SSH client. If enabled, the listening interface will be overridden with the one configured here."
				},
				{
				name:"listenInterface &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"127.0.0.1\"",
				description:"The listening interface with which to override the one requested by the SSH client."
				},
				{
				name:"port &#x2192; ULONG {get} {set}",
				defaultValue:"default: 0",
				description:"If zero (0), the port number requested by the SSH client will be used. If non-zero, the port number with which to override the port requested by the SSH client."
				},
				{
				name:"acceptRules &#x2192; <a href=\"#IAddressAcceptRules915\" onclick=\"SetInterface('IAddressAcceptRules915', false);return false;\">IAddressAcceptRules915</a> {get}",
				description:"Additional accept rules which apply to incoming connections to a listening socket which matches this rule."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IListenInstructions915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"OverrideListeningInterface915",
				description:"OverrideListeningInterface_never (0): Never<br />OverrideListeningInterface_always (1): Always<br />OverrideListeningInterface_ifBindFails (2): If binding fails"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IListenRule915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! intfRule &#x2192; <a href=\"#IInterfaceRule915\" onclick=\"SetInterface('IInterfaceRule915', false);return false;\">IInterfaceRule915</a> {get}",
				description:"Defines the criterion which the listening interface of a listening request must match, in order to match this rule."
				},
				{
				flag:3,
				name:"&#155; ! portRangeRule &#x2192; <a href=\"#IPortRangeRule915\" onclick=\"SetInterface('IPortRangeRule915', false);return false;\">IPortRangeRule915</a> {get}",
				description:"Defines the criterion which the listening port number of a listening request must match, in order to match this rule."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"An optional comment describing the purpose of this rule."
				},
				{
				name:"instr &#x2192; <a href=\"#IListenInstructions915\" onclick=\"SetInterface('IListenInstructions915', false);return false;\">IListenInstructions915</a> {get}",
				description:"Defines what is to be done with a listening request which matches this rule."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IListenRule915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IListeningRules915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IListenRule915\" onclick=\"SetInterface('IListenRule915', false);return false;\">IListenRule915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IListenRule915\" onclick=\"SetInterface('IListenRule915', false);return false;\">IListenRule915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IListeningRules915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IListenRule915\" onclick=\"SetInterface('IListenRule915', false);return false;\">IListenRule915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IListeningRules915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IListenRule915\" onclick=\"SetInterface('IListenRule915', false);return false;\">IListenRule915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IListenRule915\" onclick=\"SetInterface('IListenRule915', false);return false;\">IListenRule915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IListenRule915\" onclick=\"SetInterface('IListenRule915', false);return false;\">IListenRule915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IListenRule915\" onclick=\"SetInterface('IListenRule915', false);return false;\">IListenRule915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IListenRule915\" onclick=\"SetInterface('IListenRule915', false);return false;\">IListenRule915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IListenRule915\" onclick=\"SetInterface('IListenRule915', false);return false;\">IListenRule915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ILoadResult915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"success &#x2192; BOOL {get}",
				description:"True if settings were loaded successfully; false if there were any errors."
				},
				{
				name:"failure &#x2192; BOOL {get}",
				description:"True if there were any errors when loading settings."
				},
				{
				name:"loadResult &#x2192; BOOL {get}",
				description:"True if settings loaded successfully."
				},
				{
				name:"loadError &#x2192; BSTR {get}",
				description:"A description of any errors that occurred while loading settings."
				},
				{
				name:"validationResult &#x2192; BOOL {get}",
				description:"True if settings validated successfully."
				},
				{
				name:"validationError &#x2192; BSTR {get}",
				description:"A description of any settings validation errors."
				},
				{
				name:"secretFailures &#x2192; ULONG {get}",
				description:"If non-zero, the number of instances of sensitive information, such as reversibly-stored passwords, that could not be imported. Any such instances were replaced with blank values. To allow import of sensitive information on another computer, settings must be password-protected when exporting."
				},
				{
				name:"secretSuccess &#x2192; ULONG {get}",
				description:"The number of successfully imported instances of sensitive information, such as reversibly-stored passwords."
				}
			],
			methods:
			[
				{
				name:"Describe () &#x2192; BSTR",
				description:"Describes any load errors as a string. If load was successful, returns an empty string."
				}
			]
			},
			{
			name:"ILogging915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"monitorIpWhitelist &#x2192; <a href=\"#IWhitelistedAddresses915\" onclick=\"SetInterface('IWhitelistedAddresses915', false);return false;\">IWhitelistedAddresses915</a> {get}",
				description:"A list of IP addresses of monitors or load balancers that initiate frequent connections to the SSH Server which are not expected to perform key exchange or authenticate. For connections from these IP addresses, the SSH Server will not log the Info messages I_CONNECT_ACCEPTED and I_CONNECT_DISCONNECTED_NORMALLY, and will instead log Trace versions of these events.\n\nThis means that for \"ping\" style connections originating from whitelisted IP addresses, where the remote application connects and disconnects but does not send any data, no events will be logged unless Trace-level logging is enabled, or the respective Trace events are enabled individually using a log level set to \"Custom events\".\n\nThe SSH Server Control Panel will show these connections on the Connections tab, but will not show connect or disconnect events on the Activity tab, and will not show the associated pop-up notifications.\n\nUsers who use this feature with non-transparent load balancers may also want to enable the PROXY protocol. This can be enabled for individual interfaces and ports under \"Bindings and UPnP\". The PROXY protocol allows a non-transparent load balancer to communicate to the SSH Server the IP address of the remote client, so that clients do not appear to connect from the load balancer's IP address."
				},
				{
				name:"healthMonitoring &#x2192; <a href=\"#IHealthMonitoring915\" onclick=\"SetInterface('IHealthMonitoring915', false);return false;\">IHealthMonitoring915</a> {get}",
				description:"System health monitoring settings for CPU, memory and disk volume space."
				},
				{
				name:"logToEventLog &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If this box is checked, the SSH Server will record below chosen events in the Windows Event Log. Note that critical errors will be recorded in the Event Log regardless of this setting. But all other log messages will be recorded in the Event Log only if this setting is set.\n\nThe events the SSH Server records to the Windows Event Log can be viewed in the Bitvise SSH Server Control Panel, or using the Windows Event Viewer (accessible through Administrative Tools). When viewing events using the Windows Event Viewer, they will appear in the Application section of the event log. The events recorded by the SSH Server can be distinguished from those of other applications by the 'BvSshServer' name in the Source column."
				},
				{
				name:"eventLogLevel &#x2192; <a href=\"#ILogging915\" onclick=\"ScrollToEnum();return false;\">LogLevel_EWI915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.LogLevel_EWI.logLevelEW",
				description:"Each Bitvise SSH Server event belongs to one of five basic types: Error, Warning, Information, Trace, or Debug. This setting determines which types of events the server will log to the Windows Event Log. Selecting \"Custom events\" allows you to include or exclude events on a per-event basis by clicking \"Windows Event Log events\".\n\n\"Warning\" is the highest Windows Event Log level recommended for a production environment. Use text file logging for more detailed logs, especially for diagnostics."
				},
				{
				name:"eventLogEventList &#x2192; <a href=\"#IEventList915\" onclick=\"SetInterface('IEventList915', false);return false;\">IEventList915</a> {get}",
				description:"Clicking this link opens an event list allowing events to be included or excluded from logging on a per-event basis."
				},
				{
				name:"logToFile &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If this box is checked, the server will record chosen events in textual XML log files. Each time when started, the server will create a new logfile with a name in the format BvSshServer-InstanceYYYYMMDD-HHMMSSmmm-ZZZZZ.log, where:\n\n* -Instance is the installed instance name - or none for the default instance;\n* YYYYMMDD is the date the log file was created;\n* HHMMSSmmm is the time the log file was created, including milliseconds;\n* ZZZZZ is the time zone offset.\n\nDuring operation, the server can roll over to a new log file according to settings in this section."
				},
				{
				name:"logFileLevel &#x2192; <a href=\"#ILogging915\" onclick=\"ScrollToEnum();return false;\">LogLevel_EWIT915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.LogLevel_EWIT.logLevelEWI",
				description:"Each SSH Server event belongs to one of five types: Error, Warning, Information, Trace, or Debug. This setting determines which types of events the server will log to the log file. Selecting \"Custom events\" allows you to include or exclude events on a per-event basis using \"Textual log file events\".\n\nWarning: Log levels higher than Info are for diagnostics only. If you leave a higher log level enabled for a prolonged period, it will slow down file transfers and can fill up the disk drive quickly with verbose log files."
				},
				{
				name:"logFileEventList &#x2192; <a href=\"#IEventList915\" onclick=\"SetInterface('IEventList915', false);return false;\">IEventList915</a> {get}",
				description:"Clicking this link opens an event list allowing events to be included or excluded from logging on a per-event basis."
				},
				{
				name:"logFileDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"Logs\"",
				description:"Specifies the directory where the server will write its log files if \"Log to textual log file\" is selected above. If this directory does not exist, it will be created with access permitted only for the Local System account and local administrators. A non-absolute path will be interpreted relative to the Bitvise SSH Server installation directory.\n\nWhile the \"Textual log file directory\" can be a network share, direct logging to a network share is not recommended. A network share connection is much more likely to fail than local logging. A network share may also experience performance issues. Logging to a network share that is having performance issues may severely affect the performance of the SSH Server in non-obvious ways.\n\nIf you wish the log files to ultimately reside on a network share, we recommend: (1) logging to a local directory with frequent log rollover, and (2) setting up a task using Windows Task Scheduler to regularly move closed log files to the network share."
				},
				{
				name:"logFileRestrictedAccess &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"When enabled, the server will create new log files with an access control list that permits access only to the local administrators group and to Local System. When disabled, new log files will get a default access control list inherited from their parent directory."
				},
				{
				name:"logFileWriteCloseTag &#x2192; <a href=\"#ILogging915\" onclick=\"ScrollToEnum();return false;\">LogFileWriteCloseTag915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.LogFileWriteCloseTag.always",
				description:"The SSH Server can write the XML close tag for textual log files in two ways:\n\n- The close tag can be written always, every time a log entry is appended. In this case, you can copy an active log file and it will be valid XML. However, a variety of log analysis software may have trouble monitoring the log file for new entries.\n\n- The close tag can be written only when the log file is closed. In this case, if you copy an active log file, you will need to add a close tag to process it as XML. However, log analysis software will have an easier time monitoring the log file for new entries."
				},
				{
				name:"logFileRolloverBySize &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Specifies whether the server should close the log file and start logging to a new one after reaching a specified maximum log file size."
				},
				{
				name:"logFileRolloverMb &#x2192; ULONG {get} {set}",
				defaultValue:"default: 10",
				description:"The maximum log file size, in megabytes, at which the server should start logging into a new log file."
				},
				{
				name:"logFileRolloverByTime &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Specifies whether the server should close the log file and start logging to a new one each day at specified times."
				},
				{
				name:"logFileRolloverBaseHr &#x2192; BYTE {get} {set}",
				defaultValue:"default: 0",
				description:"Specifies a base hour of day (0 = midnight, 12 = noon, 18 = 6pm) that the server will use as the basis for calculating log file rollover times.\n\nNote that this time is expressed in Coordinated Universal Time (UTC)."
				},
				{
				name:"logFileRolloverRepeatHr &#x2192; BYTE {get} {set}",
				defaultValue:"default: 24",
				description:"The server will roll over the log file every this number of hours, starting with Base time. Valid values are numbers that evenly divide 24.",
				values:"1, 2, 3, 4, 6, 8, 12, 24"
				},
				{
				name:"onLogFileError &#x2192; <a href=\"#ILogging915\" onclick=\"ScrollToEnum();return false;\">OnLogFileError915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnLogFileError.adminOnly",
				description:"This setting configures what the SSH Server should do if it encounters a failure of any type while writing to the textual log file.\n\nWhile rare, the SSH Server can encounter an error while recording a log entry. An error could occur due to a shortage of disk space, loss of connection to a network drive that holds the logs, or other failure.\n\nIf this setting is set to \"Allow connections from administrators only\", logins from non-administrator users will be restricted when a logging failure occurs. The login restriction will be lifted when: a) a log entry was successfully recorded to the textual log file, b) one hour has elapsed since the last textual log file failure, or c) the SSH Server has reloaded its settings."
				},
				{
				name:"severitySuppression &#x2192; ULONG {get} {set}",
				defaultValue:"default: 8",
				description:"After a log message is logged as a warning, its severity will be reduced to informational if it is logged again with similar details within the number of hours configured in this setting."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ILogging915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"LogFileWriteCloseTag915",
				description:"LogFileWriteCloseTag_always (0): Always<br />LogFileWriteCloseTag_onFileClose (1): When file is closed"
				},
				{
				name:"LogLevel_EWI915",
				description:"LogLevel_EWI_logLevelE (0): Errors<br />LogLevel_EWI_logLevelEW (1): Errors, Warnings<br />LogLevel_EWI_logLevelEWI (2): Errors, Warnings, Info<br />LogLevel_EWI_logLevelCustom (9): Custom events"
				},
				{
				name:"LogLevel_EWIT915",
				description:"LogLevel_EWIT_logLevelE (0): Errors<br />LogLevel_EWIT_logLevelEW (1): Errors, Warnings<br />LogLevel_EWIT_logLevelEWI (2): Errors, Warnings, Info<br />LogLevel_EWIT_logLevelEWIT (3): Errors, Warnings, Info, Trace<br />LogLevel_EWIT_logLevelCustom (9): Custom events"
				},
				{
				name:"OnLogFileError915",
				description:"OnLogFileError_continue (0): Continue as normal without logging<br />OnLogFileError_adminOnly (1): Allow connections from administrators only<br />OnLogFileError_stopServer (2): Stop SSH Server"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IMac915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"hmac_sha2_256_etm &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to support data integrity protection using HMAC-SHA2-256 in encrypt-then-MAC mode.\n\nFor clients that do not support strict key exchange, ETM algorithms are vulnerable to the Terrapin man-in-the-middle prefix truncation attack. To avoid this, use these algorithms exclusively with client software which implements strict key exchange. Client software older than December 2023 does not support this."
				},
				{
				name:"hmac_sha2_512_etm &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to support data integrity protection using HMAC-SHA2-512 in encrypt-then-MAC mode.\n\nFor clients that do not support strict key exchange, ETM algorithms are vulnerable to the Terrapin man-in-the-middle prefix truncation attack. To avoid this, use these algorithms exclusively with client software which implements strict key exchange. Client software older than December 2023 does not support this."
				},
				{
				name:"hmac_sha1_etm &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to support data integrity protection using HMAC-SHA1 in encrypt-then-MAC mode.\n\nFor clients that do not support strict key exchange, ETM algorithms are vulnerable to the Terrapin man-in-the-middle prefix truncation attack. To avoid this, use these algorithms exclusively with client software which implements strict key exchange. Client software older than December 2023 does not support this."
				},
				{
				name:"hmac_sha2_256 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support data integrity protection using HMAC-SHA2-256.Support for this algorithm is recommended for interoperability with the widest range of SSH clients."
				},
				{
				name:"hmac_sha2_512 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support data integrity protection using HMAC-SHA2-512."
				},
				{
				name:"hmac_sha1 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support data integrity protection using HMAC-SHA1.\n\nThe SHA-1 algorithm has known issues, but so far remains acceptable for use in data integrity protection. It is necessary for interoperability with many clients."
				},
				{
				name:"hmac_md5 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"This setting is non-functional, but remains for compatibility with scriptable settings in rare situations. The setting will be removed in the next SSH Server feature release.\n\nThe last SSH Server versions which supported hmac-md5 were versions 6.xx."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IMac915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IMaintenancePeriod915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! sunday &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				flag:3,
				name:"&#155; ! monday &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				flag:3,
				name:"&#155; ! tuesday &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				flag:3,
				name:"&#155; ! wednesday &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				flag:3,
				name:"&#155; ! thursday &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				flag:3,
				name:"&#155; ! friday &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				flag:3,
				name:"&#155; ! saturday &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				flag:3,
				name:"&#155; ! startTime &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"0.0.5.100\"",
				description:"When the time period starts (inclusive, local time)."
				},
				{
				flag:3,
				name:"&#155; ! endTime &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"0.0.1.44\"",
				description:"When the time period ends (exclusive, local time). If this is less than or equal to Start time, the time period ends the following day."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IMaintenancePeriod915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IMaintenancePeriods915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IMaintenancePeriod915\" onclick=\"SetInterface('IMaintenancePeriod915', false);return false;\">IMaintenancePeriod915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IMaintenancePeriod915\" onclick=\"SetInterface('IMaintenancePeriod915', false);return false;\">IMaintenancePeriod915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IMaintenancePeriods915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IMaintenancePeriod915\" onclick=\"SetInterface('IMaintenancePeriod915', false);return false;\">IMaintenancePeriod915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IMaintenancePeriods915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IMaintenancePeriod915\" onclick=\"SetInterface('IMaintenancePeriod915', false);return false;\">IMaintenancePeriod915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IMaintenancePeriod915\" onclick=\"SetInterface('IMaintenancePeriod915', false);return false;\">IMaintenancePeriod915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IMaintenancePeriod915\" onclick=\"SetInterface('IMaintenancePeriod915', false);return false;\">IMaintenancePeriod915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IMaintenancePeriod915\" onclick=\"SetInterface('IMaintenancePeriod915', false);return false;\">IMaintenancePeriod915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IMaintenancePeriod915\" onclick=\"SetInterface('IMaintenancePeriod915', false);return false;\">IMaintenancePeriod915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IMaintenancePeriod915\" onclick=\"SetInterface('IMaintenancePeriod915', false);return false;\">IMaintenancePeriod915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IMasterSettings915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"passwordMaster &#x2192; <a href=\"#IPassword915\" onclick=\"SetInterface('IPassword915', false);return false;\">IPassword915</a> {get}",
				description:"This password will need to be provided by follower servers that wish to synchronize configuration from this master."
				},
				{
				name:"allowSyncHostKeys &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, follower servers will be permitted to synchronize their SSH host keys and TLS/SSL certificates from this master. Enabling this setting will reveal the private key component of the master's host keypairs to the followers. The intended use of this feature is for tightly knit configurations, such as clusters, where multiple servers represent the same outward identity."
				},
				{
				name:"allowSyncPwdCache &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, follower servers will be permitted to synchronize their password cache from this master. This will reveal any passwords cached by the master to the followers. The intended use of this feature is for tightly knit configurations, such as clusters."
				},
				{
				name:"allowActCodeSync &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, follower servers will be permitted to synchronize their activation code from this master. This will reveal the SSH Server's activation code to followers."
				},
				{
				name:"followerRefreshTime &#x2192; ULONG {get} {set}",
				defaultValue:"default: 0",
				description:"If non-zero, the master will request followers to connect, on average, only once every specified number of minutes. This setting can be enabled to reduce the load of simultaneous connections on a master with many followers.\n\nThis setting does not apply to secondary masters, but only to followers. Secondary masters will attempt to maintain a permanent connection, but will relay the value of this setting to followers."
				},
				{
				name:"limitBandwidth &#x2192; <a href=\"#IMasterSettings915\" onclick=\"ScrollToEnum();return false;\">BandwidthLimit915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.BandwidthLimit.none",
				description:"Whether to restrict download and upload speeds for connections from followers and secondary masters."
				},
				{
				name:"maxBandwidth &#x2192; ULONG {get} {set}",
				defaultValue:"default: 100",
				description:"The maximal speed with which a follower or secondary master server can transfer data while synchronizing with the master."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IMasterSettings915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"BandwidthLimit915",
				description:"BandwidthLimit_none (1): None<br />BandwidthLimit_mbps (2): MB/s<br />BandwidthLimit_kbps (3): KB/s"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IMonitoredVolume915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"path &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The path to the drive, disk or volume which the SSH Server should monitor. This path needs to be accessible in the security context of the main SSH Server service (usually, Local System)."
				},
				{
				name:"threshold &#x2192; ULONG {get} {set}",
				defaultValue:"default: 1024",
				description:"If available space drops below this threshold, the SSH Server will log the warning W_SYSTEM_MONITOR_LOW_DISK_SPACE. Elsewhere in SSH Server settings, warnings can be configured as triggers for custom actions. For example, a warning can trigger execution of a command, or send an email notification."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IMonitoredVolume915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IMonitoredVolumes915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IMonitoredVolume915\" onclick=\"SetInterface('IMonitoredVolume915', false);return false;\">IMonitoredVolume915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IMonitoredVolume915\" onclick=\"SetInterface('IMonitoredVolume915', false);return false;\">IMonitoredVolume915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IMonitoredVolumes915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IMonitoredVolume915\" onclick=\"SetInterface('IMonitoredVolume915', false);return false;\">IMonitoredVolume915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IMonitoredVolumes915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IMonitoredVolume915\" onclick=\"SetInterface('IMonitoredVolume915', false);return false;\">IMonitoredVolume915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IMonitoredVolume915\" onclick=\"SetInterface('IMonitoredVolume915', false);return false;\">IMonitoredVolume915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IMonitoredVolume915\" onclick=\"SetInterface('IMonitoredVolume915', false);return false;\">IMonitoredVolume915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IMonitoredVolume915\" onclick=\"SetInterface('IMonitoredVolume915', false);return false;\">IMonitoredVolume915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IMonitoredVolume915\" onclick=\"SetInterface('IMonitoredVolume915', false);return false;\">IMonitoredVolume915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IMonitoredVolume915\" onclick=\"SetInterface('IMonitoredVolume915', false);return false;\">IMonitoredVolume915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IMonthGroup915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"jan &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"feb &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"mar &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"apr &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"may &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"jun &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"jul &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"aug &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"sep &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"oct &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"nov &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				},
				{
				name:"dec &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true"
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IMonthGroup915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IMountPointAddressAcceptRules915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IAllowAddressAcceptRule915\" onclick=\"SetInterface('IAllowAddressAcceptRule915', false);return false;\">IAllowAddressAcceptRule915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IAllowAddressAcceptRule915\" onclick=\"SetInterface('IAllowAddressAcceptRule915', false);return false;\">IAllowAddressAcceptRule915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IMountPointAddressAcceptRules915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IAllowAddressAcceptRule915\" onclick=\"SetInterface('IAllowAddressAcceptRule915', false);return false;\">IAllowAddressAcceptRule915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Move (ULONG indexFrom, ULONG indexTo)",
				description:"Moves the entry with the specified zero-based index to the new location within the list."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				names:
				[
					"ImportCsvEx (BSTR separator, BSTR csvData, <a href=\"#IMountPointAddressAcceptRules915\" onclick=\"ScrollToEnum();return false;\">IpListType915</a> type)",
					"TryImportCsvEx (BSTR separator, BSTR csvData, <a href=\"#IMountPointAddressAcceptRules915\" onclick=\"ScrollToEnum();return false;\">IpListType915</a> type) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list of the specified type. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.<br />The following CSV input line formats are accepted for bulk import of blocked or permitted IP addresses:<br /><br />\tIP address,[\"optional description\"]<br />\tDNS name,[\"optional description\"]<br />\tStart-IP,End-IP,[\"optional description\"]<br />\tIP/SignificantBits,[\"optional description\"]<br /><br />An IP address can be either IPv4 or IPv6. Descriptions are optional; if omitted, a default description will be added.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					},
					{
					parameter:"type: Defines the type of the CSV file."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IMountPointAddressAcceptRules915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IAllowAddressAcceptRule915\" onclick=\"SetInterface('IAllowAddressAcceptRule915', false);return false;\">IAllowAddressAcceptRule915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IAllowAddressAcceptRule915\" onclick=\"SetInterface('IAllowAddressAcceptRule915', false);return false;\">IAllowAddressAcceptRule915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IAllowAddressAcceptRule915\" onclick=\"SetInterface('IAllowAddressAcceptRule915', false);return false;\">IAllowAddressAcceptRule915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IAllowAddressAcceptRule915\" onclick=\"SetInterface('IAllowAddressAcceptRule915', false);return false;\">IAllowAddressAcceptRule915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IAllowAddressAcceptRule915\" onclick=\"SetInterface('IAllowAddressAcceptRule915', false);return false;\">IAllowAddressAcceptRule915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IAllowAddressAcceptRule915\" onclick=\"SetInterface('IAllowAddressAcceptRule915', false);return false;\">IAllowAddressAcceptRule915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"IpListType915",
				description:"IpListType_defaultType (0): Default IP list type<br />IpListType_blockedIPs (1): Import blocked IPs<br />IpListType_permittedIPs (2): Import permitted IPs"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IMountPointRootPathWhitelist915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IMountPointRootPathWhitelistEntry915\" onclick=\"SetInterface('IMountPointRootPathWhitelistEntry915', false);return false;\">IMountPointRootPathWhitelistEntry915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IMountPointRootPathWhitelistEntry915\" onclick=\"SetInterface('IMountPointRootPathWhitelistEntry915', false);return false;\">IMountPointRootPathWhitelistEntry915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IMountPointRootPathWhitelist915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IMountPointRootPathWhitelistEntry915\" onclick=\"SetInterface('IMountPointRootPathWhitelistEntry915', false);return false;\">IMountPointRootPathWhitelistEntry915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IMountPointRootPathWhitelist915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IMountPointRootPathWhitelistEntry915\" onclick=\"SetInterface('IMountPointRootPathWhitelistEntry915', false);return false;\">IMountPointRootPathWhitelistEntry915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IMountPointRootPathWhitelistEntry915\" onclick=\"SetInterface('IMountPointRootPathWhitelistEntry915', false);return false;\">IMountPointRootPathWhitelistEntry915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IMountPointRootPathWhitelistEntry915\" onclick=\"SetInterface('IMountPointRootPathWhitelistEntry915', false);return false;\">IMountPointRootPathWhitelistEntry915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IMountPointRootPathWhitelistEntry915\" onclick=\"SetInterface('IMountPointRootPathWhitelistEntry915', false);return false;\">IMountPointRootPathWhitelistEntry915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IMountPointRootPathWhitelistEntry915\" onclick=\"SetInterface('IMountPointRootPathWhitelistEntry915', false);return false;\">IMountPointRootPathWhitelistEntry915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IMountPointRootPathWhitelistEntry915\" onclick=\"SetInterface('IMountPointRootPathWhitelistEntry915', false);return false;\">IMountPointRootPathWhitelistEntry915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IMountPointRootPathWhitelistEntry915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! mountPointRootPath &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The path or prefix to a Windows filesystem folder or network share which delegated administrators will be allowed to configure as a Real root path in settings for virtual filesystem mount points.\n\nExample - whitelisting the path \"C:\\SftpRoot\\GroupA\\\" will allow delegated administrators to configure real root paths such as:\n\nC:\\SftpRoot\\GroupA\\\nC:\\SftpRoot\\GroupA\\UserA\\\nC:\\SftpRoot\\GroupA\\UserB\\\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IMountPointRootPathWhitelistEntry915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IMoveCompletedUploads915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"enabled &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether the SSH Server should move files that the client fully uploaded. A file is considered fully uploaded if the client wrote to the file, and then properly closed the file before disconnecting or closing the SFTP channel.\n\nThe move operation will activate only for mount points backed by the Windows filesystem. These are mount points that use the provider FlowSfsWin.\n\nIf an On-upload command is also configured, the On-upload command will run after the file is moved. In this case, the environment variable SSHUPLOADFILE will contain the moved-to path of the file. The environment variable SSHUPLOADFILEORIG will contain the original upload path."
				},
				{
				name:"destinationDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The destination directory where fully uploaded files will be moved. The destination directory can be on a different volume and may be a UNC path.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"onExist &#x2192; <a href=\"#IMoveCompletedUploads915\" onclick=\"ScrollToEnum();return false;\">OnDestinationExist915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnDestinationExist.appendSuffix",
				description:"What the move operation should do if the destination directory already contains a file with the same filename as a file that is being moved."
				},
				{
				name:"onFailure &#x2192; <a href=\"#IMoveCompletedUploads915\" onclick=\"ScrollToEnum();return false;\">OnMoveCompletedUploadFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnMoveCompletedUploadFailure.runOnUploadCmd",
				description:"Whether the On-upload command should still execute if moving a file fails."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IMoveCompletedUploads915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"OnDestinationExist915",
				description:"OnDestinationExist_replace (0): Replace destination file<br />OnDestinationExist_appendSuffix (1): Append suffix to moved filename<br />OnDestinationExist_abort (2): Abort move operation"
				},
				{
				name:"OnMoveCompletedUploadFailure915",
				description:"OnMoveCompletedUploadFailure_runOnUploadCmd (0): Run On-upload command if configured<br />OnMoveCompletedUploadFailure_doNotRunOnUploadCmd (1): Do not run On-upload command"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IMoveCompletedUploadsWithDefault915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"useDefault &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If disabled, the SSH Server will use the move operation settings configured here. Otherwise, the SSH Server will use move operation settings from the group settings entry from which the user receives default group settings."
				},
				{
				name:"enabled &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether the SSH Server should move files that the client fully uploaded. A file is considered fully uploaded if the client wrote to the file, and then properly closed the file before disconnecting or closing the SFTP channel.\n\nThe move operation will activate only for mount points backed by the Windows filesystem. These are mount points that use the provider FlowSfsWin.\n\nIf an On-upload command is also configured, the On-upload command will run after the file is moved. In this case, the environment variable SSHUPLOADFILE will contain the moved-to path of the file. The environment variable SSHUPLOADFILEORIG will contain the original upload path."
				},
				{
				name:"destinationDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The destination directory where fully uploaded files will be moved. The destination directory can be on a different volume and may be a UNC path.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"onExist &#x2192; <a href=\"#IMoveCompletedUploadsWithDefault915\" onclick=\"ScrollToEnum();return false;\">OnDestinationExist915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnDestinationExist.appendSuffix",
				description:"What the move operation should do if the destination directory already contains a file with the same filename as a file that is being moved."
				},
				{
				name:"onFailure &#x2192; <a href=\"#IMoveCompletedUploadsWithDefault915\" onclick=\"ScrollToEnum();return false;\">OnMoveCompletedUploadFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnMoveCompletedUploadFailure.runOnUploadCmd",
				description:"Whether the On-upload command should still execute if moving a file fails."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IMoveCompletedUploadsWithDefault915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"OnDestinationExist915",
				description:"OnDestinationExist_replace (0): Replace destination file<br />OnDestinationExist_appendSuffix (1): Append suffix to moved filename<br />OnDestinationExist_abort (2): Abort move operation"
				},
				{
				name:"OnMoveCompletedUploadFailure915",
				description:"OnMoveCompletedUploadFailure_runOnUploadCmd (0): Run On-upload command if configured<br />OnMoveCompletedUploadFailure_doNotRunOnUploadCmd (1): Do not run On-upload command"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"INetworkShareAccountSettings915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"mapRemoteHomeDir &#x2192; <a href=\"#INetworkShareAccountSettings915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether a remote home directory, if any, should be mapped to a local drive when the user logs in through the SSH Server. This is only relevant for domain accounts which have a remote home directory configured in their Active Directory profile.\n\nEnabling this setting is not recommended for accounts using Kerberos authentication. When using Kerberos without delegation, mapping the remote home directory will fail, blocking SSH login with a 20-second delay.\n\nCauses Windows profile loading: If this setting is enabled, then when a Windows logon session is created for this user, the SSH Server will always load the Windows profile associated with the user's account. Otherwise - if this and other settings that cause profile loading are disabled - the Windows profile will be loaded only if the user opens a terminal session or sends an exec request."
				},
				{
				name:"useGroupHomeDirConnStgs &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the home directory connection settings configured in group settings; or the settings defined here for the account. Unless configured differently, group settings defer to server-wide defaults configured in the Sessions section of settings."
				},
				{
				name:"maxMapHomeDirWaitTimeSec &#x2192; ULONG {get} {set}",
				defaultValue:"default: 20",
				description:"The maximum number of seconds to wait for mapping a remote home directory to succeed, over one or more total attempts."
				},
				{
				name:"maxHomeDirAttempts &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3",
				description:"The maximum number of times the SSH Server should try to connect to a remote home directory."
				},
				{
				name:"homeDirRetryDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 1000",
				description:"If an initial attempt to connect to a remote home directory did not succeed, the number of milliseconds to wait before retrying."
				},
				{
				name:"onMapHomeDirFailure &#x2192; <a href=\"#INetworkShareAccountSettings915\" onclick=\"ScrollToEnum();return false;\">OnShareConnectFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnShareConnectFailure.continue",
				description:"The action to take if all configured attempts to map a remote home directory failed, or if the attempts are taking longer than the time configured in Max map home directory wait time.\n\nIf the SSH Server is the main way this computer is accessed, do not set this to \"Disconnect\" for administrator accounts. This can lock out the administrator if the home directory becomes inaccessible."
				},
				{
				name:"mapRememberedShares &#x2192; <a href=\"#INetworkShareAccountSettings915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether the SSH Server should map network drives for which Reconnect at logon was selected in Windows Explorer for this user.\n\nCauses Windows profile loading: If this setting is enabled, then when a Windows logon session is created for this user, the SSH Server will always load the Windows profile associated with the user's account. Otherwise - if this and other settings that cause profile loading are disabled - the Windows profile will be loaded only if the user opens a terminal session or sends an exec request."
				},
				{
				name:"onRememberedSharesListFailure &#x2192; <a href=\"#INetworkShareAccountSettings915\" onclick=\"ScrollToEnum();return false;\">OnRememberedSharesListFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnRememberedSharesListFailure.defaultValue",
				description:"What to do if the SSH Server fails to list remembered shares. Possible causes include, but are not limited to:\n\n- The SSH Server may be unable to load the user's Windows profile which stores information about remembered shares.\n\n- Windows may load a temporary profile if the user's profile is corrupted. The temporary profile will not contain information about the user's remembered shares.\n\nIf the SSH Server is the main way this computer is accessed, do not set this to \"Disconnect\" for administrator accounts. This can lock out the administrator if a configured share becomes inaccessible."
				},
				{
				name:"inheritShares &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether the account should inherit Windows file shares configured in group settings."
				},
				{
				name:"inheritAllShares &#x2192; <a href=\"#INetworkShareAccountSettings915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"If enabled, the account will inherit Windows file shares from Windows group settings entries for all groups of which the user is a member. If disabled, the account will inherit shares only from the single Windows group settings entry from which other account settings are inherited."
				},
				{
				name:"useGroupShareConnStgs &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the default share connection settings configured in group settings; or the settings defined here for the account. Unless configured differently, group settings themselves defer to server-wide defaults configured in the Sessions section."
				},
				{
				name:"mapNextShareDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 100",
				description:"The number of milliseconds to wait before initiating the next network share connection if the previous one has not yet succeeded or failed. Only used when multiple Windows file shares are configured."
				},
				{
				name:"maxTotalShareWaitTimeSec &#x2192; ULONG {get} {set}",
				defaultValue:"default: 11",
				description:"The maximum number of seconds to wait for a configured Windows file share connection to succeed, over one or more total attempts."
				},
				{
				name:"maxShareConnectAttempts &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3",
				description:"The maximum number of times the SSH Server should try to connect to a configured Windows file share."
				},
				{
				name:"shareConnectRetryDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 1000",
				description:"If an initial attempt to connect to a configured Windows file share did not succeed, the number of milliseconds to wait before retrying."
				},
				{
				name:"onShareConnectFailure &#x2192; <a href=\"#INetworkShareAccountSettings915\" onclick=\"ScrollToEnum();return false;\">OnShareConnectFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnShareConnectFailure.continue",
				description:"The action to take if all configured attempts to connect to a Windows file share failed, or if the attempts are taking longer than the time configured in Max total share wait time.\nIf the SSH Server is the main way this computer is accessed, do not set this to \"Disconnect\" for administrator accounts. This can lock out the administrator if a configured share becomes inaccessible."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#INetworkShareAccountSettings915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"DefaultGroupYesNo915",
				description:"DefaultGroupYesNo_defaultValue (0): Use group default<br />DefaultGroupYesNo_yes (1): Yes<br />DefaultGroupYesNo_no (2): No"
				},
				{
				name:"OnRememberedSharesListFailure915",
				description:"OnRememberedSharesListFailure_defaultValue (0): Use group default<br />OnRememberedSharesListFailure_continue (1): Continue connection<br />OnRememberedSharesListFailure_disconnect (2): Disconnect"
				},
				{
				name:"OnShareConnectFailure915",
				description:"OnShareConnectFailure_continue (0): Continue connection<br />OnShareConnectFailure_disconnect (1): Disconnect"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"INetworkShareGroupSettings915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"mapRemoteHomeDir &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether a remote home directory, if any, should be mapped to a local drive when the user logs in through the SSH Server. This is only relevant for domain accounts which have a remote home directory configured in their Active Directory profile.\n\nEnabling this setting is not recommended for accounts using Kerberos authentication. When using Kerberos without delegation, mapping the remote home directory will fail, blocking SSH login with a 20-second delay.\n\nCauses Windows profile loading: If this setting is enabled, then when a Windows logon session is created for this user, the SSH Server will always load the Windows profile associated with the user's account. Otherwise - if this and other settings that cause profile loading are disabled - the Windows profile will be loaded only if the user opens a terminal session or sends an exec request."
				},
				{
				name:"useGlobalHomeDirConnStgs &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether to use the server-wide home directory connection settings configured in the Sessions section; or the settings defined here for the group."
				},
				{
				name:"maxMapHomeDirWaitTimeSec &#x2192; ULONG {get} {set}",
				defaultValue:"default: 20",
				description:"The maximum number of seconds to wait for mapping a remote home directory to succeed, over one or more total attempts."
				},
				{
				name:"maxHomeDirAttempts &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3",
				description:"The maximum number of times the SSH Server should try to connect to a remote home directory."
				},
				{
				name:"homeDirRetryDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 1000",
				description:"If an initial attempt to connect to a remote home directory did not succeed, the number of milliseconds to wait before retrying."
				},
				{
				name:"onMapHomeDirFailure &#x2192; <a href=\"#INetworkShareGroupSettings915\" onclick=\"ScrollToEnum();return false;\">OnShareConnectFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnShareConnectFailure.continue",
				description:"The action to take if all configured attempts to map a remote home directory failed, or if the attempts are taking longer than the time configured in Max map home directory wait time.\n\nIf the SSH Server is the main way this computer is accessed, do not set this to \"Disconnect\" for administrator accounts. This can lock out the administrator if the home directory becomes inaccessible."
				},
				{
				name:"mapRememberedShares &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"For members of this group whose individual settings are not defined differently, whether the SSH Server should map network drives for which Reconnect at logon was selected in Windows Explorer.\n\nCauses Windows profile loading: If this setting is enabled, then when a Windows logon session is created for this user, the SSH Server will always load the Windows profile associated with the user's account. Otherwise - if this and other settings that cause profile loading are disabled - the Windows profile will be loaded only if the user opens a terminal session or sends an exec request."
				},
				{
				name:"onRememberedSharesListFailure &#x2192; <a href=\"#INetworkShareGroupSettings915\" onclick=\"ScrollToEnum();return false;\">OnRememberedSharesListFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnRememberedSharesListFailure.continue",
				description:"For members of this group whose individual settings are not defined differently, the action the SSH Server should take if it fails to list remembered shares.\n\nWhat to do if the SSH Server fails to list remembered shares. Possible causes include, but are not limited to:\n\n- The SSH Server may be unable to load the user's Windows profile which stores information about remembered shares.\n\n- Windows may load a temporary profile if the user's profile is corrupted. The temporary profile will not contain information about the user's remembered shares.\n\nIf the SSH Server is the main way this computer is accessed, do not set this to \"Disconnect\" for administrator accounts. This can lock out the administrator if a configured share becomes inaccessible."
				},
				{
				name:"inheritAllShares &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"For members of this group whose individual settings are not defined differently, whether the account will inherit Windows file shares from this group only, or also from group settings entries for other Windows groups of which the user is a member."
				},
				{
				name:"useGlobalShareConnStgs &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether to use server-wide share connection settings configured in the Sessions section; or the settings configured here for the group."
				},
				{
				name:"mapNextShareDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 100",
				description:"The number of milliseconds to wait before initiating the next network share connection if the previous one has not yet succeeded or failed. Only used when multiple Windows file shares are configured."
				},
				{
				name:"maxTotalShareWaitTimeSec &#x2192; ULONG {get} {set}",
				defaultValue:"default: 11",
				description:"The maximum number of seconds to wait for a configured Windows file share connection to succeed, over one or more total attempts."
				},
				{
				name:"maxShareConnectAttempts &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3",
				description:"The maximum number of times the SSH Server should try to connect to a configured Windows file share."
				},
				{
				name:"shareConnectRetryDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 1000",
				description:"If an initial attempt to connect to a configured Windows file share did not succeed, the number of milliseconds to wait before retrying."
				},
				{
				name:"onShareConnectFailure &#x2192; <a href=\"#INetworkShareGroupSettings915\" onclick=\"ScrollToEnum();return false;\">OnShareConnectFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnShareConnectFailure.continue",
				description:"The action to take if all configured attempts to connect to a Windows file share failed, or if the attempts are taking longer than the time configured in Max total share wait time.\nIf the SSH Server is the main way this computer is accessed, do not set this to \"Disconnect\" for administrator accounts. This can lock out the administrator if a configured share becomes inaccessible."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#INetworkShareGroupSettings915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"OnRememberedSharesListFailure915",
				description:"OnRememberedSharesListFailure_continue (1): Continue connection<br />OnRememberedSharesListFailure_disconnect (2): Disconnect"
				},
				{
				name:"OnShareConnectFailure915",
				description:"OnShareConnectFailure_continue (0): Continue connection<br />OnShareConnectFailure_disconnect (1): Disconnect"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"INetworkShareSettings915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"maxMapHomeDirWaitTimeSec &#x2192; ULONG {get} {set}",
				defaultValue:"default: 20",
				description:"The maximum number of seconds to wait for mapping a remote home directory to succeed, over one or more total attempts."
				},
				{
				name:"maxHomeDirAttempts &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3",
				description:"The maximum number of times the SSH Server should try to connect to a remote home directory."
				},
				{
				name:"homeDirRetryDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 1000",
				description:"If an initial attempt to connect to a remote home directory did not succeed, the number of milliseconds to wait before retrying."
				},
				{
				name:"onMapHomeDirFailure &#x2192; <a href=\"#INetworkShareSettings915\" onclick=\"ScrollToEnum();return false;\">OnShareConnectFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnShareConnectFailure.continue",
				description:"The action to take if all configured attempts to map a remote home directory failed, or if the attempts are taking longer than the time configured in Max map home directory wait time.\n\nIf the SSH Server is the main way this computer is accessed, do not set this to \"Disconnect\" for administrator accounts. This can lock out the administrator if the home directory becomes inaccessible."
				},
				{
				name:"mapNextShareDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 100",
				description:"The number of milliseconds to wait before initiating the next network share connection if the previous one has not yet succeeded or failed. Only used when multiple Windows file shares are configured."
				},
				{
				name:"maxTotalShareWaitTimeSec &#x2192; ULONG {get} {set}",
				defaultValue:"default: 11",
				description:"The maximum number of seconds to wait for a configured Windows file share connection to succeed, over one or more total attempts."
				},
				{
				name:"maxShareConnectAttempts &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3",
				description:"The maximum number of times the SSH Server should try to connect to a configured Windows file share."
				},
				{
				name:"shareConnectRetryDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 1000",
				description:"If an initial attempt to connect to a configured Windows file share did not succeed, the number of milliseconds to wait before retrying."
				},
				{
				name:"onShareConnectFailure &#x2192; <a href=\"#INetworkShareSettings915\" onclick=\"ScrollToEnum();return false;\">OnShareConnectFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnShareConnectFailure.continue",
				description:"The action to take if all configured attempts to connect to a Windows file share failed, or if the attempts are taking longer than the time configured in Max total share wait time.\nIf the SSH Server is the main way this computer is accessed, do not set this to \"Disconnect\" for administrator accounts. This can lock out the administrator if a configured share becomes inaccessible."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#INetworkShareSettings915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"OnShareConnectFailure915",
				description:"OnShareConnectFailure_continue (0): Continue connection<br />OnShareConnectFailure_disconnect (1): Disconnect"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"INetworkShareTaskProfileSettings915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"mapRemoteHomeDir &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether a remote home directory, if any, should be mapped to a local drive when a Windows logon session is created under this task profile.\n\nEnabling this setting is not recommended for accounts using Kerberos authentication. When using Kerberos without delegation, mapping the remote home directory will fail, blocking SSH login with a 20-second delay.\n\nCauses Windows profile loading: If this setting is enabled, then when a Windows logon session is created under this task profile, the SSH Server will always load the Windows profile associated with the Windows account that provides the security context."
				},
				{
				name:"useGlobalHomeDirConnStgs &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the home directory connection settings configured server-wide in the Sessions section; or the settings defined here for the task profile."
				},
				{
				name:"maxMapHomeDirWaitTimeSec &#x2192; ULONG {get} {set}",
				defaultValue:"default: 20",
				description:"The maximum number of seconds to wait for mapping a remote home directory to succeed, over one or more total attempts."
				},
				{
				name:"maxHomeDirAttempts &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3",
				description:"The maximum number of times the SSH Server should try to connect to a remote home directory."
				},
				{
				name:"homeDirRetryDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 1000",
				description:"If an initial attempt to connect to a remote home directory did not succeed, the number of milliseconds to wait before retrying."
				},
				{
				name:"mapRememberedShares &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"When a Windows logon session is created for tasks under this profile, whether the SSH Server should map network drives for which Reconnect at logon was selected in Windows Explorer under the Windows account that provides the security context.\n\nCauses Windows profile loading: If this setting is enabled, then when a Windows logon session is created under this task profile, the SSH Server will always load the Windows profile associated with the Windows account that provides the security context."
				},
				{
				name:"useGlobalShareConnStgs &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use server-wide share connection settings configured in the Sessions section; or the settings configured here for the task profile."
				},
				{
				name:"mapNextShareDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 100",
				description:"The number of milliseconds to wait before initiating the next network share connection if the previous one has not yet succeeded or failed. Only used when multiple Windows file shares are configured."
				},
				{
				name:"maxTotalShareWaitTimeSec &#x2192; ULONG {get} {set}",
				defaultValue:"default: 11",
				description:"The maximum number of seconds to wait for a configured Windows file share connection to succeed, over one or more total attempts."
				},
				{
				name:"maxShareConnectAttempts &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3",
				description:"The maximum number of times the SSH Server should try to connect to a configured Windows file share."
				},
				{
				name:"shareConnectRetryDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 1000",
				description:"If an initial attempt to connect to a configured Windows file share did not succeed, the number of milliseconds to wait before retrying."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#INetworkShareTaskProfileSettings915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"INetworkShareVirtAccountSettings915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"mapRemoteHomeDir &#x2192; <a href=\"#INetworkShareVirtAccountSettings915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"This setting is related to the Windows account which provides the security context underlying the virtual account to which this setting applies.\n\nWhether a remote home directory, if any, should be mapped to a local drive when the user logs in through the SSH Server. This is only relevant for domain accounts which have a remote home directory configured in their Active Directory profile.\n\nEnabling this setting is not recommended for accounts using Kerberos authentication. When using Kerberos without delegation, mapping the remote home directory will fail, blocking SSH login with a 20-second delay.\n\nCauses Windows profile loading: If this setting is enabled, then when a Windows logon session is created for this user, the SSH Server will always load the Windows profile associated with the user's account. Otherwise - if this and other settings that cause profile loading are disabled - the Windows profile will be loaded only if the user opens a terminal session or sends an exec request."
				},
				{
				name:"useGroupHomeDirConnStgs &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the home directory connection settings configured in group settings; or the settings defined here for the account. Unless configured differently, group settings defer to server-wide defaults configured in the Sessions section of settings."
				},
				{
				name:"maxMapHomeDirWaitTimeSec &#x2192; ULONG {get} {set}",
				defaultValue:"default: 20",
				description:"The maximum number of seconds to wait for mapping a remote home directory to succeed, over one or more total attempts."
				},
				{
				name:"maxHomeDirAttempts &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3",
				description:"The maximum number of times the SSH Server should try to connect to a remote home directory."
				},
				{
				name:"homeDirRetryDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 1000",
				description:"If an initial attempt to connect to a remote home directory did not succeed, the number of milliseconds to wait before retrying."
				},
				{
				name:"onMapHomeDirFailure &#x2192; <a href=\"#INetworkShareVirtAccountSettings915\" onclick=\"ScrollToEnum();return false;\">OnShareConnectFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnShareConnectFailure.continue",
				description:"The action to take if all configured attempts to map a remote home directory failed, or if the attempts are taking longer than the time configured in Max map home directory wait time.\n\nIf the SSH Server is the main way this computer is accessed, do not set this to \"Disconnect\" for administrator accounts. This can lock out the administrator if the home directory becomes inaccessible."
				},
				{
				name:"mapRememberedShares &#x2192; <a href=\"#INetworkShareVirtAccountSettings915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"This setting is related to the Windows account which provides the security context underlying the virtual account to which this setting applies.\n\nWhether the SSH Server should map network drives for which Reconnect at logon was selected in Windows Explorer for this user.\n\nCauses Windows profile loading: If this setting is enabled, then when a Windows logon session is created for this user, the SSH Server will always load the Windows profile associated with the user's account. Otherwise - if this and other settings that cause profile loading are disabled - the Windows profile will be loaded only if the user opens a terminal session or sends an exec request."
				},
				{
				name:"onRememberedSharesListFailure &#x2192; <a href=\"#INetworkShareVirtAccountSettings915\" onclick=\"ScrollToEnum();return false;\">OnRememberedSharesListFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnRememberedSharesListFailure.defaultValue",
				description:"This setting is related to the Windows account which provides the security context underlying the virtual account to which this setting applies.\n\nWhat to do if the SSH Server fails to list remembered shares. Possible causes include, but are not limited to:\n\n- The SSH Server may be unable to load the user's Windows profile which stores information about remembered shares.\n\n- Windows may load a temporary profile if the user's profile is corrupted. The temporary profile will not contain information about the user's remembered shares.\n\nIf the SSH Server is the main way this computer is accessed, do not set this to \"Disconnect\" for administrator accounts. This can lock out the administrator if a configured share becomes inaccessible."
				},
				{
				name:"inheritShares &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether the account should inherit Windows file shares configured in group settings."
				},
				{
				name:"useGroupShareConnStgs &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the default share connection settings configured in group settings; or the settings defined here for the account. Unless configured differently, group settings themselves defer to server-wide defaults configured in the Sessions section."
				},
				{
				name:"mapNextShareDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 100",
				description:"The number of milliseconds to wait before initiating the next network share connection if the previous one has not yet succeeded or failed. Only used when multiple Windows file shares are configured."
				},
				{
				name:"maxTotalShareWaitTimeSec &#x2192; ULONG {get} {set}",
				defaultValue:"default: 11",
				description:"The maximum number of seconds to wait for a configured Windows file share connection to succeed, over one or more total attempts."
				},
				{
				name:"maxShareConnectAttempts &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3",
				description:"The maximum number of times the SSH Server should try to connect to a configured Windows file share."
				},
				{
				name:"shareConnectRetryDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 1000",
				description:"If an initial attempt to connect to a configured Windows file share did not succeed, the number of milliseconds to wait before retrying."
				},
				{
				name:"onShareConnectFailure &#x2192; <a href=\"#INetworkShareVirtAccountSettings915\" onclick=\"ScrollToEnum();return false;\">OnShareConnectFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnShareConnectFailure.continue",
				description:"The action to take if all configured attempts to connect to a Windows file share failed, or if the attempts are taking longer than the time configured in Max total share wait time.\nIf the SSH Server is the main way this computer is accessed, do not set this to \"Disconnect\" for administrator accounts. This can lock out the administrator if a configured share becomes inaccessible."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#INetworkShareVirtAccountSettings915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"DefaultGroupYesNo915",
				description:"DefaultGroupYesNo_defaultValue (0): Use group default<br />DefaultGroupYesNo_yes (1): Yes<br />DefaultGroupYesNo_no (2): No"
				},
				{
				name:"OnRememberedSharesListFailure915",
				description:"OnRememberedSharesListFailure_defaultValue (0): Use group default<br />OnRememberedSharesListFailure_continue (1): Continue connection<br />OnRememberedSharesListFailure_disconnect (2): Disconnect"
				},
				{
				name:"OnShareConnectFailure915",
				description:"OnShareConnectFailure_continue (0): Continue connection<br />OnShareConnectFailure_disconnect (1): Disconnect"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"INetworkShareVirtGroupSettings915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"mapRemoteHomeDir &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"This setting is related to the Windows account which provides the security context underlying the virtual account to which this setting applies.\n\nFor members of this group whose individual settings are not defined differently, whether a remote home directory, if any, should be mapped to a local drive when the user logs in through the SSH Server. This is only relevant for domain accounts which have a remote home directory configured in their Active Directory profile.\n\nEnabling this setting is not recommended for accounts using Kerberos authentication. When using Kerberos without delegation, mapping the remote home directory will fail, blocking SSH login with a 20-second delay.\n\nCauses Windows profile loading: If this setting is enabled, then when a Windows logon session is created for this user, the SSH Server will always load the Windows profile associated with the user's account. Otherwise - if this and other settings that cause profile loading are disabled - the Windows profile will be loaded only if the user opens a terminal session or sends an exec request."
				},
				{
				name:"useGlobalHomeDirConnStgs &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether to use the server-wide home directory connection settings configured in the Sessions section; or the settings defined here for the group."
				},
				{
				name:"maxMapHomeDirWaitTimeSec &#x2192; ULONG {get} {set}",
				defaultValue:"default: 20",
				description:"The maximum number of seconds to wait for mapping a remote home directory to succeed, over one or more total attempts."
				},
				{
				name:"maxHomeDirAttempts &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3",
				description:"The maximum number of times the SSH Server should try to connect to a remote home directory."
				},
				{
				name:"homeDirRetryDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 1000",
				description:"If an initial attempt to connect to a remote home directory did not succeed, the number of milliseconds to wait before retrying."
				},
				{
				name:"onMapHomeDirFailure &#x2192; <a href=\"#INetworkShareVirtGroupSettings915\" onclick=\"ScrollToEnum();return false;\">OnShareConnectFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnShareConnectFailure.continue",
				description:"The action to take if all configured attempts to map a remote home directory failed, or if the attempts are taking longer than the time configured in Max map home directory wait time.\n\nIf the SSH Server is the main way this computer is accessed, do not set this to \"Disconnect\" for administrator accounts. This can lock out the administrator if the home directory becomes inaccessible."
				},
				{
				name:"mapRememberedShares &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"This setting is related to the Windows account which provides the security context underlying the virtual account to which this setting applies.\n\nFor members of this group whose individual settings are not defined differently, whether the SSH Server should map network drives for which Reconnect at logon was selected in Windows Explorer.\n\nCauses Windows profile loading: If this setting is enabled, then when a Windows logon session is created for this user, the SSH Server will always load the Windows profile associated with the user's account. Otherwise - if this and other settings that cause profile loading are disabled - the Windows profile will be loaded only if the user opens a terminal session or sends an exec request."
				},
				{
				name:"onRememberedSharesListFailure &#x2192; <a href=\"#INetworkShareVirtGroupSettings915\" onclick=\"ScrollToEnum();return false;\">OnRememberedSharesListFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnRememberedSharesListFailure.continue",
				description:"This setting is related to the Windows account which provides the security context underlying the virtual account to which this setting applies.\n\nFor members of this group whose individual settings are not defined differently, the action the SSH Server should take if it fails to list remembered shares.\n\nWhat to do if the SSH Server fails to list remembered shares. Possible causes include, but are not limited to:\n\n- The SSH Server may be unable to load the user's Windows profile which stores information about remembered shares.\n\n- Windows may load a temporary profile if the user's profile is corrupted. The temporary profile will not contain information about the user's remembered shares.\n\nIf the SSH Server is the main way this computer is accessed, do not set this to \"Disconnect\" for administrator accounts. This can lock out the administrator if a configured share becomes inaccessible."
				},
				{
				name:"useGlobalShareConnStgs &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether to use server-wide share connection settings configured in the Sessions section; or the settings configured here for the group."
				},
				{
				name:"mapNextShareDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 100",
				description:"The number of milliseconds to wait before initiating the next network share connection if the previous one has not yet succeeded or failed. Only used when multiple Windows file shares are configured."
				},
				{
				name:"maxTotalShareWaitTimeSec &#x2192; ULONG {get} {set}",
				defaultValue:"default: 11",
				description:"The maximum number of seconds to wait for a configured Windows file share connection to succeed, over one or more total attempts."
				},
				{
				name:"maxShareConnectAttempts &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3",
				description:"The maximum number of times the SSH Server should try to connect to a configured Windows file share."
				},
				{
				name:"shareConnectRetryDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 1000",
				description:"If an initial attempt to connect to a configured Windows file share did not succeed, the number of milliseconds to wait before retrying."
				},
				{
				name:"onShareConnectFailure &#x2192; <a href=\"#INetworkShareVirtGroupSettings915\" onclick=\"ScrollToEnum();return false;\">OnShareConnectFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnShareConnectFailure.continue",
				description:"The action to take if all configured attempts to connect to a Windows file share failed, or if the attempts are taking longer than the time configured in Max total share wait time.\nIf the SSH Server is the main way this computer is accessed, do not set this to \"Disconnect\" for administrator accounts. This can lock out the administrator if a configured share becomes inaccessible."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#INetworkShareVirtGroupSettings915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"OnRememberedSharesListFailure915",
				description:"OnRememberedSharesListFailure_continue (1): Continue connection<br />OnRememberedSharesListFailure_disconnect (2): Disconnect"
				},
				{
				name:"OnShareConnectFailure915",
				description:"OnShareConnectFailure_continue (0): Continue connection<br />OnShareConnectFailure_disconnect (1): Disconnect"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IPassword915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"crypt &#x2192; BSTR {get} {set}",
				description:"Retrieves or sets the password in ciphertext."
				},
				{
				name:"isSet &#x2192; BOOL {get}",
				description:"Returns whether the password is set."
				},
				{
				name:"pwdSetTime &#x2192; LONG64 {get}",
				description:"Retrieves the time when the password was set as a Windows FILETIME. Use [DateTime]::FromFileTime to convert it to local time, or [DateTime]::FromFileTimeUtc to work with it as UTC."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IPassword915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Set (BSTR plainText)",
				description:"Sets the password.",
				parameters:
				[
					{
					parameter:"plainText: The password to set."
					}
				]
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IPasswordCache915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"The number of revealed password cache entries for the current SSH Server instance."
				},
				{
				name:"entries &#x2192; SAFEARRAY(BSTR) {get}",
				description:"Allows enumerating revealed password cache entries or to access them by index."
				},
				{
				name:"hiddenEntries &#x2192; ULONG {get}",
				description:"The number of hidden password cache entries for the current SSH Server instance."
				}
			],
			methods:
			[
				{
				name:"GetItem (ULONG index) &#x2192; BSTR",
				description:"Returns the revealed password cache entry with the specified index.",
				parameters:
				[
					{
					parameter:"index: Zero-based index of the entry."
					}
				]
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes an entry from the password cache for the current SSH Server instance.",
				parameters:
				[
					{
					parameter:"index: Zero-based index of the entry."
					}
				]
				},
				{
				name:"EraseByName (BSTR userName)",
				description:"Removes an entry from the password cache for the current SSH Server instance.",
				parameters:
				[
					{
					parameter:"userName: A Windows account name."
					}
				]
				},
				{
				name:"Clear ()",
				description:"Removes all entries from the password cache for the current SSH Server instance."
				},
				{
				name:"Set (BSTR userName, BSTR pass, BOOL hideUsername)",
				description:"Adds a new entry to the password cache for the current SSH Server instance.",
				parameters:
				[
					{
					parameter:"userName: A Windows account name."
					},
					{
					parameter:"pass: The password for the specified Windows account."
					},
					{
					parameter:"hideUsername: If true, the name of the account associated with this entry will be hidden. If false, the name will be visible (revealed)."
					}
				]
				},
				{
				name:"Hide (BSTR userName)",
				description:"Hides the username associated with an entry in the password cache.",
				parameters:
				[
					{
					parameter:"userName: A Windows account name."
					}
				]
				},
				{
				name:"HideAll ()",
				description:"Hides all entries in the password cache for the current SSH Server instance."
				}
			]
			},
			{
			name:"IPermanentBandwidths915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"limitDownloadBandwidth &#x2192; <a href=\"#IPermanentBandwidths915\" onclick=\"ScrollToEnum();return false;\">BandwidthLimit915</a> {get} {set}",
				defaultValue:"Default value varies depending on context.",
				description:"For members of this group whose individual settings are not defined differently, whether to restrict download speed for each user."
				},
				{
				name:"maxDownloadBandwidth &#x2192; ULONG {get} {set}",
				defaultValue:"default: 100",
				description:"For members of this group whose individual settings are not defined differently, the maximum speed with which each user can receive data from this server."
				},
				{
				name:"limitUploadBandwidth &#x2192; <a href=\"#IPermanentBandwidths915\" onclick=\"ScrollToEnum();return false;\">BandwidthLimit915</a> {get} {set}",
				defaultValue:"Default value varies depending on context.",
				description:"For members of this group whose individual settings are not defined differently, whether to restrict upload speed for each user."
				},
				{
				name:"maxUploadBandwidth &#x2192; ULONG {get} {set}",
				defaultValue:"default: 100",
				description:"For members of this group whose individual settings are not defined differently, the maximum speed with which each user can send data to this server."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IPermanentBandwidths915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"BandwidthLimit915",
				description:"BandwidthLimit_none (1): None<br />BandwidthLimit_mbps (2): MB/s<br />BandwidthLimit_kbps (3): KB/s"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IPopupAndTray915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"persistentTrayIcon &#x2192; BOOL {get} {set}",
				description:"Gets or sets the current user's setting, specific to this SSH Server instance, whether the SSH Server Control Panel will run in the background with a persistent tray icon when an administrative user logs in."
				},
				{
				name:"persistentTrayIconDefault &#x2192; BOOL {get} {set}",
				description:"Gets or sets the machine-wide default setting, specific to this SSH Server instance, whether the SSH Server Control Panel will run in the background with a persistent tray icon when an administrative user logs in."
				},
				{
				name:"popupMode &#x2192; <a href=\"#IPopupAndTray915\" onclick=\"ScrollToEnum();return false;\">PopupMode915</a> {get} {set}",
				description:"Gets or sets the current user's setting, specific to this SSH Server instance, about if and when the SSH Server Control Panel should show popup notifications related to SSH Server activity."
				},
				{
				name:"popupModeDefault &#x2192; <a href=\"#IPopupAndTray915\" onclick=\"ScrollToEnum();return false;\">PopupMode915</a> {get} {set}",
				description:"Gets or sets the machine-wide default setting, specific to this SSH Server instance, about if and when the SSH Server Control Panel should show popup notifications related to SSH Server activity."
				},
				{
				name:"popupEvents &#x2192; BSTR {get} {set}",
				description:"Gets or sets the current user's setting, specific to this SSH Server instance, for the list of popup events to display when popup notifications are enabled."
				},
				{
				name:"popupEventsDefault &#x2192; BSTR {get} {set}",
				description:"Gets or sets the machine-wide default setting, specific to this SSH Server instance, for the list of popup events to display when popup notifications are enabled."
				},
				{
				name:"popupTimeout &#x2192; UINT {get} {set}",
				description:"Gets or sets the current user's setting, specific to this SSH Server instance, for how long (in milliseconds) popup notifications should remain displayed."
				},
				{
				name:"popupTimeoutDefault &#x2192; UINT {get} {set}",
				description:"Gets or sets the machine-wide default setting, specific to this SSH Server instance, for how long (in milliseconds) popup notifications should remain displayed."
				},
				{
				name:"updatePopupMode &#x2192; <a href=\"#IPopupAndTray915\" onclick=\"ScrollToEnum();return false;\">PopupMode915</a> {get} {set}",
				description:"Gets or sets the current user's setting, specific to this SSH Server instance, about if and when the SSH Server Control Panel should show popup notifications related to SSH Server updates."
				},
				{
				name:"updatePopupModeDefault &#x2192; <a href=\"#IPopupAndTray915\" onclick=\"ScrollToEnum();return false;\">PopupMode915</a> {get} {set}",
				description:"Gets or sets the machine-wide setting, specific to this SSH Server instance, about if and when the SSH Server Control Panel should show popup notifications related to SSH Server updates."
				}
			],
			enums:
			[
				{
				name:"PopupMode915",
				description:"PopupMode_never: 0<br />PopupMode_whenMinimized: 1<br />PopupMode_whenInvisible: 2<br />PopupMode_always: 3"
				}
			]
			},
			{
			name:"IPortRangeRule915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"portFrom &#x2192; ULONG {get} {set}",
				defaultValue:"Default value varies depending on context.",
				description:"The beginning of the port range (inclusive) to match."
				},
				{
				name:"portTo &#x2192; ULONG {get} {set}",
				defaultValue:"default: 65535",
				description:"The end of the port range (inclusive) to match. Must be greater than or equal to 'Port from'."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IPortRangeRule915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IPriorityNameList915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"list &#x2192; BSTR {get} {set}",
				description:"Gets or sets the algorithm priority list."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IPriorityNameList915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IPwAuthWhitelist915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IPwAuthWhitelistEntry915\" onclick=\"SetInterface('IPwAuthWhitelistEntry915', false);return false;\">IPwAuthWhitelistEntry915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IPwAuthWhitelistEntry915\" onclick=\"SetInterface('IPwAuthWhitelistEntry915', false);return false;\">IPwAuthWhitelistEntry915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IPwAuthWhitelist915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IPwAuthWhitelistEntry915\" onclick=\"SetInterface('IPwAuthWhitelistEntry915', false);return false;\">IPwAuthWhitelistEntry915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IPwAuthWhitelist915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IPwAuthWhitelistEntry915\" onclick=\"SetInterface('IPwAuthWhitelistEntry915', false);return false;\">IPwAuthWhitelistEntry915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IPwAuthWhitelistEntry915\" onclick=\"SetInterface('IPwAuthWhitelistEntry915', false);return false;\">IPwAuthWhitelistEntry915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IPwAuthWhitelistEntry915\" onclick=\"SetInterface('IPwAuthWhitelistEntry915', false);return false;\">IPwAuthWhitelistEntry915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IPwAuthWhitelistEntry915\" onclick=\"SetInterface('IPwAuthWhitelistEntry915', false);return false;\">IPwAuthWhitelistEntry915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IPwAuthWhitelistEntry915\" onclick=\"SetInterface('IPwAuthWhitelistEntry915', false);return false;\">IPwAuthWhitelistEntry915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IPwAuthWhitelistEntry915\" onclick=\"SetInterface('IPwAuthWhitelistEntry915', false);return false;\">IPwAuthWhitelistEntry915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IPwAuthWhitelistEntry915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! userName &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Clients will be permitted to use this user name with password authentication."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"An optional comment describing this whitelisted user name."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IPwAuthWhitelistEntry915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IRemoteAdminAccess915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"accessType &#x2192; <a href=\"#IRemoteAdminAccess915\" onclick=\"ScrollToEnum();return false;\">RemoteAdminAccessType915</a> {get} {set}",
				defaultValue:"Default value varies depending on context.",
				description:"For members of this group whose individual settings are not defined differently, whether remote SSH Server administration should be permitted; and if so, what type of access should be provided.\n\nFull access allows changing all server settings, managing host keys, and managing the server's password cache, under the condition that the user has administrative rights in Windows. A Windows account that lacks administrative rights will not be able to access this feature. For a virtual account to access this feature, it must be configured with the security context of a Windows account that has administrative rights.\n\nDelegated access allows limited management of virtual accounts. In this mode, accessing connection information, some access control settings, and server host keys can also be enabled. Unlike Full access, the user does not need administrative rights in Windows to access this feature.\n\nYou can limit the mount point root paths which a delegated administrator can configure. This is configured outside of account and group settings, under Access control > Limit delegated administrator mount points."
				},
				{
				name:"connectionInfo &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"For members of this group whose individual settings are not defined differently, whether they should be allowed to access the Connections tab, Activity tab, Windows sessions and Email management in the Remote SSH Server Control Panel."
				},
				{
				name:"accessControl &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"For members of this group whose individual settings are not defined differently, whether they should be allowed to manage temporarily blocked IP addresses and make changes to Windows sessions in the Remote SSH Server Control Panel. This requires access to Connection information to be enabled."
				},
				{
				name:"emailManagement &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"For members of this group whose individual settings are not defined differently, whether they should be allowed to view the email queue and send test emails in the Remote SSH Server Control Panel. This requires access to Connection information to be enabled."
				},
				{
				name:"manageKeysAndCerts &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"For members of this group whose individual settings are not defined differently, whether they should be allowed to manage server's host keys in the Remote SSH Server Control Panel."
				},
				{
				name:"limitToGroups &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"For members of this group whose individual settings are not defined differently, whether they should be allowed to access all virtual accounts, without limitation; or if the user should be restricted to create or edit only virtual accounts that derive settings from specified virtual groups."
				},
				{
				name:"virtualGroupWhitelist &#x2192; <a href=\"#IVirtualGroupWhitelist915\" onclick=\"SetInterface('IVirtualGroupWhitelist915', false);return false;\">IVirtualGroupWhitelist915</a> {get}",
				description:"Users who are granted delegated administration rights will be able to create and edit only virtual accounts that derive settings from virtual groups configured in this whitelist."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IRemoteAdminAccess915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"RemoteAdminAccessType915",
				description:"RemoteAdminAccessType_full (1): Full access - must be administrator<br />RemoteAdminAccessType_delegated (2): Delegated access<br />RemoteAdminAccessType_no (3): No access - even if administrator"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISecretKey915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"crypt &#x2192; BSTR {get} {set}",
				description:"Gets or sets the secret key in ciphertext."
				},
				{
				name:"base32 &#x2192; BSTR {get} {set}",
				description:"Gets or sets the secret key in textual base32 format."
				},
				{
				name:"isSet &#x2192; BOOL {get}",
				description:"Whether a secret key is set."
				},
				{
				name:"issuer &#x2192; BSTR {get} {set}",
				description:"Gets or sets the secret key issuer name."
				},
				{
				name:"issuedTo &#x2192; BSTR {get} {set}",
				description:"Gets or sets the name of the person or account to whom the secret key is issued."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISecretKey915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"GenerateKey ()",
				description:"Generates a random new secret key."
				},
				{
				name:"Export2dCode (BSTR fileName, <a href=\"#ISecretKey915\" onclick=\"ScrollToEnum();return false;\">ImageFileFormat915</a> format)",
				description:"Exports a 2d code image that can be used to import the secret key on another device.",
				parameters:
				[
					{
					parameter:"fileName: Path to a file in which to store the 2d code image."
					},
					{
					parameter:"format: The exported image format."
					}
				]
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IServer915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"preferredIpVersion &#x2192; <a href=\"#IServer915\" onclick=\"ScrollToEnum();return false;\">IpVersionType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.IpVersionType.ipv4",
				description:"Which IP version to use for outgoing connections when both IPv4 and IPv6 can be used to connect to the destination server."
				},
				{
				name:"trustedLspOnly &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Windows provides an extensible network sockets model which allows third-party applications such as antivirus software and proxy clients to install Windows Sockets modules, called Layered Service Providers, to monitor, modify, or redirect network traffic. Unfortunately, third-party LSPs tend to be less stable than providers that come with Windows, and may cause advanced network applications to crash. On the other hand, use of a third-party LSP may be required in some environments, e.g. to connect through a proxy.\n\nIf this setting is enabled, the SSH Server will use only a narrow selection of trusted LSP providers, promoting stability, but at a possible expense of connectivity. If disabled, the SSH Server will use whatever LSPs are installed, promoting connectivity, but at a possible expense of stability.\n\nModifying this setting has an effect on new sockets only. New outgoing connections will use the new setting immediately. However, making a change in this setting effective for longer-lived listening sockets requires a restart of the SSH Server service."
				},
				{
				name:"secureSubsys &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, non-administrator users who can run arbitrary code, e.g. via exec request or terminal shell access, will be prevented from using this access to affect operation of SSH Server subsystem processes running in their security context. SSH Server subsystem processes include SfsServer.exe, toterms.exe, and sexec.exe."
				},
				{
				name:"adsiEncryption &#x2192; <a href=\"#IServer915\" onclick=\"ScrollToEnum();return false;\">AdsiEncryption915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.AdsiEncryption.kerberos",
				description:"In domain environments, the SSH Server uses ADSI to issue LDAP requests to the Active Directory. This setting controls whether requests and responses will be securely encrypted, or transferred across the network in plaintext.\n\nADSI supports two types of encryption: Kerberos sealing, and TLS (SSL). Kerberos sealing is available in all Windows domain environments. TLS must be set up at the domain controller explicitly."
				},
				{
				name:"priorityClass &#x2192; <a href=\"#IServer915\" onclick=\"ScrollToEnum();return false;\">PriorityClass915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.PriorityClass.normal",
				description:"The Windows priority class with which the the SSH Server process should run. On a busy system running CPU-intensive processes, set this to 'Below normal' to favor other applications at the expense of the SSH Server, or set it to 'Above normal' to favor the SSH Server at the expense of other applications. The setting should be set to 'Normal' in most cases."
				},
				{
				name:"autoBackupSettings &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the SSH Server will automatically backup its settings to the 'Config\\Backup' folder under the Bitvise SSH Server installation directory, each time server's settings are saved."
				},
				{
				name:"minorBackupCooldown &#x2192; ULONG {get} {set}",
				defaultValue:"default: 360",
				description:"SSH Server settings can be changed automatically while the SSH Server is running. For example, this can happen if you configure automatic permanent IP blocking, or if a virtual user changes their password, or if an account uses the SSH Public Key Subsystem to change their public keys. When only such changes are occurring, the SSH Server will enforce a minimum time between automatic settings backups as configured here.\n\nIf SSH Server settings are changed directly by a server administrator, or a script controlled by an administrator, an automatic settings backup will still occur independently of this cooldown."
				},
				{
				name:"debugging &#x2192; <a href=\"#IDebugging915\" onclick=\"SetInterface('IDebugging915', false);return false;\">IDebugging915</a> {get}",
				description:"Use these settings only if instructed by Bitvise."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IServer915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"AdsiEncryption915",
				description:"AdsiEncryption_kerberos (0): Kerberos<br />AdsiEncryption_tls (1): TLS (SSL)<br />AdsiEncryption_plaintext (2): Plaintext"
				},
				{
				name:"IpVersionType915",
				description:"IpVersionType_ipv4 (0): IPv4<br />IpVersionType_ipv6 (1): IPv6"
				},
				{
				name:"PriorityClass915",
				description:"PriorityClass_belowNormal (1): Below normal<br />PriorityClass_normal (2): Normal<br />PriorityClass_aboveNormal (3): Above normal"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISessions915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"winSessionSharing &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether multiple connections from the same user can share the same Windows session. When connections share a Windows session, actions performed by one connection may affect others. For example, when one connection maps a Windows file share, the same share becomes accessible to other connections in the same Windows session. If one connection disconnects a share, that share stops being available to other connections. A connection which does not require a Windows profile to be loaded may run inside a Windows session in which the Windows profile is loaded, if it was loaded previously by another connection.\n\nConnections that log in as separate accounts - Windows or virtual - cannot share the same Windows session. If SSH Server settings change in a way that affects Windows session initialization, subsequent connections will receive a new Windows session."
				},
				{
				name:"winSessionKeepAliveSecs &#x2192; ULONG {get} {set}",
				defaultValue:"default: 600",
				description:"The number of seconds a Windows session stays cached after the last connection which was using the Windows session disconnects."
				},
				{
				name:"maxWinSessionAgeHours &#x2192; ULONG {get} {set}",
				defaultValue:"default: 768",
				description:"After a Windows session was created, the maximum number of hours it can continue to be reused. After this time expires, the Windows session will be closed, and a new one will be created when the next connection needs it."
				},
				{
				name:"windowsFileShareSettings &#x2192; <a href=\"#INetworkShareSettings915\" onclick=\"SetInterface('INetworkShareSettings915', false);return false;\">INetworkShareSettings915</a> {get}",
				description:"Settings in this group control how to handle connections to Windows file shares: whether to map a remote home directory; whether to map remembered shares; and what to do if file share connections fail."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISessions915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISettings915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"bindings &#x2192; <a href=\"#IBindings915\" onclick=\"SetInterface('IBindings915', false);return false;\">IBindings915</a> {get}",
				description:"Network interfaces and ports on which the SSH Server will accept connections, as well as port forwarding settings for UPnP-enabled gateways and NATs. Default bindings do not need to be altered unless you wish the server to accept connections on a port other than the well-known SSH port (22), or if you wish the server to accept connections on multiple ports.\n\nIf the SSH Server is placed behind a network gateway, such as a router or NAT, port forwarding must be set up on such a device to receive connections from outside the local network. This can be done manually through the gateway's administration interface, or automatically if the gateway supports UPnP, and the SSH Server is configured to use it."
				},
				{
				name:"windowsFirewall &#x2192; <a href=\"#IWindowsFirewall915\" onclick=\"SetInterface('IWindowsFirewall915', false);return false;\">IWindowsFirewall915</a> {get}",
				description:"The Windows Firewall provides an additional mechanism to control incoming connections to the SSH and forwarded ports, which is separate from the SSH Server's IP and DNS name based access control rules. You can use these settings to let the SSH Server add the necessary exceptions to Windows Firewall to allow incoming connections. You can also disable this feature and manage your firewall settings manually through the Windows Control Panel."
				},
				{
				name:"denialOfService &#x2192; <a href=\"#IDenialOfServiceProtection915\" onclick=\"SetInterface('IDenialOfServiceProtection915', false);return false;\">IDenialOfServiceProtection915</a> {get}",
				description:"If the SSH Server detects a large influx of incoming connections, then by default, it will begin to drop connections that arrive too close after one another. This prevents exhausting all socket resources which could completely prevent legitimate users from connecting. This section allows fine-tuning or disabling this feature."
				},
				{
				name:"logging &#x2192; <a href=\"#ILogging915\" onclick=\"SetInterface('ILogging915', false);return false;\">ILogging915</a> {get}",
				description:"These settings control how the SSH Server records events describing the state of the server, handled connections and user activity. If you experience problems, the SSH Server's textual log files are the first place to consult. Automatic log file archival or deletion can be configured using a task of type Log file maintenance under Tasks and actions."
				},
				{
				name:"xfer &#x2192; <a href=\"#IFileTransferSettings915\" onclick=\"SetInterface('IFileTransferSettings915', false);return false;\">IFileTransferSettings915</a> {get}",
				description:"Global settings and defaults affecting SFTP, SCP and FTPS file transfers."
				},
				{
				name:"term &#x2192; <a href=\"#ITerminalConsoleSettings915\" onclick=\"SetInterface('ITerminalConsoleSettings915', false);return false;\">ITerminalConsoleSettings915</a> {get}",
				description:"Global settings and defaults affecting the SSH Server's terminal console subsystem."
				},
				{
				name:"tasks &#x2192; <a href=\"#ITaskSettings915\" onclick=\"SetInterface('ITaskSettings915', false);return false;\">ITaskSettings915</a> {get}",
				description:"The SSH Server can be configured to perform tasks or send email notifications, either triggered by specific log events, or based on a calendar schedule. Configurable tasks include shell script commands, email notifications, and log file maintenance."
				},
				{
				name:"server &#x2192; <a href=\"#IServer915\" onclick=\"SetInterface('IServer915', false);return false;\">IServer915</a> {get}",
				description:"Global settings and defaults affecting the SSH Server as a whole."
				},
				{
				name:"stats &#x2192; <a href=\"#IStats915\" onclick=\"SetInterface('IStats915', false);return false;\">IStats915</a> {get}",
				description:"These settings control whether the SSH Server will collect and store statistics about transferred data and login counts on an account-wide, group-wide, and server-wide basis. Statistics data will be stored in the 'Stats' folder under the Bitvise SSH Server installation directory."
				},
				{
				name:"smtp &#x2192; <a href=\"#ISmtpSending915\" onclick=\"SetInterface('ISmtpSending915', false);return false;\">ISmtpSending915</a> {get}",
				description:"If the SSH Server is configured to send email notifications, this section contains settings for SMTP sending.\n\nEmail sending functionality is not available on Windows XP or Windows Server 2003."
				},
				{
				name:"algs &#x2192; <a href=\"#ISshAlgorithms915\" onclick=\"SetInterface('ISshAlgorithms915', false);return false;\">ISshAlgorithms915</a> {get}",
				description:"Settings in this section affect which algorithms the SSH Server will support in establishing and maintaining an SSH connection. There is usually no need to change these settings unless a compelling reason becomes known."
				},
				{
				name:"tlsAlgs &#x2192; <a href=\"#ITlsAlgorithms915\" onclick=\"SetInterface('ITlsAlgorithms915', false);return false;\">ITlsAlgorithms915</a> {get}",
				description:"If an FTP binding is configured, the SSH Server uses Windows Schannel to provide TLS security for FTPS connections. Settings in this section affect Schannel security options used for TLS connections. There is usually no need to change these settings unless a compelling reason becomes known."
				},
				{
				name:"connections &#x2192; <a href=\"#IConnections915\" onclick=\"SetInterface('IConnections915', false);return false;\">IConnections915</a> {get}",
				description:"Settings having to do with establishment and maintenance of incoming connections."
				},
				{
				name:"sessions &#x2192; <a href=\"#ISessions915\" onclick=\"SetInterface('ISessions915', false);return false;\">ISessions915</a> {get}",
				description:"Settings having to do with initialization and caching of Windows sessions."
				},
				{
				name:"ipBlock &#x2192; <a href=\"#IIpBlocking915\" onclick=\"SetInterface('IIpBlocking915', false);return false;\">IIpBlocking915</a> {get}",
				description:"Settings affecting the behavior of the server's automatic IP blocking."
				},
				{
				name:"domainOrder &#x2192; <a href=\"#IDomainOrder915\" onclick=\"SetInterface('IDomainOrder915', false);return false;\">IDomainOrder915</a> {get}",
				description:"When a user tries to log in with a user name that does not explicitly specify a domain, the SSH Server will first attempt to look up the user name in Windows domains in the order in which they are listed here.\n\nIf lookup using the configured domain order fails; or if there are no domain order entries; then the SSH Server will fall back to a regular Windows account lookup.\n\nThis feature does not work with Unix realm accounts, because Windows cannot look up accounts from Unix realms. Users logging in with a Unix realm account always need to provide their fully qualified principal name, including realm."
				},
				{
				name:"connectProfiles &#x2192; <a href=\"#IConnectProfiles915\" onclick=\"SetInterface('IConnectProfiles915', false);return false;\">IConnectProfiles915</a> {get}",
				description:"The SSH Server can initiate outgoing connections when users use client-to-server port forwarding, or when a mount point is configured to provide access to a remote SFTP server. The SSH Server can perform such outgoing connections through proxies. If one or more destinations must be accessed through a proxy, configure the proxy settings here. Connect profiles are referenced from within connect rules in group and account settings entries, and from SSH profiles for connections to SFTP servers."
				},
				{
				name:"sshProfiles &#x2192; <a href=\"#ISshProfiles915\" onclick=\"SetInterface('ISshProfiles915', false);return false;\">ISshProfiles915</a> {get}",
				description:"In account and group settings, it is possible to configure virtual filesystem mount points to serve file transfer access not backed by the local filesystem, but another SFTP server. In this case, one or more SSH profiles must be set up so that the SSH Server can establish a connection to the destination server."
				},
				{
				name:"customSubsystems &#x2192; <a href=\"#ICustomSubsystems915\" onclick=\"SetInterface('ICustomSubsystems915', false);return false;\">ICustomSubsystems915</a> {get}",
				description:"Some types of access, notably PowerShell remoting over SSH, require defining a custom subsystem. Users will be able to invoke subsystems defined here if their \"Shell access type\" permits access to the whole filesystem (e.g. is set to Command Prompt, PowerShell, or bash); or alternately, if it is set to \"Custom shell settings\" and configured so that use of a particular subsystem is permitted."
				},
				{
				name:"encryptedVolumes &#x2192; <a href=\"#IEncryptedVolumes915\" onclick=\"SetInterface('IEncryptedVolumes915', false);return false;\">IEncryptedVolumes915</a> {get}",
				description:"In account and group settings, it is possible to configure virtual filesystem mount points to serve file transfer access backed by encrypted volumes managed by the SSH Server. In this case, set up one or more encrypted volumes here, so that they can be referenced in mount point settings entries."
				},
				{
				name:"access &#x2192; <a href=\"#IAccessControl915\" onclick=\"SetInterface('IAccessControl915', false);return false;\">IAccessControl915</a> {get}",
				description:"Use settings in this section to control which Windows users can log in through the SSH Server, to create virtual accounts specific to the SSH Server, to control internet addresses from which the SSH Server will accept connections, and to configure what SSH services users can access. If settings in this section are left at defaults, the SSH Server will accept connections from all internet addresses and will permit logon for all Windows accounts to which a local logon right is granted by the local computer's security policy."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISettings915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				names:
				[
					"Load ()",
					"TryLoad () &#x2192; <a href=\"#ILoadResult915\" onclick=\"SetInterface('ILoadResult915', false);return false;\">ILoadResult915</a>"
				],
				description:"Loads settings for the current SSH Server instance. The 'Try' version of this function returns a result with properties such as whether the operation was successful and a description of any errors."
				},
				{
				names:
				[
					"LoadFromFile (BSTR file)",
					"TryLoadFromFile (BSTR file) &#x2192; <a href=\"#ILoadResult915\" onclick=\"SetInterface('ILoadResult915', false);return false;\">ILoadResult915</a>"
				],
				description:"Loads SSH Server settings from a binary settings file exported by either the installed SSH Server version or a previous version. The 'Try' version of this function returns a result with properties such as whether the operation was successful and a description of any errors.",
				parameters:
				[
					{
					parameter:"file: Path to a file containing binary SSH Server settings."
					}
				]
				},
				{
				names:
				[
					"LoadFromFileWithPassword (BSTR file, BSTR pass)",
					"TryLoadFromFileWithPassword (BSTR file, BSTR pass) &#x2192; <a href=\"#ILoadResult915\" onclick=\"SetInterface('ILoadResult915', false);return false;\">ILoadResult915</a>"
				],
				description:"Loads SSH Server settings from a password-protected, binary settings file exported by either the installed SSH Server version or a previous version. The 'Try' version of this function returns a result with properties such as whether the operation was successful and a description of any errors.",
				parameters:
				[
					{
					parameter:"file: Path to a file containing binary SSH Server settings."
					},
					{
					parameter:"pass: Password to decrypt settings."
					}
				]
				},
				{
				name:"Save ()",
				description:"Saves currently loaded settings as new settings for the current SSH Server instance."
				},
				{
				name:"SaveToFile (BSTR file)",
				description:"Exports currently loaded SSH Server settings into a binary file.",
				parameters:
				[
					{
					parameter:"file: Path to a file in which to store settings."
					}
				]
				},
				{
				name:"SaveToFileWithPassword (BSTR file, BSTR pass)",
				description:"Exports currently loaded SSH Server settings into a password-protected binary file.",
				parameters:
				[
					{
					parameter:"file: Path to a file in which to store settings."
					},
					{
					parameter:"pass: Password with which to encrypt settings."
					}
				]
				},
				{
				name:"Backup ()",
				description:"Creates a backup of the main settings for the current SSH Server instance."
				},
				{
				name:"Lock ()",
				description:"Locks main settings for the current SSH Server instance."
				},
				{
				name:"Unlock ()",
				description:"Unlocks main settings for the current SSH Server instance."
				},
				{
				name:"Import (BSTR settings)",
				description:"Imports SSH Server settings from a string in a textual format as exported by any Dump function in the settings hierarchy.",
				parameters:
				[
					{
					parameter:"settings: A string with textual settings."
					}
				]
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISfsMountPoint915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! sfsMountPath &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"/\"",
				description:"The name of the virtual folder that this mount point represents. This name will appear as a folder in the filesystem presented to SCP, SFTP, and FTPS clients.\n\nExamples:- \"/\" to configure the root mount point;- \"/Folder\" to configure a nested mount point.\n\nIn order to see a deeply nested mount point, its parent must be served by a mount point above it. For example, in order to see \"/TopFolder/SubFolder\", one of the following must be true:\n\n(1) The root mount point configured at \"/\" must contain a directory named \"TopFolder\".\n\n(2) A mount point can be configured at \"/TopFolder\". This can be a standard mount point, mapped to a \"Real root path\" in the filesystem. Alternately, it can also be a dummy mount point configured using the FlowSfsNull provider. A mount point using the FlowSfsNull provider can be configured using the \"Provider DLL\" option (available in Advanced settings).\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"mountType &#x2192; <a href=\"#ISfsMountPoint915\" onclick=\"ScrollToEnum();return false;\">SfsMountType915</a> {get} {set}",
				defaultValue:"Default value varies depending on context.",
				description:"The following mount types are available:\n\nUnlimited access allows unlimited access to the Windows filesystem. Both local drives and shared folders on other computers will be accessible to the logged on user. The user's access will be limited only by Windows filesystem permissions.\n\nA specific directory limits access to a directory and its subdirectories. If the directory contains any symbolic links or junctions, their destinations will be accessable as well. However, the user will not be permitted to create such links or junctions. The user's access will be additionally limited by Windows filesystem permissions.\n\nAnother SFTP server causes the SSH Server to act as a bridge to access another configured SFTP server.\n\nHidden, access denied hides the configured mount point and denies access to it. For example, if \"Virtual mount point\" is set to \"/c/windows\", the \"Windows\" directory entry will be omitted from a directory listing of \"/c\". Any file operation on \"/c/windows\" and its subdirectories will be rejected with a no-such-path error.\n\nCustom provider is an advanced setting that mounts the provider specified as the Provider DLL, below."
				},
				{
				name:"realRootPath &#x2192; BSTR {get} {set}",
				defaultValue:"Default value varies depending on context.",
				description:"The location of the Windows filesystem folder, network share, or other resource this mount point is to provide access to. This is most commonly the path to a Windows folder, or a UNC path to a network share. Example: \"C:\\SharedData\\GroupA\\UserB\\\"\n\nIf using a UNC path in a connection with public key authentication, you will need to either set up the SSH Server's password cache, or configure credentials for the SSH Server to access the share. See \"Network shares and public key authentication\":\nhttps://www.bitvise.com/ssh-server-accessing-file-shares\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"encryptedVolumeName &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The name of an encrypted volume configured in Settings > Encrypted volumes.",
				values:"Has to be the name of a configured Encrypted volume."
				},
				{
				name:"encryptedRootPath &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"/\"",
				description:"The path to a directory within the encrypted volume to which this mount point should provide access. The mount point will provide access to this directory and subdirectories, but not to parent or sibling directories in the encrypted volume.\n\nThis path uses Unix-style syntax. A single forward slash, \"/\", indicates the root directory, and separates the names of subdirectories."
				},
				{
				name:"sshProfileName &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The name of a configured SSH profile to use when connecting to the SFTP server.\n\nIf the other SFTP server does not support SFTP file locking, configure the following mount point settings:\n\n- File sharing behavior: Force\n- File sharing for uploads: Read, Write, Delete\n- File sharing for downloads: Read, Write, Delete",
				values:"Has to be the name of a configured SSH profile."
				},
				{
				name:"sftpRootPath &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"/\"",
				description:"The path to a directory in the remote SFTP filesystem to which this mount point should provide access. The mount point will provide access to this directory and subdirectories, but not to parent or sibling directories in the remote SFTP filesystem.\n\nThis path uses Unix-style syntax. A single forward slash, \"/\", indicates the root directory, and separates the names of subdirectories."
				},
				{
				name:"customProviderDll &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Specifies an SFS provider DLL which will serve this mount point. Do not use DLL files that are modifiable in user-accessible folders."
				},
				{
				name:"customRootPath &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"This setting narrows down a location in the backing storage to which the custom filesystem provider grants access. The mount point then provides access to this location, such as a specific directory and subdirectories, instead of the entire backing storage.\n\nThe exact meaning and syntax of this setting is specific to the custom filesystem provider that is being configured."
				},
				{
				name:"createRootPath &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the SSH Server will create the root directory above if it does not yet exist."
				},
				{
				name:"delayInit &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, initialization of this mount point will be deferred until it is first accessed by the client."
				},
				{
				name:"clientAddresses &#x2192; <a href=\"#IMountPointAddressAcceptRules915\" onclick=\"SetInterface('IMountPointAddressAcceptRules915', false);return false;\">IMountPointAddressAcceptRules915</a> {get}",
				description:"Rules to accept or deny access to this mount point based on the IP address, DNS name, or geographic location from which a user connects. If the connection does not match these rules, then the mount point will not be available.\n\nRules are processed on a first-match basis, so the order of the rules is important. Use the arrow buttons at the bottom to control the order in which rules are processed."
				},
				{
				name:"listAccess &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the client will be able to list directories under this mount point.\n\nIf List access is denied, the client may still be able to confirm its guesses about directory names and file names in other ways."
				},
				{
				name:"readExistAccess &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the client will be able to read the contents of existing files under this mount point."
				},
				{
				name:"writeExistAccess &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the client will be able to write to existing files under this mount point."
				},
				{
				name:"deleteExistAccess &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the client will be able to delete files and directories under this mount point."
				},
				{
				name:"readWriteDeleteNewAccess &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the client will be able to create new files under this mount point. If a client is permitted to create a file, the SSH Server will also permit the client to read from and write to the file while the file remains open. Access rights that apply to existing files will begin to apply one minute after the file is closed and not referenced in subsequent requests by the client.\n\nThis access right will not permit a client to resume an interrupted upload from a previous file transfer connection. To resume uploads interrupted by a disconnect, Write Existing access is required."
				},
				{
				name:"createDirAccess &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the client will be able to create new directories under this mount point."
				},
				{
				name:"createLinkAccess &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the client will be able to create new symbolic or hard links to files or directories under this mount point."
				},
				{
				name:"permitMoveExist &#x2192; <a href=\"#ISfsMountPoint915\" onclick=\"ScrollToEnum();return false;\">PermitMoveExist915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.PermitMoveExist.useGeneralPerms",
				description:"Under general permissions, moving or renaming a file or directory requires Read Existing and Delete Existing access on the source mount point, and Read/Write/Delete New access on the destination mount point.\n\nWhen general permissions do not permit moving or renaming, you can use this setting to specifically allow it."
				},
				{
				name:"showEmptyDirIfNoAccess &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Shows the client an empty directory if an attempt to list a directory fails with 'permission denied'.\n\nAttempts to list directories will fail with 'permission denied' if either Windows filesystem permissions deny access, or if List access in the SSH Server's mount point settings is not granted."
				},
				{
				name:"fileSharingBeh &#x2192; <a href=\"#ISfsMountPoint915\" onclick=\"ScrollToEnum();return false;\">FileSharingBeh915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.FileSharingBeh.defaultValue",
				description:"Controls file sharing mode for files opened by SFTP, SCP, and FTPS clients.\n\nIf set to Use global default, the settings from the File transfer section will be used.\n\nIf set to Free, the File sharing setting will be used when a file sharing preference is not indicated by the client.\n\nIf set to Force, files opened by clients will always be opened in the Windows file sharing mode specified under File sharing."
				},
				{
				name:"fileSharingUl &#x2192; <a href=\"#ISfsMountPoint915\" onclick=\"ScrollToEnum();return false;\">FileSharing915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.FileSharing.delete",
				description:"Windows file sharing modes to permit, based on the setting File sharing behavior, when files are opened by file transfer clients. This setting applies when the client requests Write or Append access:\n\n- None: A client cannot access a file already opened by another application or client. Another application or client cannot access a file already opened by a client.\n\n- Read: A client can access a file that another application or client already opened for reading; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only read access.\n\n- Write: A client can access a file that another application or client already opened for writing; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only write access.\n\n- Read, Write: A client can access a file that another application or client already opened for reading or writing; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only read and/or write access.\n\n- Read, Delete: A client can access a file that another application or client already opened for reading or deletion; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only read and/or delete access.\n\n- Write, Delete: A client can access a file that another application or client already opened for writing or deletion; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only write and/or delete access.\n\n- Read, Write, Delete: A client can access a file that another application or client already opened for any purpose; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client, for any purpose.\n\nDeletion only occurs when the last application or client closes its last handle to a file. Therefore, permitting simultaneous delete access will not cause the file to disappear while it's being read or written. It will be deleted as soon as it is closed by all applications and clients."
				},
				{
				name:"fileSharingDl &#x2192; <a href=\"#ISfsMountPoint915\" onclick=\"ScrollToEnum();return false;\">FileSharing915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.FileSharing.readWriteDelete",
				description:"Windows file sharing modes to permit, based on the setting File sharing behavior, when files are opened by file transfer clients. This setting applies when the client does not request Write or Append access:\n\n- None: A client cannot access a file already opened by another application or client. Another application or client cannot access a file already opened by a client.\n\n- Read: A client can access a file that another application or client already opened for reading; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only read access.\n\n- Write: A client can access a file that another application or client already opened for writing; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only write access.\n\n- Read, Write: A client can access a file that another application or client already opened for reading or writing; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only read and/or write access.\n\n- Read, Delete: A client can access a file that another application or client already opened for reading or deletion; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only read and/or delete access.\n\n- Write, Delete: A client can access a file that another application or client already opened for writing or deletion; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client; but only if it requests only write and/or delete access.\n\n- Read, Write, Delete: A client can access a file that another application or client already opened for any purpose; but only if the other application also permits file sharing for access requested by the client. Another application can access a file already opened by a client, for any purpose.\n\nDeletion only occurs when the last application or client closes its last handle to a file. Therefore, permitting simultaneous delete access will not cause the file to disappear while it's being read or written. It will be deleted as soon as it is closed by all applications and clients."
				},
				{
				name:"fileWhitelist &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Forward slash-separated list of case-insensitive file patterns, using ? or * as wildcards. If set, operations on files not matching any file patterns in the whitelist are blocked.\n\nThe following operations are affected: Open, SetStat, Remove, Rename, Link, CheckFileName, and FileCopy. Operations that accept multiple paths - Rename, Link, and FileCopy - are blocked if any of the paths are blocked."
				},
				{
				name:"fileBlacklist &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Forward slash-separated list of case-insensitive file patterns, using ? or * as wildcards. If set, operations on files matching any file patterns in the blacklist are blocked.\n\nThe following operations are affected: Open, SetStat, Remove, Rename, Link, CheckFileName, and FileCopy. Operations that accept multiple paths - Rename, Link, and FileCopy - are blocked if any of the paths are blocked."
				},
				{
				name:"dirWhitelist &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Forward slash-separated list of case-insensitive file patterns, using ? or * as wildcards. If set, operations on directories not matching any file patterns in the whitelist are blocked.\n\nThis does not block access to files or subdirectories in non-matching directories. It only blocks operations directly performed on the directory itself.\n\nThe following operations are affected: SetStat, Rename, MkDir, RmDir, Link, and FSetStat. Operations that accept multiple paths - Rename and Link - are blocked if any of the paths are blocked.\n\nThe operation OpenDir is permitted, but the directory handle can be used only with ReadDir and FStat. FSetStat is not allowed."
				},
				{
				name:"dirBlacklist &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Forward slash-separated list of case-insensitive file patterns, using ? or * as wildcards. If set, operations on directories matching any file patterns in the blacklist are blocked.\n\nThis does not block access to files or subdirectories in a matching directory. It only blocks operations directly performed on the directory itself.\n\nThe following operations are affected: SetStat, Rename, MkDir, RmDir, Link, and FSetStat. Operations that accept multiple paths - Rename and Link - are blocked if any of the paths are blocked.\n\nThe operation OpenDir is permitted, but the directory handle can be used only with ReadDir and FStat. FSetStat is not allowed."
				},
				{
				name:"winProv &#x2192; <a href=\"#ISfsWinProviderSettings915\" onclick=\"SetInterface('ISfsWinProviderSettings915', false);return false;\">ISfsWinProviderSettings915</a> {get}",
				description:"Settings specific to the built-in provider."
				},
				{
				name:"sftpProv &#x2192; <a href=\"#ISfsSftpProviderSettings915\" onclick=\"SetInterface('ISfsSftpProviderSettings915', false);return false;\">ISfsSftpProviderSettings915</a> {get}",
				description:"Settings specific to the built-in provider."
				},
				{
				name:"prov &#x2192; <a href=\"#ISfsSettingsPairs915\" onclick=\"SetInterface('ISfsSettingsPairs915', false);return false;\">ISfsSettingsPairs915</a> {get}",
				description:"Third-party SFS providers may require or support custom settings and parameters. Consult the documentation of your SFS provider to learn about the parameters it supports."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISfsMountPoint915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"FileSharing915",
				description:"FileSharing_none (0): None<br />FileSharing_read (1): Read<br />FileSharing_write (2): Write<br />FileSharing_delete (4): Delete<br />FileSharing_readWrite (3): Read, Write<br />FileSharing_readDelete (5): Read, Delete<br />FileSharing_writeDelete (6): Write, Delete<br />FileSharing_readWriteDelete (7): Read, Write, Delete"
				},
				{
				name:"FileSharingBeh915",
				description:"FileSharingBeh_defaultValue (0): Use global default<br />FileSharingBeh_free (1): Free<br />FileSharingBeh_force (2): Force"
				},
				{
				name:"PermitMoveExist915",
				description:"PermitMoveExist_useGeneralPerms (0): Use general permissions<br />PermitMoveExist_withinSameDir (1): Within same directory<br />PermitMoveExist_withinMountPoint (2): Within mount point<br />PermitMoveExist_accrossMountPoints (3): Across mount points"
				},
				{
				name:"SfsMountType915",
				description:"SfsMountType_unlimited (0): Unlimited access<br />SfsMountType_directory (1): Specific directory<br />SfsMountType_encrypted (2): Encrypted volume<br />SfsMountType_sftp (3): Another SFTP server<br />SfsMountType_hidden (4): Hidden, access denied<br />SfsMountType_custom (5): Custom provider"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISfsMountPoints915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#ISfsMountPoint915\" onclick=\"SetInterface('ISfsMountPoint915', false);return false;\">ISfsMountPoint915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#ISfsMountPoint915\" onclick=\"SetInterface('ISfsMountPoint915', false);return false;\">ISfsMountPoint915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISfsMountPoints915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#ISfsMountPoint915\" onclick=\"SetInterface('ISfsMountPoint915', false);return false;\">ISfsMountPoint915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#ISfsMountPoints915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#ISfsMountPoint915\" onclick=\"SetInterface('ISfsMountPoint915', false);return false;\">ISfsMountPoint915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#ISfsMountPoint915\" onclick=\"SetInterface('ISfsMountPoint915', false);return false;\">ISfsMountPoint915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#ISfsMountPoint915\" onclick=\"SetInterface('ISfsMountPoint915', false);return false;\">ISfsMountPoint915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#ISfsMountPoint915\" onclick=\"SetInterface('ISfsMountPoint915', false);return false;\">ISfsMountPoint915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#ISfsMountPoint915\" onclick=\"SetInterface('ISfsMountPoint915', false);return false;\">ISfsMountPoint915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#ISfsMountPoint915\" onclick=\"SetInterface('ISfsMountPoint915', false);return false;\">ISfsMountPoint915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISfsSettingsPair915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"name &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Parameter name for this SFS provider setting. Example: \"Maximum\""
				},
				{
				name:"value &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Alphanumeric parameter value. Example: \"100\""
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISfsSettingsPair915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISfsSettingsPairs915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#ISfsSettingsPair915\" onclick=\"SetInterface('ISfsSettingsPair915', false);return false;\">ISfsSettingsPair915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#ISfsSettingsPair915\" onclick=\"SetInterface('ISfsSettingsPair915', false);return false;\">ISfsSettingsPair915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISfsSettingsPairs915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#ISfsSettingsPair915\" onclick=\"SetInterface('ISfsSettingsPair915', false);return false;\">ISfsSettingsPair915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Move (ULONG indexFrom, ULONG indexTo)",
				description:"Moves the entry with the specified zero-based index to the new location within the list."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#ISfsSettingsPairs915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#ISfsSettingsPair915\" onclick=\"SetInterface('ISfsSettingsPair915', false);return false;\">ISfsSettingsPair915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#ISfsSettingsPair915\" onclick=\"SetInterface('ISfsSettingsPair915', false);return false;\">ISfsSettingsPair915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#ISfsSettingsPair915\" onclick=\"SetInterface('ISfsSettingsPair915', false);return false;\">ISfsSettingsPair915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#ISfsSettingsPair915\" onclick=\"SetInterface('ISfsSettingsPair915', false);return false;\">ISfsSettingsPair915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#ISfsSettingsPair915\" onclick=\"SetInterface('ISfsSettingsPair915', false);return false;\">ISfsSettingsPair915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#ISfsSettingsPair915\" onclick=\"SetInterface('ISfsSettingsPair915', false);return false;\">ISfsSettingsPair915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISfsSftpProviderSettings915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"logInOnInit &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to connect to and log into the SFTP server immediately when the mount point is initialized, or whether to defer the connection and login until the server needs to be accessed.\n\nThis setting is independent of delayed initialization configured in mount point settings."
				},
				{
				name:"emulateCheckFile &#x2192; <a href=\"#ISfsSftpProviderSettings915\" onclick=\"ScrollToEnum();return false;\">EmulateCheckFile915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.EmulateCheckFile.asFallback",
				description:"Whether to emulate file hashing operations. If file hashing is emulated, either the whole or partial file content needs to be downloaded from the SFTP server in order to respond to a file hashing request. When emulation is enabled as a fallback, it will be performed if the SFTP server does not support file hashing, or if the file hashing operation fails on the SFTP server."
				},
				{
				name:"emulateTextMode &#x2192; <a href=\"#ISfsSftpProviderSettings915\" onclick=\"ScrollToEnum();return false;\">EmulateTextMode915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.EmulateTextMode.ifNeeded",
				description:"Whether to always emulate SFTP text mode for SFTP version 4+ clients, or only when the SFTP server does not support text mode (uses SFTP version 3).\n\nIf the SFTP server supports text mode, and it is used without emulation, the SSH Server will not be able to accurately track file access for logging purposes after an SFTP text-seek operation with a non-zero line number is performed on the SFTP server."
				},
				{
				name:"emulateTextNewline &#x2192; <a href=\"#ISfsSftpProviderSettings915\" onclick=\"ScrollToEnum();return false;\">EmulateTextNewline915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.EmulateTextNewline.autoDetect",
				description:"When SFTP text mode is emulated, the SFTP newline convention to assume for the destination SFTP server. The Auto detect option chooses between the Windows and Unix newline conventions based on the SSH version string of the SFTP server."
				},
				{
				name:"emulateTextSeek &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support SFTP text-seek when SFTP text mode is emulated. Regardless of this setting, text-seek to line zero - the beginning of a text file - is always supported. When emulating a text-seek operation with a non-zero line number, the file needs to be partially or fully downloaded from the SFTP server."
				},
				{
				name:"nativeTextSeek &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to pass through SFTP text-seek when supported by the SFTP server. Regardless of this setting, text-seek to line zero - the beginning of a text file - is always supported.\n\nIf the SFTP server supports text mode, and text-seek is used in a pass-through manner, the SSH Server will not be able to accurately track file access for logging purposes after an SFTP text-seek operation with a non-zero line number is performed."
				},
				{
				name:"dirHandleMisuse &#x2192; <a href=\"#ISfsSftpProviderSettings915\" onclick=\"ScrollToEnum();return false;\">DirHandleMisuse915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DirHandleMisuse.replaceWithPathOp",
				description:"The SFTP protocol provides for directory handles to be used with directory listings only. However, a client can also send an SSH_FXP_FSTAT or SSH_FXP_FSETSTAT request that uses a directory handle instead of a file handle.\n\nSome servers can handle these FSTAT and FSETSTAT requests when used with directory handles, while other servers cannot. If a client sends such a request, the SSH Server can either fail it immediately; forward it to the destination SFTP server; or it can translate the handle-based FSTAT or FSETSTAT request into a path-based STAT or SETSTAT request."
				},
				{
				name:"listPipelineLevel &#x2192; ULONG {get} {set}",
				defaultValue:"default: 5",
				description:"The number of SFTP read-directory packets that the SSH Server will issue concurrently during a directory listing. Set to 0 to disable pipelining.\n\nPipelining is always disabled automatically for SFTP servers where it is known to cause problems."
				},
				{
				name:"readPipelineLevel &#x2192; ULONG {get} {set}",
				defaultValue:"default: 5",
				description:"The number of SFTP read-file packets that the SSH Server will issue concurrently while reading a file. Set to 0 to disable pipelining.\n\nPipelining is always disabled automatically for SFTP servers where it is known to cause problems."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISfsSftpProviderSettings915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"DirHandleMisuse915",
				description:"DirHandleMisuse_failImmediately (0): Fail immediately<br />DirHandleMisuse_forwardAsIs (1): Forward as-is<br />DirHandleMisuse_replaceWithPathOp (2): Replace with path operation"
				},
				{
				name:"EmulateCheckFile915",
				description:"EmulateCheckFile_always (0): Always<br />EmulateCheckFile_asFallback (1): As fallback<br />EmulateCheckFile_never (2): Never"
				},
				{
				name:"EmulateTextMode915",
				description:"EmulateTextMode_always (0): Always<br />EmulateTextMode_ifNeeded (1): If needed"
				},
				{
				name:"EmulateTextNewline915",
				description:"EmulateTextNewline_autoDetect (0): Auto detect<br />EmulateTextNewline_crlf (1): CR LF (Windows)<br />EmulateTextNewline_lf (2): LF (Unix)<br />EmulateTextNewline_cr (3): CR (Mac)"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISfsUndefMountPoint915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! sfsMountPath &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"/\"",
				description:"The name of a virtual filesystem mount point that would otherwise be inherited from group settings, but should instead be undefined for this account. Example: '/SampleMountPoint'\n\nFor this setting to be effective, it needs to match a mount point name inherited from group settings. If group settings define no mount point matching this entry, the undefine entry will be ignored.\n\nIt is not necessary to undefine a group mount point if the intent is to override it with an account-specific definition. An account-specific mount point will automatically override a conflicting mount point inherited from group settings."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISfsUndefMountPoint915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISfsUndefMountPoints915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#ISfsUndefMountPoint915\" onclick=\"SetInterface('ISfsUndefMountPoint915', false);return false;\">ISfsUndefMountPoint915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#ISfsUndefMountPoint915\" onclick=\"SetInterface('ISfsUndefMountPoint915', false);return false;\">ISfsUndefMountPoint915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISfsUndefMountPoints915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#ISfsUndefMountPoint915\" onclick=\"SetInterface('ISfsUndefMountPoint915', false);return false;\">ISfsUndefMountPoint915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#ISfsUndefMountPoints915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#ISfsUndefMountPoint915\" onclick=\"SetInterface('ISfsUndefMountPoint915', false);return false;\">ISfsUndefMountPoint915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#ISfsUndefMountPoint915\" onclick=\"SetInterface('ISfsUndefMountPoint915', false);return false;\">ISfsUndefMountPoint915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#ISfsUndefMountPoint915\" onclick=\"SetInterface('ISfsUndefMountPoint915', false);return false;\">ISfsUndefMountPoint915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#ISfsUndefMountPoint915\" onclick=\"SetInterface('ISfsUndefMountPoint915', false);return false;\">ISfsUndefMountPoint915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#ISfsUndefMountPoint915\" onclick=\"SetInterface('ISfsUndefMountPoint915', false);return false;\">ISfsUndefMountPoint915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#ISfsUndefMountPoint915\" onclick=\"SetInterface('ISfsUndefMountPoint915', false);return false;\">ISfsUndefMountPoint915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISfsWinProviderSettings915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"ownerAndGroup &#x2192; <a href=\"#ISfsWinProviderSettings915\" onclick=\"ScrollToEnum();return false;\">SfsProviderOwnerGroup915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.SfsProviderOwnerGroup.unknownToDefault",
				description:"Disable - Disables use of owner and group settings.\n\nIf unknown owner or group, use default - Unknown owner or group values from the client are replaced with default values.\n\nIf unknown owner or group, error - Unknown owner or group values from the client cause operations to fail."
				},
				{
				name:"acl &#x2192; <a href=\"#ISfsWinProviderSettings915\" onclick=\"ScrollToEnum();return false;\">SfsProviderAcl915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.SfsProviderAcl.unknownToDefault",
				description:"Disable - ACL information will not be sent to the client, and any ACLs received from the client will be ignored. A default DACL and SACL will be used for files and directories created by the client.\n\nIf unknown Ace, use default Acl - Unknown ACE entries received from the client are replaced with a default DACL and/or SACL. This is the default behavior.\n\nIf unknown Ace, error - Unknown ACE entries received from the client cause operations to fail.\n\nIf unknown Ace, ignore - Unknown ACE entries received from the client are ignored."
				},
				{
				name:"showHidden &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to include hidden files and directories in directory listings sent to clients."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISfsWinProviderSettings915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"SfsProviderAcl915",
				description:"SfsProviderAcl_disable (0): Disable<br />SfsProviderAcl_unknownToDefault (1): If unknown ACE, use default ACL<br />SfsProviderAcl_unknownToError (2): If unknown ACE, error<br />SfsProviderAcl_unknownToIgnore (3): If unknown ACE, ignore"
				},
				{
				name:"SfsProviderOwnerGroup915",
				description:"SfsProviderOwnerGroup_disable (0): Disable<br />SfsProviderOwnerGroup_unknownToDefault (1): If unknown owner or group, use default<br />SfsProviderOwnerGroup_unknownToError (2): If unknown owner or group, error"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISignatureAlgs915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"ed25519 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"During server or client authentication, whether to support the signature algorithm Ed25519. This is a variant of Elliptic Curve DSA using the curve well-known as 25519, selected by cryptographers for its presumed security and safety-friendly implementation characteristics.\n\nAt the time of this writing, this is considered a strong signature algorithm offering the equivalent of 128-bit symmetric security."
				},
				{
				name:"ecdsaSecp256k1 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"During server or client authentication, whether to support Elliptic Curve DSA over the elliptic curve secp256k1 using SHA-2 256 hashing.\n\nAt the time of this writing, this is considered a strong signature algorithm offering the equivalent of 128-bit symmetric security. The curve secp256k1 is the same curve as used for signatures in Bitcoin transactions."
				},
				{
				name:"ecdsaNistp256 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"During server or client authentication, whether to support ECDSA signatures over the elliptic curve nistp256 (secp256r1) using SHA-2 256 hashing.\n\nNIST curves are known to have been generated in a non-transparent manner which permits the possibility that a large number of curves were tried, to settle on a few with unknown hidden characteristics."
				},
				{
				name:"ecdhNistp384 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"During server or client authentication, whether to support ECDSA signatures over the elliptic curve nistp384 (secp384r1) using SHA-2 384 hashing.\n\nNIST curves are known to have been generated in a non-transparent manner which permits the possibility that a large number of curves were tried, to settle on a few with unknown hidden characteristics."
				},
				{
				name:"ecdsaNistp521 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"During server or client authentication, whether to support ECDSA signatures over the elliptic curve nistp521 (secp521r1) using SHA-2 512 hashing.\n\nNIST curves are known to have been generated in a non-transparent manner which permits the possibility that a large number of curves were tried, to settle on a few with unknown hidden characteristics."
				},
				{
				name:"rsaSha2_512 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"During server or client authentication, whether to support RSA signatures with SHA-2 512 hashing. This setting is neutral with respect to the size of the RSA key."
				},
				{
				name:"rsaSha2_256 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"During server or client authentication, whether to support RSA signatures with SHA-2 256 hashing. This setting is neutral with respect to the size of the RSA key."
				},
				{
				name:"sshRsa &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"During server or client authentication, whether to support RSA signatures with SHA-1 hashing. This setting is neutral with respect to the size of the RSA key. This is a legacy signature algorithm that needs to be enabled in order to use RSA keys, as long as rsa-sha2-256 and rsa-sha2-512 are not yet widely adopted."
				},
				{
				name:"minRsaKeyBits &#x2192; ULONG {get} {set}",
				defaultValue:"default: 2047",
				description:"During server or client authentication, the minimum size for an RSA key that the server should use or accept.\n\nAt the time of this writing, a 1024-bit RSA key is believed to offer the equivalent of 80-bit symmetric security. This is considered a weak security level, and is disallowed for US government use. We encourage users to use RSA key sizes of at least 2048 bits.\n\nA 2048-bit RSA key is believed to offer the equivalent of 112-bit symmetric security. At the time of this writing, this is considered an acceptable security level.\n\nA 3072-bit RSA key is believed to offer the equivalent of 128-bit symmetric security. At the time of this writing, this is considered a good security level."
				},
				{
				name:"sshDss &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"During server or client authentication, whether to support DSA signatures with SHA-1 hashing.\n\nDSA is a legacy signature algorithm which we do not recommend enabling if this can be avoided. DSA keys are associated with the following issues:\n\n- Only 1024-bit DSA keys are standardized for use in SSH. At the time of this writing, a 1024-bit DSA key is believed to offer the equivalent of 80-bit symmetric security. This is considered a weak security level and is disallowed for US government use.\n\n- Larger DSA keys in SSH are non-standard and do not comply with the NIST specification for large DSA keys. They use SHA-1 hashing, which is considered weak for use in digital signatures and is disallowed for US government use.\n\n- DSA keys are likely to be generated using outdated software. Such software may generate keys that seem large, but which contain a small subgroup order and are actually no stronger than 1024-bit keys.\n\nWe recommend using Ed25519, ECDSA, or RSA keys instead. If using RSA, we recommend at least 2048-bit key sizes."
				},
				{
				name:"minDsaKeyBits &#x2192; ULONG {get} {set}",
				defaultValue:"default: 2048",
				description:"During server or client authentication, the minimum effective size for a DSA key that the server should use or accept. A DSA key can seem large but have smaller effective security if it uses a subgroup order not commensurate with modulus size. The SSH Server will use the smaller of subgroup order and modulus size to estimate effective DSA key size.\n\nDSA is a legacy signature algorithm which we do not recommend enabling if this can be avoided. DSA keys are associated with the following issues:\n\n- Only 1024-bit DSA keys are standardized for use in SSH. At the time of this writing, a 1024-bit DSA key is believed to offer the equivalent of 80-bit symmetric security. This is considered a weak security level and is disallowed for US government use.\n\n- Larger DSA keys in SSH are non-standard and do not comply with the NIST specification for large DSA keys. They use SHA-1 hashing, which is considered weak for use in digital signatures and is disallowed for US government use.\n\n- DSA keys are likely to be generated using outdated software. Such software may generate keys that seem large, but which contain a small subgroup order and are actually no stronger than 1024-bit keys.\n\nWe recommend using Ed25519, ECDSA, or RSA keys instead. If using RSA, we recommend at least 2048-bit key sizes."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISignatureAlgs915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISmtpSending915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"emailSending &#x2192; <a href=\"#ISmtpSending915\" onclick=\"ScrollToEnum();return false;\">EmailSending915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.EmailSending.notConfigured",
				description:"This setting determines in what way emails will be sent. If email sending is configured, the SSH Server can send emails either through an outgoing SMTP server, or directly to mail exchangers of destination domains."
				},
				{
				name:"fromAddress &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The From: email address for email messages sent by this server."
				},
				{
				name:"senderComputerName &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"BvSshServer\"",
				description:"The sender computer name sent at the start of an SMTP connection. Mail exchangers require a non-empty name."
				},
				{
				name:"ipVerPref &#x2192; <a href=\"#ISmtpSending915\" onclick=\"ScrollToEnum();return false;\">IpVersionWN915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.IpVersionWN.none",
				description:"When both IPv4 and IPv6 can be used for an outgoing SMTP connection, which IP version to prefer, if any.\n\nWhen sending directly to a destination domain which lists multiple mail exchangers, this setting takes priority over the MX preference order published by the destination domain."
				},
				{
				name:"relayHost &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The DNS name, IPv4 or IPv6 address of the outgoing SMTP server. Use a DNS name for TLS."
				},
				{
				name:"relayPort &#x2192; ULONG {get} {set}",
				defaultValue:"default: 587",
				description:"The port number of the outgoing SMTP server. Commonly used port numbers include 587 for SMTP with explicit TLS, and 465 for SMTP with implicit TLS."
				},
				{
				name:"relayImplicitTls &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the SSH Server will start TLS at the very beginning of outgoing SMTP connections. Otherwise, connections will be started in plaintext SMTP and STARTTLS will be used if available."
				},
				{
				name:"relayTlsRequirement &#x2192; <a href=\"#ISmtpSending915\" onclick=\"ScrollToEnum();return false;\">TlsAssuranceRelay915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.TlsAssuranceRelay.tlsExactMatch",
				description:"Use this setting to require a specific level of TLS protection for connections to the outgoing SMTP server. The SSH Server will abort outgoing SMTP connections if this level of protection cannot be met.\n\nThis setting does not affect the use of TLS, or lack of TLS, when the outgoing SMTP server delivers messages to destination mail exchangers."
				},
				{
				name:"relayAuthType &#x2192; <a href=\"#ISmtpSending915\" onclick=\"ScrollToEnum();return false;\">SmtpAuthType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.SmtpAuthType.none",
				description:"The outgoing SMTP server may require authentication to send messages. If so, enable authentication here.\n\nPlaintext authentication is secure if a strong TLS requirement is met. In particular, it is secure if the server has authenticated as an exact match for the expected host name."
				},
				{
				name:"relayUsername &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The username with which to authenticate to the outgoing SMTP server."
				},
				{
				name:"relayPassword &#x2192; <a href=\"#IPassword915\" onclick=\"SetInterface('IPassword915', false);return false;\">IPassword915</a> {get}",
				description:"The password with which to authenticate to the outgoing SMTP server."
				},
				{
				name:"tlsRequirement &#x2192; <a href=\"#ISmtpSending915\" onclick=\"ScrollToEnum();return false;\">TlsAssuranceDirect915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.TlsAssuranceDirect.noTls",
				description:"Use this setting to require a specific level of TLS protection for connections to destination mail exchangers. The SSH Server will abort outgoing SMTP connections if this level of protection cannot be met."
				},
				{
				name:"additionalDomains &#x2192; <a href=\"#IAdditionalDomains915\" onclick=\"SetInterface('IAdditionalDomains915', false);return false;\">IAdditionalDomains915</a> {get}",
				description:"When sending directly to destination mail exchangers, the mail exchangers for a particular domain may have DNS names at a different domain. For example, when sending to recipient@example.com, the mail exchanger may in fact be \"mail.cloud-service.example\".\n\nThe Additional domains setting can be used to configure additional domains that will be trusted as mail exchangers for each recipient domain. For example, \"cloud-service.example\" can be set up as an additional domain for \"example.com\", so that email to recipient@example.com can be sent to \"mail.cloud-service.example\".\n\nAdditional domains are only used when the TLS requirement setting is configured to require domain match. If the TLS requirement is lower, the SSH Server will send to whichever mail exchangers are advertised for a domain."
				},
				{
				name:"retrySchedule &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"10 15 25 35 50 75 115 170 215 215 215\"",
				description:"If the initial attempt to send a message fails, the SSH Server will retry sending according to delays configured in this setting. The setting is a space-separated list of retry times, measured in minutes. For example, \"10 15 25\" means the second delivery attempt will take place 10 minutes after the first; the third delivery attempt will take place 15 minutes after; and the fourth delivery attempt 25 minutes after that. Delivery for a particular message fails permanently if this list of retries is fully exhausted."
				},
				{
				name:"useDkim &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"The SSH Server can sign outgoing email messages using DKIM (DomainKeys Identified Mail). This is useful primarily when the SSH Server is configured to send directly to destination mail exchangers."
				},
				{
				name:"dkimSdid &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The DKIM signing domain identifier. This is usually the domain name that originates DKIM-signed messages. For example, if the From address is \"sender@example.com\", then the DKIM SDID is usually \"example.com\". However, it could also be a subdomain or a different domain in specialized circumstances.\n\nFor example, if the DKIM SDID is \"example.com\", and the DKIM selector is \"ssh-server\", then the corresponding DKIM TXT record needs to be configured in your DNS records under: \"ssh-server._domainkey.example.com\""
				},
				{
				name:"dkimSelector &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"This selector identifies the DKIM key within the signing domain.\n\nFor example, if this selector is \"ssh-server\", and the DKIM SDID is \"example.com\", then the corresponding DKIM TXT record needs to be configured in your DNS records under: \"ssh-server._domainkey.example.com\""
				},
				{
				name:"dkimKeypair &#x2192; <a href=\"#IDkimKeypair915\" onclick=\"SetInterface('IDkimKeypair915', false);return false;\">IDkimKeypair915</a> {get}",
				description:"The DKIM private/public keypair which will be used to sign outgoing messages. The public key from this keypair must be published in a DKIM TXT record in your DNS records.\n\nFor example, if the DKIM SDID is \"example.com\", and the DKIM selector is \"ssh-server\", then the corresponding DKIM TXT record containing the public key needs to be configured in your DNS records under: \"ssh-server._domainkey.example.com\""
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISmtpSending915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"EmailSending915",
				description:"EmailSending_notConfigured (0): Not configured<br />EmailSending_sendViaRelay (1): Send via outgoing SMTP server<br />EmailSending_sendDirectly (2): Send to destination MX (advanced)"
				},
				{
				name:"IpVersionWN915",
				description:"IpVersionWN_none (2): None<br />IpVersionWN_ipv4 (0): IPv4<br />IpVersionWN_ipv6 (1): IPv6"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				},
				{
				name:"SmtpAuthType915",
				description:"SmtpAuthType_none (0): No authentication<br />SmtpAuthType_useSuitable (1): Use suitable<br />SmtpAuthType_authPlain (2): PLAIN authentication<br />SmtpAuthType_authCramMd5 (3): CRAM-MD5 authentication<br />SmtpAuthType_authLogin (4): LOGIN authentication"
				},
				{
				name:"TlsAssuranceDirect915",
				description:"TlsAssuranceDirect_noTls (0): No TLS<br />TlsAssuranceDirect_tlsNoHostAuth (1): TLS, no SMTP server authentication<br />TlsAssuranceDirect_tlsAnyServer (2): TLS, any authenticated server<br />TlsAssuranceDirect_tlsDomainMatch (3): TLS, destination domain match"
				},
				{
				name:"TlsAssuranceRelay915",
				description:"TlsAssuranceRelay_noTls (0): No TLS<br />TlsAssuranceRelay_tlsNoHostAuth (1): TLS, no server authentication<br />TlsAssuranceRelay_tlsAnyServer (2): TLS, server authenticates as anything<br />TlsAssuranceRelay_tlsDomainMatch (3): TLS, server is in expected domain<br />TlsAssuranceRelay_tlsExactMatch (4): TLS, server name is exact match"
				}
			]
			},
			{
			name:"ISrvSideC2SRules915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"ipv4 &#x2192; <a href=\"#ISrvSideIPv4C2SRules915\" onclick=\"SetInterface('ISrvSideIPv4C2SRules915', false);return false;\">ISrvSideIPv4C2SRules915</a> {get}",
				description:"Defines port forwarding rules for IPv4 connections established in the direction from the SSH client to the server."
				},
				{
				name:"ipv6 &#x2192; <a href=\"#ISrvSideIPv6C2SRules915\" onclick=\"SetInterface('ISrvSideIPv6C2SRules915', false);return false;\">ISrvSideIPv6C2SRules915</a> {get}",
				description:"Defines port forwarding rules for IPv6 connections established in the direction from the SSH client to the server."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISrvSideC2SRules915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISrvSideIPv4C2SRule915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! listenIntf &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"0.0.0.0\"",
				description:"The client-local IPv4 address at which the SSH Server should request the client to wait for incoming connections for this port forwarding rule.\n\nUse 127.0.0.1 to accept only connections originating from other programs on the same client machine.\n\nUse 0.0.0.0 to accept connections arriving on any of the client's network interfaces.\n\nUse a specific local IP address to accept only connections originating from that network interface on the client machine."
				},
				{
				flag:3,
				name:"&#155; ! listenPort &#x2192; ULONG {get} {set}",
				defaultValue:"default: 999",
				description:"The port at which the client should listen."
				},
				{
				name:"targetHost &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The destination server to which the SSH Server should forward any connections received from the client via this rule. This can be a DNS name or an IP address."
				},
				{
				name:"targetPort &#x2192; ULONG {get} {set}",
				defaultValue:"default: 999",
				description:"The destination port to which the SSH Server should forward any connections received from the client via this rule."
				},
				{
				name:"connectProfile &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The name of the configured connect profile the SSH Server should use when forwarding the connection.",
				values:"Has to be the name of a configured connect profile."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Arbitrary information describing this rule. This text will be sent to the client if the client indicates support for server-side rule descriptions, and if enabled in SSH Server settings under Advanced settings > Server > Send forwarding rule descriptions."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISrvSideIPv4C2SRule915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISrvSideIPv4C2SRules915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#ISrvSideIPv4C2SRule915\" onclick=\"SetInterface('ISrvSideIPv4C2SRule915', false);return false;\">ISrvSideIPv4C2SRule915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#ISrvSideIPv4C2SRule915\" onclick=\"SetInterface('ISrvSideIPv4C2SRule915', false);return false;\">ISrvSideIPv4C2SRule915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISrvSideIPv4C2SRules915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#ISrvSideIPv4C2SRule915\" onclick=\"SetInterface('ISrvSideIPv4C2SRule915', false);return false;\">ISrvSideIPv4C2SRule915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#ISrvSideIPv4C2SRules915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#ISrvSideIPv4C2SRule915\" onclick=\"SetInterface('ISrvSideIPv4C2SRule915', false);return false;\">ISrvSideIPv4C2SRule915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#ISrvSideIPv4C2SRule915\" onclick=\"SetInterface('ISrvSideIPv4C2SRule915', false);return false;\">ISrvSideIPv4C2SRule915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#ISrvSideIPv4C2SRule915\" onclick=\"SetInterface('ISrvSideIPv4C2SRule915', false);return false;\">ISrvSideIPv4C2SRule915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#ISrvSideIPv4C2SRule915\" onclick=\"SetInterface('ISrvSideIPv4C2SRule915', false);return false;\">ISrvSideIPv4C2SRule915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#ISrvSideIPv4C2SRule915\" onclick=\"SetInterface('ISrvSideIPv4C2SRule915', false);return false;\">ISrvSideIPv4C2SRule915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#ISrvSideIPv4C2SRule915\" onclick=\"SetInterface('ISrvSideIPv4C2SRule915', false);return false;\">ISrvSideIPv4C2SRule915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISrvSideIPv4S2CRule915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! listenIntf &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"0.0.0.0\"",
				description:"The local IPv4 address at which the SSH Server will wait for incoming connections for this port forwarding rule.\n\nUse 127.0.0.1 to accept only connections originating from other programs on the same server machine.\n\nUse 0.0.0.0 to accept connections arriving on any of the server's network interfaces.\n\nUse a specific local IP address to accept only connections originating from that network interface."
				},
				{
				flag:3,
				name:"&#155; ! listenPort &#x2192; ULONG {get} {set}",
				defaultValue:"default: 0",
				description:"The local port at which the SSH Server should listen."
				},
				{
				name:"targetHost &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The destination server to which the SSH Server should request the client to forward any connections accepted by this rule. This can be a DNS name or an IP address."
				},
				{
				name:"targetPort &#x2192; ULONG {get} {set}",
				defaultValue:"default: 999",
				description:"The destination port to which the SSH Server should request the client to forward any connections accepted by this rule."
				},
				{
				name:"acceptRules &#x2192; <a href=\"#IAddressAcceptRulesForIPv4_915\" onclick=\"SetInterface('IAddressAcceptRulesForIPv4_915', false);return false;\">IAddressAcceptRulesForIPv4_915</a> {get}",
				description:"Additional rules mandating from which servers forwarded connections should be accepted."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Arbitrary information describing this rule. This text will be sent to the client if the client indicates support for server-side rule descriptions, and if enabled in SSH Server settings under Advanced settings > Server > Send forwarding rule descriptions."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISrvSideIPv4S2CRule915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISrvSideIPv4S2CRules915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#ISrvSideIPv4S2CRule915\" onclick=\"SetInterface('ISrvSideIPv4S2CRule915', false);return false;\">ISrvSideIPv4S2CRule915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#ISrvSideIPv4S2CRule915\" onclick=\"SetInterface('ISrvSideIPv4S2CRule915', false);return false;\">ISrvSideIPv4S2CRule915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISrvSideIPv4S2CRules915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#ISrvSideIPv4S2CRule915\" onclick=\"SetInterface('ISrvSideIPv4S2CRule915', false);return false;\">ISrvSideIPv4S2CRule915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#ISrvSideIPv4S2CRules915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#ISrvSideIPv4S2CRule915\" onclick=\"SetInterface('ISrvSideIPv4S2CRule915', false);return false;\">ISrvSideIPv4S2CRule915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#ISrvSideIPv4S2CRule915\" onclick=\"SetInterface('ISrvSideIPv4S2CRule915', false);return false;\">ISrvSideIPv4S2CRule915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#ISrvSideIPv4S2CRule915\" onclick=\"SetInterface('ISrvSideIPv4S2CRule915', false);return false;\">ISrvSideIPv4S2CRule915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#ISrvSideIPv4S2CRule915\" onclick=\"SetInterface('ISrvSideIPv4S2CRule915', false);return false;\">ISrvSideIPv4S2CRule915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#ISrvSideIPv4S2CRule915\" onclick=\"SetInterface('ISrvSideIPv4S2CRule915', false);return false;\">ISrvSideIPv4S2CRule915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#ISrvSideIPv4S2CRule915\" onclick=\"SetInterface('ISrvSideIPv4S2CRule915', false);return false;\">ISrvSideIPv4S2CRule915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISrvSideIPv6C2SRule915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! listenIntf &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"::\"",
				description:"The client-local IPv6 address at which the SSH Server should request the client to wait for incoming connections for this port forwarding rule.\n\nUse '::1' to accept only connections originating from other programs on the same client machine.\n\nUse '::' to accept connections arriving on any of the client's network interfaces.\n\nUse a specific local IP address to accept only connections originating from that network interface on the client machine."
				},
				{
				flag:3,
				name:"&#155; ! listenPort &#x2192; ULONG {get} {set}",
				defaultValue:"default: 999",
				description:"The port at which the client should listen."
				},
				{
				name:"targetHost &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The destination server to which the SSH Server should forward any connections received from the client via this rule. This can be a DNS name or an IP address."
				},
				{
				name:"targetPort &#x2192; ULONG {get} {set}",
				defaultValue:"default: 999",
				description:"The destination port to which the SSH Server should forward any connections received from the client via this rule."
				},
				{
				name:"connectProfile &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The name of the configured connect profile the SSH Server should use when forwarding the connection.",
				values:"Has to be the name of a configured connect profile."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Arbitrary information describing this rule. This text will be sent to the client if the client indicates support for server-side rule descriptions, and if enabled in SSH Server settings under Advanced settings > Server > Send forwarding rule descriptions."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISrvSideIPv6C2SRule915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISrvSideIPv6C2SRules915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#ISrvSideIPv6C2SRule915\" onclick=\"SetInterface('ISrvSideIPv6C2SRule915', false);return false;\">ISrvSideIPv6C2SRule915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#ISrvSideIPv6C2SRule915\" onclick=\"SetInterface('ISrvSideIPv6C2SRule915', false);return false;\">ISrvSideIPv6C2SRule915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISrvSideIPv6C2SRules915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#ISrvSideIPv6C2SRule915\" onclick=\"SetInterface('ISrvSideIPv6C2SRule915', false);return false;\">ISrvSideIPv6C2SRule915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#ISrvSideIPv6C2SRules915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#ISrvSideIPv6C2SRule915\" onclick=\"SetInterface('ISrvSideIPv6C2SRule915', false);return false;\">ISrvSideIPv6C2SRule915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#ISrvSideIPv6C2SRule915\" onclick=\"SetInterface('ISrvSideIPv6C2SRule915', false);return false;\">ISrvSideIPv6C2SRule915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#ISrvSideIPv6C2SRule915\" onclick=\"SetInterface('ISrvSideIPv6C2SRule915', false);return false;\">ISrvSideIPv6C2SRule915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#ISrvSideIPv6C2SRule915\" onclick=\"SetInterface('ISrvSideIPv6C2SRule915', false);return false;\">ISrvSideIPv6C2SRule915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#ISrvSideIPv6C2SRule915\" onclick=\"SetInterface('ISrvSideIPv6C2SRule915', false);return false;\">ISrvSideIPv6C2SRule915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#ISrvSideIPv6C2SRule915\" onclick=\"SetInterface('ISrvSideIPv6C2SRule915', false);return false;\">ISrvSideIPv6C2SRule915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISrvSideIPv6S2CRule915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! listenIntf &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"::\"",
				description:"The local IPv6 address at which the SSH Server will wait for incoming connections for this port forwarding rule.\n\nUse '::1' to accept only connections originating from other programs on the same server machine.\n\nUse '::' to accept connections arriving on any of the server's network interfaces.\n\nUse a specific local IP address to accept only connections originating from that network interface."
				},
				{
				flag:3,
				name:"&#155; ! listenPort &#x2192; ULONG {get} {set}",
				defaultValue:"default: 0",
				description:"The local port at which the SSH Server should listen."
				},
				{
				name:"targetHost &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The destination server to which the SSH Server should request the client to forward any connections accepted by this rule. This can be a DNS name or an IP address."
				},
				{
				name:"targetPort &#x2192; ULONG {get} {set}",
				defaultValue:"default: 999",
				description:"The destination port to which the SSH Server should request the client to forward any connections accepted by this rule."
				},
				{
				name:"acceptRules &#x2192; <a href=\"#IAddressAcceptRules915\" onclick=\"SetInterface('IAddressAcceptRules915', false);return false;\">IAddressAcceptRules915</a> {get}",
				description:"Additional rules mandating from which servers forwarded connections should be accepted."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Arbitrary information describing this rule. This text will be sent to the client if the client indicates support for server-side rule descriptions, and if enabled in SSH Server settings under Advanced settings > Server > Send forwarding rule descriptions."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISrvSideIPv6S2CRule915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISrvSideIPv6S2CRules915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#ISrvSideIPv6S2CRule915\" onclick=\"SetInterface('ISrvSideIPv6S2CRule915', false);return false;\">ISrvSideIPv6S2CRule915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#ISrvSideIPv6S2CRule915\" onclick=\"SetInterface('ISrvSideIPv6S2CRule915', false);return false;\">ISrvSideIPv6S2CRule915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISrvSideIPv6S2CRules915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#ISrvSideIPv6S2CRule915\" onclick=\"SetInterface('ISrvSideIPv6S2CRule915', false);return false;\">ISrvSideIPv6S2CRule915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#ISrvSideIPv6S2CRules915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#ISrvSideIPv6S2CRule915\" onclick=\"SetInterface('ISrvSideIPv6S2CRule915', false);return false;\">ISrvSideIPv6S2CRule915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#ISrvSideIPv6S2CRule915\" onclick=\"SetInterface('ISrvSideIPv6S2CRule915', false);return false;\">ISrvSideIPv6S2CRule915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#ISrvSideIPv6S2CRule915\" onclick=\"SetInterface('ISrvSideIPv6S2CRule915', false);return false;\">ISrvSideIPv6S2CRule915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#ISrvSideIPv6S2CRule915\" onclick=\"SetInterface('ISrvSideIPv6S2CRule915', false);return false;\">ISrvSideIPv6S2CRule915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#ISrvSideIPv6S2CRule915\" onclick=\"SetInterface('ISrvSideIPv6S2CRule915', false);return false;\">ISrvSideIPv6S2CRule915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#ISrvSideIPv6S2CRule915\" onclick=\"SetInterface('ISrvSideIPv6S2CRule915', false);return false;\">ISrvSideIPv6S2CRule915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISrvSideS2CRules915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"ipv4 &#x2192; <a href=\"#ISrvSideIPv4S2CRules915\" onclick=\"SetInterface('ISrvSideIPv4S2CRules915', false);return false;\">ISrvSideIPv4S2CRules915</a> {get}",
				description:"Defines port forwarding rules for IPv4 connections established in the direction from the SSH Server to the client."
				},
				{
				name:"ipv6 &#x2192; <a href=\"#ISrvSideIPv6S2CRules915\" onclick=\"SetInterface('ISrvSideIPv6S2CRules915', false);return false;\">ISrvSideIPv6S2CRules915</a> {get}",
				description:"Defines port forwarding rules for IPv6 connections established in the direction from the SSH Server to the client."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISrvSideS2CRules915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISshAlgorithms915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"kex &#x2192; <a href=\"#IKex915\" onclick=\"SetInterface('IKex915', false);return false;\">IKex915</a> {get}",
				description:"An SSH connection begins with a cryptographic exchange which uses an asymmetric cryptographic algorithm - an algorithm based on public key cryptography - for the client and server to securely agree on key material that will be used to encrypt and protect the integrity of the SSH connection. Compared to symmetric algorithms, key exchange algorithms are computationally expensive, but provide secure encryption parameters for the connection. Key exchange algorithms supported by the SSH Server are based on Diffie-Hellman and Elliptic Curve Diffie-Hellman. These algorithms use ephemeral keys and offer forward secrecy: the compromise of long-term keys, such as host keys, does not compromise previous connections."
				},
				{
				name:"sig &#x2192; <a href=\"#ISignatureAlgs915\" onclick=\"SetInterface('ISignatureAlgs915', false);return false;\">ISignatureAlgs915</a> {get}",
				description:"Public key signatures are used in a majority of SSH connections for server authentication, and in many connections for client authentication. Client and server authentication take place at separate times, and use separate public keys. Supported public key signature algorithms include RSA and DSA with large key sizes; and Elliptic Curve DSA, which uses comparatively smaller keys."
				},
				{
				name:"encr &#x2192; <a href=\"#IEncryption915\" onclick=\"SetInterface('IEncryption915', false);return false;\">IEncryption915</a> {get}",
				description:"After key exchange, data sent over an SSH connection is encrypted using a symmetric encryption algorithm. These are the algorithms with which encryption strength is measured in claims such as \"128-bit encryption\". Some of the supported encryption algorithms also provide integrity protection."
				},
				{
				name:"mac &#x2192; <a href=\"#IMac915\" onclick=\"SetInterface('IMac915', false);return false;\">IMac915</a> {get}",
				description:"Also known as MAC (Message Authentication Code) algorithms, these algorithms provide cryptographic assurance that data received over the SSH connection has not been changed after sending. These algorithms defend against attacks that alter data during transmission, and detect accidental errors not detected by the TCP checksum. One of these algorithms is used if a negotiated encryption algorithm does not include built-in integrity protection."
				},
				{
				name:"cmpr &#x2192; <a href=\"#ICompression915\" onclick=\"SetInterface('ICompression915', false);return false;\">ICompression915</a> {get}",
				description:"SSH connections can provide built-in, transparent compression. Most popular clients support it, but there are also clients that do not. Compression moderately increases the CPU cost of connections, but can substantially increase transmission speeds for types of data that are not already compressed. Its main security disadvantage is that it increases the attack surface of the SSH Server."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISshAlgorithms915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISshProfile915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! profileName &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The name of this SSH profile. Other parts of SSH Server settings will reference this SSH profile name."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"An optional comment describing this profile."
				},
				{
				name:"sshHost &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The destination SSH server to which this profile connects. The destination server does not have to use Bitvise SSH Server."
				},
				{
				name:"sshPort &#x2192; ULONG {get} {set}",
				defaultValue:"default: 22",
				description:"The destination SSH server port to which this profile connects."
				},
				{
				name:"connectProfile &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The outgoing connection can be made directly; or it can use a specific network interface, or go through a proxy server. These outgoing connection settings are configured in a separate Connect profile. This setting specifies the configured Connect profile to use for connections to the destination server, when using this SSH profile.\n\nThe default Connect profile simply uses direct outgoing connections. This usually does not need to be changed.",
				values:"Has to be the name of a configured connect profile."
				},
				{
				name:"obfuscation &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to enable SSH protocol obfuscation. Obfuscation is supported by some SSH servers, and makes it more difficult for an outside observer to detect that the protocol being used is SSH.\n\nImportant: If you enable obfuscation, the connection will not work unless the server supports it, and has it enabled, and uses the same obfuscation keyword. If these settings are not perfectly synchronized, the connection will not work, and there will be no useful information about why not.\n\nThe obfuscation protocol implemented is obfuscated-openssh:\nhttps://github.com/brl/obfuscated-openssh/blob/master/README"
				},
				{
				name:"obfsKeyword &#x2192; <a href=\"#IPassword915\" onclick=\"SetInterface('IPassword915', false);return false;\">IPassword915</a> {get}",
				description:"An optional keyword for SSH protocol obfuscation. This must match the keyword (if any) configured on the destination server. If there's a mismatch, the connection will not work, and there will be no useful information about why not."
				},
				{
				name:"hostKeys &#x2192; <a href=\"#IHostKeys915\" onclick=\"SetInterface('IHostKeys915', false);return false;\">IHostKeys915</a> {get}",
				description:"List of host keys and/or fingerprints that the SSH Server will trust when connecting to the destination server. Host keys authenticate the destination server during SSH key exchange. This is critical to secure subsequent client authentication and the connection that follows. If the server is not properly authenticated using a host key which you imported, or a fingerprint which you verified, the connection is vulnerable to a man-in-the-middle attack."
				},
				{
				name:"userName &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The user name to send when connecting to the destination SSH server using this SSH profile."
				},
				{
				name:"authMethods &#x2192; <a href=\"#IUserAuthMethods915\" onclick=\"SetInterface('IUserAuthMethods915', false);return false;\">IUserAuthMethods915</a> {get}",
				description:"One or more authentication methods to use when connecting to the destination SSH server using this SSH profile."
				},
				{
				name:"elevation &#x2192; <a href=\"#ISshProfile915\" onclick=\"ScrollToEnum();return false;\">DefaultYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultYesNo.defaultValue",
				description:"If the destination SSH server supports the \"elevation\" extension, whether to request elevation; request no elevation; or use the server's default behavior. Requires Send EXT_INFO to be enabled.\n\nElevation is used on Windows servers when an account has administrative access, but does not necessarily need to use it. An elevated connection will use the full administrative security context. A non-elevated connection will use a limited security context that does not assert the user's administrative privileges."
				},
				{
				name:"spn &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"This setting is used only if the connection uses Kerberos (GSS) key exchange, or Kerberos authentication. In this case, if this setting is left empty, the SSH Server will generate a default SPN based on the host name of the destination SSH server. You can configure this setting if a different SPN is needed to use Kerberos successfully."
				},
				{
				name:"gssKex &#x2192; <a href=\"#ISshProfile915\" onclick=\"ScrollToEnum();return false;\">GssKex915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.GssKex.keep",
				description:"What to do with GSS key exchange algorithms if they appear in the Key exchange algorithms setting (either the default algorithm list, or explicitly configured). GSS key exchange is special because it requires a Windows domain trust relationship between the client and the server, which might not necessarily exist. The server is authenticated using Kerberos instead of SSH host keys, and the connection may fail if the Service principal name is incorrect.\n\nYou can use this setting to either prefer the use of GSS key exchange (Prefer), prevent the use of GSS key exchange (Disable), or let the Key exchange algorithms setting control the preference order (Keep)."
				},
				{
				name:"delegation &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"When using GSS/Kerberos key exchange or user authentication, whether to permit the server to impersonate the user when connecting to network resources on other computers (e.g. when connecting to a network share). This is a security risk if the server is untrusted, but not a greater security risk than logging in with a domain account using regular password authentication. For this type of broad, unrestricted delegation to work, it must also be enabled by the network administrator in two places in the Active Directory: (1) in the settings for the connecting domain account, and (2) in the settings for the destination server computer. The server must also be ready to accept delegation; Bitvise SSH Server supports this."
				},
				{
				name:"kexAlgs &#x2192; <a href=\"#IPriorityNameList915\" onclick=\"SetInterface('IPriorityNameList915', false);return false;\">IPriorityNameList915</a> {get}",
				description:"Allows you to enable or disable key exchange algorithms for the outgoing connection and configure their order of preference.\n\nAn SSH connection negotiates a single key exchange algorithm which is used to authenticate the server and exchange initial cryptographic material which is subsequently used to protect the session.\n\nThe SSH key exchange does not authenticate the client. Client authentication takes place after key exchange, over an already encrypted connection."
				},
				{
				name:"hostKeyAlgs &#x2192; <a href=\"#IPriorityNameList915\" onclick=\"SetInterface('IPriorityNameList915', false);return false;\">IPriorityNameList915</a> {get}",
				description:"Allows you to enable or disable host key algorithms for the outgoing connection and configure their order of preference.\n\nAn SSH connection negotiates a single host key algorithm which is used to select the public key which the destination server uses to authenticate itself. The selected host key must be one which the client trusts in advance, either by having imported the host key, or by having configured the host key fingerprint."
				},
				{
				name:"cipherAlgs &#x2192; <a href=\"#IPriorityNameList915\" onclick=\"SetInterface('IPriorityNameList915', false);return false;\">IPriorityNameList915</a> {get}",
				description:"Allows you to enable or disable encryption algorithms for the outgoing connection and configure their order of preference.\n\nAn SSH connection negotiates two encryption algorithms, one for each direction of the connection. Usually, the same algorithm is used to encrypt data in both directions."
				},
				{
				name:"macAlgs &#x2192; <a href=\"#IPriorityNameList915\" onclick=\"SetInterface('IPriorityNameList915', false);return false;\">IPriorityNameList915</a> {get}",
				description:"Allows you to enable or disable data integrity algorithms for the outgoing connection and configure their order of preference.\n\nAn SSH connection negotiates two data integrity algorithms, one for each direction of the connection. Usually, the same algorithm is used to check data integrity in both directions.\n\nSome encryption algorithms, for example AES GCM, integrate data integrity as well. In this case, a separate data integrity algorithm is not negotiated."
				},
				{
				name:"comprAlgs &#x2192; <a href=\"#IPriorityNameList915\" onclick=\"SetInterface('IPriorityNameList915', false);return false;\">IPriorityNameList915</a> {get}",
				description:"Allows you to enable or disable compression algorithms for the outgoing connection and configure their order of preference.\n\nAn SSH connection negotiates two compression algorithms, one for each direction of the connection. Usually, the same algorithm is used to compress data in both directions."
				},
				{
				name:"sendExtInfo &#x2192; <a href=\"#ISshProfile915\" onclick=\"ScrollToEnum();return false;\">DefaultYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultYesNo.defaultValue",
				description:"The message SSH_MSG_EXT_INFO (RFC 8308) needs to be supported by the destination server to perform client authentication using rsa-sha2-256 or rsa-sha2-512; to send a session elevation preference; or to enable the no-flow-control extension. By default, the SSH Server will send EXT_INFO if the destination server supports it.\n\nSome destination servers do not properly support SSH_MSG_EXT_INFO, even though they advertise they support it. In most such cases, the SSH Server will automatically detect such remote software and will not send EXT_INFO. Otherwise, you can use this setting to disable sending of EXT_INFO."
				},
				{
				name:"noFlowControl &#x2192; <a href=\"#ISshProfile915\" onclick=\"ScrollToEnum();return false;\">NoFlowControl915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.NoFlowControl.disabled",
				description:"The SSH protocol implements additional flow control on top of flow control already provided by TCP. Flow control on the level of the SSH protocol is necessary for connections that use multiple SSH channels. This flow control is unnecessary and may reduce efficiency for connections that only use a single channel.\n\nUnattended connections, such as those initiated by the SSH Server, will commonly use a single channel. If the server supports the no-flow-control extension, using it may improve performance."
				},
				{
				name:"globalRequestCapable &#x2192; <a href=\"#ISshProfile915\" onclick=\"ScrollToEnum();return false;\">GlobalRequestCapable915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.GlobalRequestCapable.builtInRules",
				description:"The SSH Server uses global requests to implement features such as keep-alive / broken session detection. The SSH protocol specification requires that all servers and clients gracefully respond to unrecognized global requests. However, there exist very rare servers which disconnect on receiving a global request, or do not handle it correctly. In most such cases, the SSH Server will automatically detect such remote software and will not send global requests. Otherwise, you can use this setting to disable sending of global requests."
				},
				{
				name:"startReexchange &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"During a lengthy connection, regular key re-exchange protects against a resourceful attacker who could analyze exchanged encrypted data and recover encryption keys. Regular key re-exchange is required by the SSH specification, but there exist destination servers that will disconnect if the connecting party starts it.\n\nIf this setting is enabled, the SSH Server will automatically initiate key re-exchange at regular intervals. If disabled, the SSH Server will still accept key re-exchange if initiated by the destination server, but will not initiate it.\n\nDepending on the negotiated encryption algorithm and the amount of data transferred, disabling key re-exchange may significantly compromise connection security. If you are considering disabling key re-exchange, consider also updating software on the destination server, or replacing it with software that supports key re-exchange."
				},
				{
				name:"keepAlive &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If there is no traffic over an SSH connection for longer than this number of seconds, the SSH Server will send to the destination server a small packet. This verifies whether the TCP connection is still active: certain network connections can break without either party being notified. This can also keep an intermediate network component from terminating the connection due to perceived inactivity.\n\nIf connections to this server keep disconnecting when idle, try a low non-zero value: for example, 5. To disable this feature, configure 0."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISshProfile915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"DefaultYesNo915",
				description:"DefaultYesNo_defaultValue (0): Default<br />DefaultYesNo_yes (1): Yes<br />DefaultYesNo_no (2): No"
				},
				{
				name:"GlobalRequestCapable915",
				description:"GlobalRequestCapable_builtInRules (0): Use built-in rules<br />GlobalRequestCapable_yes (1): Yes<br />GlobalRequestCapable_no (2): No"
				},
				{
				name:"GssKex915",
				description:"GssKex_keep (0): Keep<br />GssKex_prefer (1): Prefer<br />GssKex_disable (2): Disable"
				},
				{
				name:"NoFlowControl915",
				description:"NoFlowControl_disabled (1): Disabled<br />NoFlowControl_supported (115): Supported<br />NoFlowControl_preferred (112): Preferred"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ISshProfiles915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#ISshProfile915\" onclick=\"SetInterface('ISshProfile915', false);return false;\">ISshProfile915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#ISshProfile915\" onclick=\"SetInterface('ISshProfile915', false);return false;\">ISshProfile915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ISshProfiles915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#ISshProfile915\" onclick=\"SetInterface('ISshProfile915', false);return false;\">ISshProfile915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#ISshProfiles915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#ISshProfile915\" onclick=\"SetInterface('ISshProfile915', false);return false;\">ISshProfile915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#ISshProfile915\" onclick=\"SetInterface('ISshProfile915', false);return false;\">ISshProfile915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#ISshProfile915\" onclick=\"SetInterface('ISshProfile915', false);return false;\">ISshProfile915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#ISshProfile915\" onclick=\"SetInterface('ISshProfile915', false);return false;\">ISshProfile915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#ISshProfile915\" onclick=\"SetInterface('ISshProfile915', false);return false;\">ISshProfile915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#ISshProfile915\" onclick=\"SetInterface('ISshProfile915', false);return false;\">ISshProfile915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IStats915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"collectStats &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the SSH Server will collect and store server usage statistics."
				},
				{
				name:"maxMonthlyEntries &#x2192; ULONG {get} {set}",
				defaultValue:"default: 60",
				description:"The maximum number of monthly statistics entries maintained per account, group, or globally for the server. If this limit is set to 0, no monthly statistics will be collected and stored. If it is set to 1, monthly statistics will be collected and stored for the current month only."
				},
				{
				name:"maxDailyEntries &#x2192; ULONG {get} {set}",
				defaultValue:"default: 750",
				description:"The maximum number of daily statistics entries maintained per account, group, or globally for the server. If this limit is set to 0, no daily statistics will be collected and stored. If it is set to 1, daily statistics will be collected and stored for the current day only."
				},
				{
				name:"fileRestrictedAccess &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"When enabled, the server will create new stats files with an access control list that permits access only to the local administrators group and to Local System. When disabled, new stats files will get a default access control list inherited from their parent directory."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IStats915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IStatsQuotas915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"onDownloadQuotaReached &#x2192; <a href=\"#IStatsQuotas915\" onclick=\"ScrollToEnum();return false;\">OnStatsQuotaReached915</a> {get} {set}",
				defaultValue:"Default value varies depending on context.",
				description:"For members of this group whose individual settings are not defined differently, whether to drop the connection or restrict the download speed once the specified monthly download quota has been reached for each user."
				},
				{
				name:"downloadQuotaMb &#x2192; ULONG {get} {set}",
				defaultValue:"default: 2000",
				description:"For members of this group whose individual settings are not defined differently, the monthly download quota for each user."
				},
				{
				name:"maxDownloadBandwidth &#x2192; ULONG {get} {set}",
				defaultValue:"default: 100",
				description:"For members of this group whose individual settings are not defined differently, the maximum speed with which each user can receive data from this server once the quota is reached."
				},
				{
				name:"onUploadQuotaReached &#x2192; <a href=\"#IStatsQuotas915\" onclick=\"ScrollToEnum();return false;\">OnStatsQuotaReached915</a> {get} {set}",
				defaultValue:"Default value varies depending on context.",
				description:"For members of this group whose individual settings are not defined differently, whether to drop the connection or restrict the upload speed once the specified monthly upload quota has been reached for each user."
				},
				{
				name:"uploadQuotaMb &#x2192; ULONG {get} {set}",
				defaultValue:"default: 2000",
				description:"For members of this group whose individual settings are not defined differently, the monthly upload quota for each user."
				},
				{
				name:"maxUploadBandwidth &#x2192; ULONG {get} {set}",
				defaultValue:"default: 100",
				description:"For members of this group whose individual settings are not defined differently, the maximum speed with which each user can send data to this server once the quota is reached."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IStatsQuotas915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"OnStatsQuotaReached915",
				description:"OnStatsQuotaReached_none (1): None<br />OnStatsQuotaReached_dropConnection (2): Drop connection<br />OnStatsQuotaReached_limitBandwidthMbps (3): Limit bandwidth MB/s<br />OnStatsQuotaReached_limitBandwidthKbps (4): Limit bandwidth KB/s"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ITask915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! type &#x2192; <a href=\"#ITask915\" onclick=\"ScrollToEnum();return false;\">TaskType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.TaskType.execCommand",
				description:"One of the task types supported by the SSH Server."
				},
				{
				flag:3,
				name:"&#155; ! name &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Arbitrary, non-empty name for the task. Must be unique among configured tasks."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"An optional comment describing this task."
				},
				{
				name:"enabled &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If the task is disabled, the SSH Server will not run it."
				},
				{
				name:"minTimeBetweenRunsMins &#x2192; ULONG {get} {set}",
				defaultValue:"default: 0",
				description:"If set to a non-zero value, the task will not be queued to run until this number of minutes has elapsed since the task was last queued. Any triggers that would cause this task to run will be ignored until this number of minutes elapses."
				},
				{
				name:"keepLogFilesDays &#x2192; ULONG {get} {set}",
				defaultValue:"default: 100",
				description:"The SSH Server will archive or delete log files older than this setting."
				},
				{
				name:"archive &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"When enabled, the server will archive log files before deleting them."
				},
				{
				name:"archivePathType &#x2192; <a href=\"#ITask915\" onclick=\"ScrollToEnum();return false;\">LogArchivalPathType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.LogArchivalPathType.relToLogDir",
				description:"Whether the log archive path should be interpreted relative to the SSH Server's installation directory, or the configured textual log file directory. If the path is absolute, this setting does not have an impact."
				},
				{
				name:"archivePath &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"Archive\"",
				description:"The directory to which log files will be archived. Accepts absolute paths, relative paths and UNC paths. If the path is relative, the setting Log archive path type determines how it will be interpreted."
				},
				{
				name:"archiveRestrictAccess &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the SSH Server will create archive files with an access control list that permits access only to the local administrators group and to Local System. If disabled, archive files will get a default access control list inherited from their parent directory."
				},
				{
				name:"command &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The command to execute.\n\nThe command needs to invoke a Windows executable: this can be a program or a shell. To run a script, prefix it with the executable name for the shell that needs to run it. To invoke a PowerShell script, enter it like: \"PowerShell C:\\Path\\Script.ps1\" (without the quotes). To invoke a Command Prompt batch file or command, enter it like: \"cmd /c C:\\Path\\Batch.cmd\".\n\nWhen executing PowerShell scripts, a script execution policy needs to be configured for the user. Each Windows account can have two separate script execution policies, one for 32-bit PowerShell and one for 64-bit. It is also possible to use the parameter \"-executionPolicy bypass\".\n\r\nIf the task is triggered by a log event, the environment variable \"SSHLOGEVENT\" is defined. This contains event data in JSON format. This can be loaded in PowerShell using \"ConvertFrom-Json $env:SSHLOGEVENT\"."
				},
				{
				name:"workDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The working directory in which the command will be run.\n\nIf an empty string is configured, the command will be run in the SSH Server's installation directory."
				},
				{
				name:"taskProfile &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The name of the task profile to use when running this command. The task profile defines the environment in which the task is run, including the Windows security context and any Windows file shares that should be available to the command.",
				values:"Must match the name of a configured task profile."
				},
				{
				name:"maxWaitTime &#x2192; ULONG {get} {set}",
				defaultValue:"default: 300",
				description:"The maximum number of seconds the SSH Server should wait for the command to complete. If this time expires, the SSH Server will terminate the child process."
				},
				{
				name:"shutdownWaitTime &#x2192; ULONG {get} {set}",
				defaultValue:"default: 5",
				description:"The maximum number of seconds the SSH Server should wait for the command to complete when the SSH Server is shutting down. If this time expires, the setting If task expires during shutdown controls how to proceed."
				},
				{
				name:"onShutdownTimeout &#x2192; <a href=\"#ITask915\" onclick=\"ScrollToEnum();return false;\">TaskShutdownPolicy915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.TaskShutdownPolicy.stop",
				description:"The action to take if the task times out while the SSH Server is shutting down. See also the setting Wait time on shutdown."
				},
				{
				name:"dupTaskPolicy &#x2192; <a href=\"#ITask915\" onclick=\"ScrollToEnum();return false;\">DuplicateTaskPolicy915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DuplicateTaskPolicy.doNotStart",
				description:"How to execute the task when there are existing instances of the same task already running."
				},
				{
				name:"jobObject &#x2192; <a href=\"#ITask915\" onclick=\"ScrollToEnum();return false;\">JobObject915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.JobObject.noBreakaway",
				description:"Whether tasks that execute commands under this profile should insulate commands using job objects. A job object ensures that when a task completes, all processes started by the task are also terminated. This means that processes will be abruptly ended if they are still running after the task completes.\n\nProcesses created by the task can be permitted to break away from the job object, so they can continue to run after the task completes. In this case, processes can still be ended abruptly for other reasons. For example, processes may terminate when their terminal console window closes, or when the Windows logon session associated with the task logs off.\n\nIf you wish to run a process that persists, it does not require job breakaway. You can use the Windows Task Scheduler to configure a Windows task which you can run by name. Then, run the task as follows:\n\nschtasks /run /tn NameOfTask\n\nIf you wish to use job breakaway, you can start such a child process using the bvRun utility with flags \"-brj -new\" or \"-brj -det\". You can also use a Windows function such as CreateProcess while passing the flag CREATE_BREAKAWAY_FROM_JOB, and perhaps also CREATE_NEW_CONSOLE or DETACHED_PROCESS."
				},
				{
				name:"recordOutput &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, task output will be recorded and logged."
				},
				{
				name:"outputCodePage &#x2192; <a href=\"#ITask915\" onclick=\"ScrollToEnum();return false;\">TaskOutputCodePage915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.TaskOutputCodePage.ansi",
				description:"If task output contains non-US-ASCII characters, the code page that should be used to interpret them."
				},
				{
				name:"maxOutputKb &#x2192; ULONG {get} {set}",
				defaultValue:"default: 100",
				description:"The maximum size of standard output from the task which the SSH Server will store while the task is running."
				},
				{
				name:"maxStdErrKb &#x2192; ULONG {get} {set}",
				defaultValue:"default: 100",
				description:"The maximum size of standard error from the task which the SSH Server will store while the task is running."
				},
				{
				name:"emailResult &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the result of the task and its output will be sent to the specified email address."
				},
				{
				name:"emailAddressList &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"One or more email addresses, separated by commas."
				},
				{
				name:"maxEmailContentKb &#x2192; ULONG {get} {set}",
				defaultValue:"default: 100",
				description:"The maximum size of outgoing message content. Emails that would exceed this limit will be truncated."
				},
				{
				name:"triggers &#x2192; <a href=\"#ITaskTriggers915\" onclick=\"SetInterface('ITaskTriggers915', false);return false;\">ITaskTriggers915</a> {get}",
				description:"Configure triggers that will start this task. If a trigger occurs while another instance of the task is already running, the task profile setting Duplicate task policy controls what action is taken."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ITask915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"DuplicateTaskPolicy915",
				description:"DuplicateTaskPolicy_doNotStart (1): Do not start<br />DuplicateTaskPolicy_parallel (2): Run in parallel<br />DuplicateTaskPolicy_stopExisting (3): Stop existing instance<br />DuplicateTaskPolicy_queue (4): Queue"
				},
				{
				name:"JobObject915",
				description:"JobObject_doNotUse (0): Do not use job object<br />JobObject_noBreakaway (1): Use job object, no breakaway<br />JobObject_allowBreakaway (2): Use job object, allow breakaway"
				},
				{
				name:"LogArchivalPathType915",
				description:"LogArchivalPathType_relToInstDir (1): Relative to installation directory<br />LogArchivalPathType_relToLogDir (2): Relative to log file directory"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				},
				{
				name:"TaskOutputCodePage915",
				description:"TaskOutputCodePage_ansi (1): ANSI<br />TaskOutputCodePage_utf8 (2): UTF-8"
				},
				{
				name:"TaskShutdownPolicy915",
				description:"TaskShutdownPolicy_stop (1): Stop task and shut down<br />TaskShutdownPolicy_continue (2): Let task continue and shut down"
				},
				{
				name:"TaskType915",
				description:"TaskType_logMaintenance (1): Log file maintenance<br />TaskType_execCommand (2): Execute command<br />TaskType_emailNotification (3): Email notification"
				}
			]
			},
			{
			name:"ITaskList915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#ITask915\" onclick=\"SetInterface('ITask915', false);return false;\">ITask915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#ITask915\" onclick=\"SetInterface('ITask915', false);return false;\">ITask915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ITaskList915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#ITask915\" onclick=\"SetInterface('ITask915', false);return false;\">ITask915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#ITaskList915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#ITask915\" onclick=\"SetInterface('ITask915', false);return false;\">ITask915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#ITask915\" onclick=\"SetInterface('ITask915', false);return false;\">ITask915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#ITask915\" onclick=\"SetInterface('ITask915', false);return false;\">ITask915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#ITask915\" onclick=\"SetInterface('ITask915', false);return false;\">ITask915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#ITask915\" onclick=\"SetInterface('ITask915', false);return false;\">ITask915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#ITask915\" onclick=\"SetInterface('ITask915', false);return false;\">ITask915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ITaskProfile915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! name &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The name of the task profile."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"An optional comment describing this task profile."
				},
				{
				flag:2,
				name:"! securityContext &#x2192; <a href=\"#ITaskProfile915\" onclick=\"ScrollToEnum();return false;\">TaskSecurityContext915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.TaskSecurityContext.localAccount",
				description:"The security context under which the external command will run.\n\nTo use the Local Service and Network Service security contexts, the SSH Server must run as Local System."
				},
				{
				name:"winDomain &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The domain name of the Windows account under which the external command will run."
				},
				{
				name:"winAccount &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The Windows account name, without domain, under which the command will run.\n\nThe SSH Server does not load the Windows profile for this account when executing the command.\n\nYou can use the \"Manage password cache\" interface in the SSH Server Control Panel to enter the password for this account in the SSH Server's password cache. This will allow the SSH Server to create a logon session that will have access to network resources and Encrypting File System resources under this user's identity.\n\nIf the account password is not added to the SSH Server's password cache, the SSH Server can still create a logon session for the task, but the task will not have implicit access to EFS or to network resources."
				},
				{
				name:"logonType &#x2192; <a href=\"#ITaskProfile915\" onclick=\"ScrollToEnum();return false;\">LogonType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.LogonType.batch",
				description:"The 'Interactive' logon type grants the logon session the same Windows permissions as when the Windows account that provides the security context is logged on locally at the server's keyboard. Login with this logon type will fail if the Windows account does not have the right to 'Log on locally' configured in Windows security policy that applies to the server computer. This right is normally granted to all users in a default Windows configuration, but on a domain controller it is granted only to administrators.\n\nThe 'Network' logon type requires the Windows account to have the right to 'Access this computer from the network', but it does not require 'Log on locally'. Network logon will work well on most Windows installations, except outdated Windows Server versions where interactive logon is required to use cmd.exe and other command line tools. On those servers, unrestricted terminal shell access will not work with the 'Network' logon type, but file transfer and tunneling will function.\n\nThe 'Batch' logon type requires the Windows account to have the right to 'Log on as batch job'. Windows grants this by default to Administrators, Backup Operators and Performance Log Users. The Windows Task Scheduler uses this logon type for tasks that run when no user is logged on. This logon type may allow programs to run which do not run correctly under 'Network' or 'Interactive'."
				},
				{
				name:"elevation &#x2192; <a href=\"#ITaskProfile915\" onclick=\"ScrollToEnum();return false;\">TaskElevation915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.TaskElevation.yesIfPossible",
				description:"If the Windows account that provides the security context is an administrator account, the SSH Server can create an elevated or non-elevated logon session. If the logon session is elevated, it will have full administrative permissions. If it is non-elevated, the logon session will have restricted access, even though the account is an administrator.\n\nElevation can be controlled only when using the Interactive logon type. Network and batch logon types will automatically have elevated access if it is available to the account."
				},
				{
				name:"loadProfile &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the Windows profile associated with the account that provides the security context will be loaded for tasks executed under this task profile.\n\nLoading the Windows profile causes the user's Windows registry hive to become available. It also makes it possible to use the user's environment variables in SSH Server settings that support environment variable expansion (%VARIABLE% syntax).\n\nFrequent loading and unloading of Windows profiles can cause a profile to break and should be avoided if possible.\n\nA Windows profile can be loaded by other settings, and may already be loaded if Windows session sharing is enabled: https://www.bitvise.com/ssh-server-usage-faq#Q260"
				},
				{
				name:"winSessionSharing &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether tasks executed under this task profile should share Windows logon sessions. If enabled, tasks under the same task profile may reuse the same Windows session if they run concurrently, or if the Windows session created by a previous task is still in cache.\n\nEnabling Windows session sharing helps alleviate problems that can occur with frequent loading and unloading of Windows profiles, and frequent connections and disconnections to network shares.\n\nA task that runs in a shared Windows session may be affected by actions taken by other tasks. For example, if a task connects to a network share, then another task that uses the same Windows session will also be able to use that connection."
				},
				{
				name:"winSessionKeepAliveSecs &#x2192; ULONG {get} {set}",
				defaultValue:"default: 1800",
				description:"The number of seconds a Windows session stays cached after the last task which used that Windows session ends."
				},
				{
				name:"maxWinSessionAgeHours &#x2192; ULONG {get} {set}",
				defaultValue:"default: 768",
				description:"The total number of hours a Windows session may have its life extended by new tasks that use it after its creation.\n\nOnce maximum lifetime for a Windows session is reached, it will be logged off and the next task that needs it will create a new Windows session."
				},
				{
				name:"windowsOnLogonCmd &#x2192; <a href=\"#IWinOnLogonCommand915\" onclick=\"SetInterface('IWinOnLogonCommand915', false);return false;\">IWinOnLogonCommand915</a> {get}",
				description:"If configured, then for this task profile, this command will be executed for each Windows session created under this profile. This command is executed before any tasks in that Windows session.\n\nIf the task profile disables Windows session sharing, this on-logon command will be executed each time before a task is run.\n\nIf the task profile enables Windows session sharing, this command might be executed only once for multiple tasks. The command will not be executed again, as long as subsequent tasks use the same Windows session."
				},
				{
				name:"windowsOnLogoffCmd &#x2192; <a href=\"#IWinOnLogoffCommand915\" onclick=\"SetInterface('IWinOnLogoffCommand915', false);return false;\">IWinOnLogoffCommand915</a> {get}",
				description:"If configured, then for this task profile, this command will be executed for each Windows session before it is logged off.\n\nIf the task profile disables Windows session sharing, this on-logoff command will be executed each time after a task completes.\n\nIf the task profile enables Windows session sharing, this command might be executed only after multiple tasks have run, and then with a significant delay. This delay will usually equal the configured Windows session keep-alive time after the last task which used the Windows session has ended. However, it may be a shorter time if the Windows session has reached maximum age."
				},
				{
				name:"windowsFileShareSettings &#x2192; <a href=\"#INetworkShareTaskProfileSettings915\" onclick=\"SetInterface('INetworkShareTaskProfileSettings915', false);return false;\">INetworkShareTaskProfileSettings915</a> {get}",
				description:"If the task profile configures connections to Windows file shares, these settings control how connections to Windows file shares are handled."
				},
				{
				name:"shares &#x2192; <a href=\"#IFileShares915\" onclick=\"SetInterface('IFileShares915', false);return false;\">IFileShares915</a> {get}",
				description:"A list of shared folders on other computers in the local network to which the SSH Server should establish connections when a Windows session is created under this task profile."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ITaskProfile915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"LogonType915",
				description:"LogonType_interactive (1): Interactive<br />LogonType_network (2): Network<br />LogonType_batch (3): Batch"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				},
				{
				name:"TaskElevation915",
				description:"TaskElevation_yesIfPossible (0): Yes, if possible<br />TaskElevation_require (1): Require<br />TaskElevation_noIfPossible (2): No, if possible"
				},
				{
				name:"TaskSecurityContext915",
				description:"TaskSecurityContext_localAccount (1): A specific Windows local account<br />TaskSecurityContext_domainAccount (2): A specific Windows domain account<br />TaskSecurityContext_microsoftAccount (3): A specific Microsoft account<br />TaskSecurityContext_bssContext (4): SSH Server security context<br />TaskSecurityContext_localService (5): The Local Service account<br />TaskSecurityContext_networkService (6): The Network Service account"
				}
			]
			},
			{
			name:"ITaskProfiles915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#ITaskProfile915\" onclick=\"SetInterface('ITaskProfile915', false);return false;\">ITaskProfile915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#ITaskProfile915\" onclick=\"SetInterface('ITaskProfile915', false);return false;\">ITaskProfile915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ITaskProfiles915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#ITaskProfile915\" onclick=\"SetInterface('ITaskProfile915', false);return false;\">ITaskProfile915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#ITaskProfiles915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#ITaskProfile915\" onclick=\"SetInterface('ITaskProfile915', false);return false;\">ITaskProfile915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#ITaskProfile915\" onclick=\"SetInterface('ITaskProfile915', false);return false;\">ITaskProfile915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#ITaskProfile915\" onclick=\"SetInterface('ITaskProfile915', false);return false;\">ITaskProfile915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#ITaskProfile915\" onclick=\"SetInterface('ITaskProfile915', false);return false;\">ITaskProfile915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#ITaskProfile915\" onclick=\"SetInterface('ITaskProfile915', false);return false;\">ITaskProfile915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#ITaskProfile915\" onclick=\"SetInterface('ITaskProfile915', false);return false;\">ITaskProfile915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ITaskSettings915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"taskList &#x2192; <a href=\"#ITaskList915\" onclick=\"SetInterface('ITaskList915', false);return false;\">ITaskList915</a> {get}",
				description:"A list of tasks and actions which the SSH Server will perform."
				},
				{
				name:"taskProfiles &#x2192; <a href=\"#ITaskProfiles915\" onclick=\"SetInterface('ITaskProfiles915', false);return false;\">ITaskProfiles915</a> {get}",
				description:"For tasks that execute a command, a task profile selects the Windows security context in which the command will run. It may also configure Windows file shares that should be available, and other settings for the task environment."
				},
				{
				name:"maxQueuedTasks &#x2192; ULONG {get} {set}",
				defaultValue:"default: 10000",
				description:"The maximum number of tasks the SSH Server will allow to accumulate in the task queue. If too many tasks accumulate, the excess tasks will be discarded."
				},
				{
				name:"maxTriggerEvents &#x2192; ULONG {get} {set}",
				defaultValue:"default: 100000",
				description:"The maximum number of task trigger events the SSH Server will allow to accumulate. If more than this number of events occur before the SSH Server has processed them, events will be discarded and tasks that should be triggered may not run."
				},
				{
				name:"maxConcurrentTasks &#x2192; ULONG {get} {set}",
				defaultValue:"default: 32",
				description:"The maximum number of tasks the SSH Server will run concurrently. If this number is too small, tasks may accumulate in the task queue until the maximum number of queued tasks is reached, at which point tasks may begin to be discarded."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ITaskSettings915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ITaskTrigger915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"type &#x2192; <a href=\"#ITaskTrigger915\" onclick=\"ScrollToEnum();return false;\">TaskTriggerType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.TaskTriggerType.time",
				description:"The type of trigger which will cause an action to take place."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"An optional comment describing this trigger entry."
				},
				{
				name:"logEvent &#x2192; <a href=\"#ITaskTrigger915\" onclick=\"ScrollToEnum();return false;\">TaskTriggerEvent915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.TaskTriggerEvent.W_SYSTEM_MONITOR_LOW_DISK_SPACE",
				description:"The log event which will trigger this task. This is a short-list of potentially useful events. Many other events are available by setting Trigger type to \"Log event list\".\n\nAn event will only function as a trigger if it is configured to be logged. If you changed default settings under Logging, make sure the trigger event is configured to be logged, either to a textual log file or to the Windows Event Log."
				},
				{
				name:"logLevel &#x2192; <a href=\"#ITaskTrigger915\" onclick=\"ScrollToEnum();return false;\">LogLevel_EW915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.LogLevel_EW.logLevelEW",
				description:"The log event level which will trigger this task. Set to Custom events to select from a list of specific events."
				},
				{
				name:"logEventList &#x2192; <a href=\"#IEventList915\" onclick=\"SetInterface('IEventList915', false);return false;\">IEventList915</a> {get}",
				description:"Opens an event list where events can be included or excluded to trigger this task.\n\nAn event will only function as a trigger if it is configured to be logged. To trigger an action, an event must be logged either to a textual log file or to the Windows Event Log."
				},
				{
				name:"condition &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"An optional condition to filter when a task is triggered based on attributes and values of the logged event(s). Leave this empty to always trigger the task, regardless of the content of the selected logged event(s).\n\nExamples using I_SFS_TRANSFER_FILE:\n\nCondition triggers when virtual account \"User\" writes more than 100 MB into a file before closing it:\n\n(conn.virtualAccount eq \"User\") and\n(sfs.parameters.bytesWritten gt 104857600)\n\nCondition triggers for a download from mount path \"/downloads\" where the file extension is \".pdf\", and the client did not write to the file or create it:\n\n(sfs.mountPath eq \"/downloads\") and\n(sfs.parameters.path endsWith \".pdf\") and\n(sfs.parameters.download ne \"none\") and\n(sfs.parameters.upload eq \"none\")\n\nWhen a trigger is filtered out by this condition, so that the action does not run, you can monitor this in the SSH Server's log output by enabling the Trace-level event T_TASK_RUNNER_TRIGGER_FILTERED.\n\nIf the SSH Server cannot evaluate this condition because of an error - for example, if a string data type is used where an integer is expected - then the SSH Server will log the event W_TASK_RUNNER_TRIGGER_NOT_EVALUATED.\n\nFor more information and examples, see:\nhttps://www.bitvise.com/ssh-server-guide-tasks"
				},
				{
				name:"startTime &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"0.0.5.100\"",
				description:"The time of day to start the task, in the time zone of the local computer."
				},
				{
				name:"period &#x2192; <a href=\"#ITaskTrigger915\" onclick=\"ScrollToEnum();return false;\">TaskTriggerPeriod915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.TaskTriggerPeriod.daily",
				description:"Whether the trigger period is defined in terms of days, weeks, or months."
				},
				{
				name:"months &#x2192; <a href=\"#IMonthGroup915\" onclick=\"SetInterface('IMonthGroup915', false);return false;\">IMonthGroup915</a> {get}",
				description:"Months during which the task should run."
				},
				{
				name:"dayChoice &#x2192; <a href=\"#ITaskTrigger915\" onclick=\"ScrollToEnum();return false;\">DayChoice915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DayChoice.dayOfWeek",
				description:"Whether the days of selected months are selected by day number or by day of week."
				},
				{
				name:"dayOccurrences &#x2192; <a href=\"#IDayOccurrenceGroup915\" onclick=\"SetInterface('IDayOccurrenceGroup915', false);return false;\">IDayOccurrenceGroup915</a> {get}",
				description:"Use this setting in combination with Days of week to define when the task runs. Examples:\n\n- If First and Wednesday are selected: the task will start on the first Wednesday of the month.\n\n- If Last and Sunday are selected: the task will start on the last Sunday of the month."
				},
				{
				name:"daysOfWeek &#x2192; <a href=\"#IDayOfWeekGroup915\" onclick=\"SetInterface('IDayOfWeekGroup915', false);return false;\">IDayOfWeekGroup915</a> {get}",
				description:"The days of week when the task will run."
				},
				{
				name:"dayNumbers &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"1\"",
				description:"Specify days of month as a comma-separated list of numbers. The list can contain non-zero positive integers [1..31] and negative integers [-28..-1]. Negative integers represent the last days of month. For example, -1 is the last day of month; -2 is the second-to-last; and so on."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ITaskTrigger915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"DayChoice915",
				description:"DayChoice_dayOfWeek (0): Day of week<br />DayChoice_dayOfMonth (1): Day of month"
				},
				{
				name:"LogLevel_EW915",
				description:"LogLevel_EW_logLevelE (0): Errors<br />LogLevel_EW_logLevelEW (1): Errors, Warnings<br />LogLevel_EW_logLevelCustom (9): Custom events"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				},
				{
				name:"TaskTriggerEvent915",
				description:"TaskTriggerEvent_I_AUTH_KEYS_SYNC_SETTINGS_APPLIED: 319069<br />TaskTriggerEvent_I_CONNECT_ACCEPTED: 340070<br />TaskTriggerEvent_I_CONNECT_CANCELED: 340074<br />TaskTriggerEvent_I_CONNECT_DISCONNECTED_ABNORMALLY: 340467<br />TaskTriggerEvent_I_CONNECT_DISCONNECTED_NORMALLY: 340085<br />TaskTriggerEvent_I_CONNECT_REJECTED: 340071<br />TaskTriggerEvent_I_EXECS_COMMAND_EXECUTED: 362260<br />TaskTriggerEvent_I_LOGOFF_CONN_COMMAND_EXECUTED: 343155<br />TaskTriggerEvent_I_LOGOFF_WIN_COMMAND_EXECUTED: 343703<br />TaskTriggerEvent_I_LOGON_AUTH_CANNOT_COMPLETE: 342894<br />TaskTriggerEvent_I_LOGON_AUTH_COMPLETED: 342088<br />TaskTriggerEvent_I_LOGON_AUTH_REJECTED: 342090<br />TaskTriggerEvent_I_LOGON_AUTH_VIRT_PASSWORD_CHANGED: 342548<br />TaskTriggerEvent_I_LOGON_AUTH_WIN_PASSWORD_CHANGED: 342547<br />TaskTriggerEvent_I_LOGON_CONN_COMMAND_EXECUTED: 342146<br />TaskTriggerEvent_I_LOGON_WIN_COMMAND_EXECUTED: 342695<br />TaskTriggerEvent_I_SCP_SERVER_COMMAND_STARTED: 363268<br />TaskTriggerEvent_I_SERVICE_CONFIG_DESCRIPTION: 310016<br />TaskTriggerEvent_I_SFS_TRANSFER_FILE: 370348<br />TaskTriggerEvent_I_SSH_KEY_EXCHANGE_MISMATCH: 351498<br />TaskTriggerEvent_I_TOTERMS_COMMAND_EXECUTED: 361247<br />TaskTriggerEvent_I_UPDATE_MANAGER_INSTALL_LAUNCHED: 324561<br />TaskTriggerEvent_I_UPLOAD_COMMAND_EXECUTED: 350450<br />TaskTriggerEvent_W_SYSTEM_MONITOR_HIGH_CPU_USAGE: 229745<br />TaskTriggerEvent_W_SYSTEM_MONITOR_HIGH_MEMORY_USAGE: 229747<br />TaskTriggerEvent_W_SYSTEM_MONITOR_LOW_DISK_SPACE: 229749"
				},
				{
				name:"TaskTriggerPeriod915",
				description:"TaskTriggerPeriod_daily (1): Daily<br />TaskTriggerPeriod_weekly (2): Weekly<br />TaskTriggerPeriod_monthly (3): Monthly"
				},
				{
				name:"TaskTriggerType915",
				description:"TaskTriggerType_time (1): Time<br />TaskTriggerType_logEvent (2): Log event<br />TaskTriggerType_logEventList (3): Log event list"
				}
			]
			},
			{
			name:"ITaskTriggers915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#ITaskTrigger915\" onclick=\"SetInterface('ITaskTrigger915', false);return false;\">ITaskTrigger915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#ITaskTrigger915\" onclick=\"SetInterface('ITaskTrigger915', false);return false;\">ITaskTrigger915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ITaskTriggers915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#ITaskTrigger915\" onclick=\"SetInterface('ITaskTrigger915', false);return false;\">ITaskTrigger915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Move (ULONG indexFrom, ULONG indexTo)",
				description:"Moves the entry with the specified zero-based index to the new location within the list."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#ITaskTriggers915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#ITaskTrigger915\" onclick=\"SetInterface('ITaskTrigger915', false);return false;\">ITaskTrigger915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#ITaskTrigger915\" onclick=\"SetInterface('ITaskTrigger915', false);return false;\">ITaskTrigger915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#ITaskTrigger915\" onclick=\"SetInterface('ITaskTrigger915', false);return false;\">ITaskTrigger915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#ITaskTrigger915\" onclick=\"SetInterface('ITaskTrigger915', false);return false;\">ITaskTrigger915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#ITaskTrigger915\" onclick=\"SetInterface('ITaskTrigger915', false);return false;\">ITaskTrigger915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#ITaskTrigger915\" onclick=\"SetInterface('ITaskTrigger915', false);return false;\">ITaskTrigger915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ITerminalConsoleSettings915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"consoleVersion &#x2192; <a href=\"#ITerminalConsoleSettings915\" onclick=\"ScrollToEnum();return false;\">ConsoleVersion915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.ConsoleVersion.systemDefault",
				description:"This setting has an effect only if the SSH server is running on Windows 10, Windows Server 2016, or newer.\n\nWhen this setting is set to System default, the console version is selected depending on the ForceV2 value stored in the registry key HKEY_CURRENT_USER\\Console. In this case, the value 0 will cause Windows to use the pre-Windows 10 console. The value 1 will use the Windows 10 console.\n\nWhen this setting is not set to System default, the SSH Server may not be able to open the selected console version. In this case, the SSH Server's terminal subsystem will keep retrying, and may eventually fall back to a console version it was able to open.\n\nWhen used with BvShell, this setting will have an effect only if the user's Windows profile is loaded. If no profile is loaded, behavior will be as if this setting is set to System default. See also the setting \"Load profile for BvShell\".\nThe Windows console versions compare as follows:\n\n- The Windows 10 console supports terminal escape sequences and the Windows Subsystem for Linux. The pre-Windows 10 console does not.\n\n- The Windows 10 console does not support 16-bit programs through NTVDM. The pre-Windows 10 console still supports them, but only on 32-bit Windows.\n\n- The Windows 10 console has a significant proportion of unusual behaviors associated with technological immaturity. The pre-Windows 10 console has fewer such issues."
				},
				{
				name:"consoleWin10ScrBufFix &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"This setting has an effect only if the SSH server is running on Windows 10, Windows Server 2016, or newer.\n\nWhen enabled, this fixes functionality related to active screen buffer handling that's incorrect in some versions of Windows 10. The fix should not change behavior in versions of Windows where this functionality might become fixed. However, it might be desirable to disable the workaround on versions of Windows that correct the issue.\n\nThe Windows bug is that, when closing the last handle to the active screen buffer, the console might fail to switch to the previously active screen buffer. For example, this happens if another process has opened or inherited a handle to the active screen buffer. The SSH Server's fix is to automatically activate the correct screen buffer."
				},
				{
				name:"recognizeEsc &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Terminal protocols other than bvterm use the escape character to encode cursor movements and other console events. As a result, a single escape character received from the client is ambiguous; it may either indicate that the user pressed the Esc key, or that the client means to relay a console event encoded as an escape sequence.\n\nWhen this setting is enabled, the SSH Server will treat a single escape character as indicating that the Esc key was pressed if it is not followed by an escape sequence within a configured time frame.\n\nWhen this setting is disabled, the SSH Server will treat all escape characters as the beginning of an escape sequence. The client will need to send two consecutive escape characters to indicate that the Esc key was pressed.\n\nThis setting does not affect the bvterm protocol, which does not use escape sequences to encode console events."
				},
				{
				name:"escDelayMs &#x2192; ULONG {get} {set}",
				defaultValue:"default: 333",
				description:"If the SSH Server is configured to recognize a solo escape character when using terminal protocols other than bvterm, then if an escape character is received that is not followed by other data within this configured time frame, the server will assume that the client intended to convey that the Esc key was pressed by the user.\n\nReducing this figure improves responsiveness to an Esc key press if the terminal client sends it as a single escape character, but also increases the odds that an escape sequence sent by the client might be misinterpreted.\n\nIncreasing this figure reduces the likelihood that an escape sequence sent by the client will be misinterpreted, but also reduces responsiveness to an Esc key press, if the terminal client sends it as a single escape character.\n\nThis setting does not affect the bvterm protocol, which does not use escape sequences to encode console events."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ITerminalConsoleSettings915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ConsoleVersion915",
				description:"ConsoleVersion_systemDefault (0): System default<br />ConsoleVersion_preWin10 (1): Pre-Windows 10<br />ConsoleVersion_win10 (2): Windows 10"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"ITlsAlgorithms915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"minCipherStrength &#x2192; ULONG {get} {set}",
				defaultValue:"default: 128",
				description:"Minimum symmetric encryption strength for TLS connections. If set to zero, Schannel will use the default Windows value."
				},
				{
				name:"requireStrongCrypto &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, Schannel will be asked to disable known weak cryptographic algorithms, cipher suites, and TLS protocol versions that may otherwise be enabled in Windows by default for better interoperability.\n\nThe exact meaning of this setting depends on Schannel in the installed version of Windows. The SSH Server relays this preference to Windows by enabling the flag SCH_USE_STRONG_CRYPTO."
				},
				{
				name:"tls13 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support TLS protocol version 1.3.\n\nTLS 1.3 requires Windows 11, Windows Server 2022, or newer."
				},
				{
				name:"tls12 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support TLS protocol version 1.2.\n\nTLS 1.2 requires Windows 7, Windows Server 2008 R2, or newer."
				},
				{
				name:"tls11 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support TLS protocol version 1.1.\n\nTLS 1.1 requires Windows 7, Windows Server 2008 R2, or newer."
				},
				{
				name:"tls10 &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support TLS protocol version 1.0."
				},
				{
				name:"kexEcdhe &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support TLS key exchange using Elliptic Curve Diffie-Hellman with ephemeral keys.\n\nThis is a recommended key exchange type that offers forward secrecy. The compromise of long-term keys, such as those used in certificates, does not compromise previous connections."
				},
				{
				name:"kexRsa &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to support TLS key exchange using RSA.\n\nThis key exchange type is inferior to ECDHE in that it does not offer forward secrecy. The compromise of a long-term key, such as the private key used in the server's certificate, will compromise previous connections.\n\nThis key exchange type makes dual use of RSA for both server authentication and key exchange. Other key exchange types also use RSA, but only for server authentication."
				},
				{
				name:"kexDhe &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to support TLS key exchange using traditional Diffie-Hellman with ephemeral keys.\n\nThis key exchange type can be secure if Windows is configured to use only large, secure Diffie-Hellman group parameters. However, if this is not configured, Schannel may use fixed 1024-bit DH group parameters that are known to be weak.\n\nThe following page discusses how to increase the minimum size of Diffie-Hellman group parameters used by Schannel:\n\nhttps://technet.microsoft.com/library/security/3174644 \n\nThis key exchange type offers forward secrecy. The compromise of long-term keys, such as those used in certificates, does not compromise previous connections."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#ITlsAlgorithms915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IUpdateSettings915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"updateDownloadMethod &#x2192; <a href=\"#IUpdateSettings915\" onclick=\"ScrollToEnum();return false;\">UpdateDownloadMethod915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.UpdateDownloadMethod.downloadFromMaster",
				description:"If a synchronizing follower or secondary master runs an older SSH Server version than the master:\n\nDownload installer from master: The synchronizing server should download the installer for the master's version directly from the master.\n\nDownload installer from a URL: The synchronizing server should download the installer for the master's version from the URL in Download URL base. Use this option to reduce load on the master. The installer's file name must canonically match its version, for example: \"BvSshServer-811.exe\" for 8.11."
				},
				{
				name:"downloadUrlBase &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"https://dl.bitvise.com/\"",
				description:"The base URL from which a synchronizing server should download the installer for the master's version. The synchronizing server will look for the installer with a canonical file name, for example: \"BvSshServer-811.exe\" for version 8.11.\n\nSynchronizing servers will open the configured URL using the Windows Internet API (WinINet). The capabilities of WinINet vary depending on the version of Windows on which the synchronizing SSH Server is installed. Notably, synchronizing servers running on Windows XP or Windows Server 2003 cannot access an HTTPS server if it requires support for Server Name Indication (SNI).\n\nThe default URL, https://dl.bitvise.com/, is currently an Amazon CloudFront distribution which does require SNI. This URL is not accessible to synchronizing servers on Windows XP or Windows Server 2003. An alternative which does support SNI is https://s3.amazonaws.com/dl.bitvise.com/, but download speeds may be lower. Bitvise download URLs and their behaviors are subject to change, particularly if this software version is no longer current."
				},
				{
				name:"fallbackToAltUrl &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, synchronizing servers will be provided with an alternate download URL base for use if downloading the installer from the primary URL fails."
				},
				{
				name:"altDownloadUrlBase &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"https://s3.amazonaws.com/dl.bitvise.com/\"",
				description:"A second URL base which a synchronizing server should try to use to download an installer if download fails using the primary URL base."
				},
				{
				name:"maxConcurrentDownloadConnections &#x2192; ULONG {get} {set}",
				defaultValue:"default: 50",
				description:"This setting can help reduce the load of simultaneous connections on a master with many followers. If the number of concurrent installer download connections reaches this number, download requests from other synchronizing servers will be ignored. Synchronizing servers will retry downloading the installer."
				},
				{
				name:"updateType &#x2192; <a href=\"#IUpdateSettings915\" onclick=\"ScrollToEnum();return false;\">AutomaticUpdatesType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.AutomaticUpdatesType.recommended",
				description:"Update behavior for this SSH Server instance:\n\nDo not check for updates: No checks for updates will be performed, and no updates applied, except through explicit administrator action. If the administrator takes no action, the server will not update, and will not display notifications, even if there is a critical security update.\n\nCheck for updates, apply only manually: The server will check for available updates, but will not apply them, except through explicit administrator action. If the administrator takes no action, the server will display information about updates, but will not apply them, even if a critical security update is available.\n\nApply strongly recommended updates: The server will periodically check for updates, and will automatically apply updates strongly recommended by Bitvise. This will include critical security updates, but not reliability updates, or even security updates that are not critical. If the installed version is no longer recent, a critical security update may be to a version that includes changes in functionality; even a major new version. An upgrade for this reason is intended to be rare. When a critical security update is released, it may be available as a recommended update for some time before it is designated as strongly recommended. This can offer opportunity for a manual upgrade, before an update is applied automatically that may break functionality. This does mean the \"strongly recommended\" track might not receive critical security updates as soon as they become available.\n\nApply recommended updates: The server will periodically check for updates, and will automatically apply updates recommended by Bitvise. This will include (A) critical security updates, and (B) security and reliability updates that do not significantly alter functionality of the installed version. Users on this track will receive recommended updates as long as the installed SSH Server version is part of a version series still receiving non-critical updates. Once the installed version is no longer recent, this track becomes similar to \"strongly recommended\", and will receive only critical security updates.\n\nApply available updates: The server will periodically check for updates, and will apply them automatically as they become available - as long as the server's activation code has upgrade access to receive them. This option is suitable for enthusiasts who do not mind being caught off-guard by server functionality changes.\n\nThe option most recommended for production installations is Apply recommended updates. This will apply critical security updates, as well as recommended security and reliability updates, as long as the installed SSH Server version is recent. When new SSH Server versions become available that contain new features, administrators should investigate the changes, and arrange for a timely upgrade. This will allow the installation to continue to receive recommended updates. If the administrator does not upgrade to new feature versions, there may no longer be recommended updates, but there may still be a critical security update."
				},
				{
				name:"checkForUpdateDelayHours &#x2192; ULONG {get} {set}",
				defaultValue:"default: 18",
				description:"The SSH Server will check for updates only once every configured number of hours."
				},
				{
				name:"updateStabilityDelay &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3",
				description:"The SSH Server will postpone any automatic update until the candidate new version has been available, and has remained identical, for the configured number of days."
				},
				{
				name:"maintenancePeriods &#x2192; <a href=\"#IMaintenancePeriods915\" onclick=\"SetInterface('IMaintenancePeriods915', false);return false;\">IMaintenancePeriods915</a> {get}",
				description:"The SSH Server will automatically install updates only in the configured time periods. If no time period is defined, automatic updates will not be applied."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IUpdateSettings915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"AutomaticUpdatesType915",
				description:"AutomaticUpdatesType_doNotCheck (0): Do not check for updates<br />AutomaticUpdatesType_checkOnly (1): Check for updates, apply only manually<br />AutomaticUpdatesType_stronglyRecommended (2): Apply strongly recommended updates<br />AutomaticUpdatesType_recommended (3): Apply recommended updates<br />AutomaticUpdatesType_allAvailable (4): Apply available updates"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				},
				{
				name:"UpdateDownloadMethod915",
				description:"UpdateDownloadMethod_downloadFromMaster (0): Download installer from master<br />UpdateDownloadMethod_downloadFromUrl (1): Download installer from a URL"
				}
			]
			},
			{
			name:"IUserAuthMethod915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:2,
				name:"! type &#x2192; <a href=\"#IUserAuthMethod915\" onclick=\"ScrollToEnum();return false;\">UserAuthType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.UserAuthType.password",
				description:"SSH authentication method to use.\n\nThe \"GSSAPI key exchange\" authentication method is available only when the initial SSH key exchange and host authentication were performed using GSSAPI (using Kerberos)."
				},
				{
				name:"password &#x2192; <a href=\"#IPassword915\" onclick=\"SetInterface('IPassword915', false);return false;\">IPassword915</a> {get}",
				description:"Password authentication."
				},
				{
				name:"kbdiFallback &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If the \"password\" authentication method is unavailable on the destination server, whether the SSH Server should attempt password authentication using the \"keyboard-interactive\" mechanism."
				},
				{
				name:"kerberos &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Kerberos authentication will work only when the SSH Server is connecting to the destination server from a process that runs under a Windows domain account security context. For example, this could be a file transfer session for a user which logged into the SSH Server as a Windows domain account.\n\nTo use Kerberos authentication for an outgoing connection, the Windows session created for the user must have network access credentials. Network access credentials are normally available in Windows sessions created for domain accounts that used password authentication. If a domain account logs in using public key authentication, network access credentials will be available if the Windows account password has been configured in the SSH Server's password cache. If the user logged in using Kerberos authentication, then network credentials may be available if the client enabled delegation."
				},
				{
				name:"ntlm &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"NTLM authentication has similar requirements as Kerberos authentication, but can also work using local Windows accounts. NTLM authentication can work for local accounts if the destination server permits login for a local account that has the same username and password.\n\nNTLM authentication will not work if it was disabled in Windows."
				},
				{
				name:"delegation &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to permit the destination server to impersonate the user when connecting to network resources on other computers (e.g. when connecting to a network share). This is a security risk if the server is untrusted, but not a greater security risk than logging in with a domain account using regular password authentication. For this type of broad, unrestricted delegation to work, it must also be enabled by the network administrator in two places in the Active Directory: (1) in the settings for the connecting domain account, and (2) in the settings for the destination server computer. The server must also be ready to accept delegation; Bitvise SSH Server supports this."
				},
				{
				name:"clientKey &#x2192; <a href=\"#IClientAuthKeypair915\" onclick=\"SetInterface('IClientAuthKeypair915', false);return false;\">IClientAuthKeypair915</a> {get}",
				description:"Client authentication keypair for public key authentication. The corresponding public key must be configured for this user in the destination server, so that the server will accept it for client authentication.\n\nThe private key should not be sent to the destination server. Keeping the private key secret is a fundamental goal of public key authentication."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IUserAuthMethod915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				},
				{
				name:"UserAuthType915",
				description:"UserAuthType_none (0): None<br />UserAuthType_password (1): Password<br />UserAuthType_passwordOverKbdi (2): Password over KBDI<br />UserAuthType_publicKey (3): Public key<br />UserAuthType_gssApiWithMic (4): GSSAPI with MIC<br />UserAuthType_gssApiKeyEx (5): GSSAPI key exchange"
				}
			]
			},
			{
			name:"IUserAuthMethods915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IUserAuthMethod915\" onclick=\"SetInterface('IUserAuthMethod915', false);return false;\">IUserAuthMethod915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IUserAuthMethod915\" onclick=\"SetInterface('IUserAuthMethod915', false);return false;\">IUserAuthMethod915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IUserAuthMethods915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IUserAuthMethod915\" onclick=\"SetInterface('IUserAuthMethod915', false);return false;\">IUserAuthMethod915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Move (ULONG indexFrom, ULONG indexTo)",
				description:"Moves the entry with the specified zero-based index to the new location within the list."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IUserAuthMethods915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IUserAuthMethod915\" onclick=\"SetInterface('IUserAuthMethod915', false);return false;\">IUserAuthMethod915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IUserAuthMethod915\" onclick=\"SetInterface('IUserAuthMethod915', false);return false;\">IUserAuthMethod915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IUserAuthMethod915\" onclick=\"SetInterface('IUserAuthMethod915', false);return false;\">IUserAuthMethod915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IUserAuthMethod915\" onclick=\"SetInterface('IUserAuthMethod915', false);return false;\">IUserAuthMethod915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IUserAuthMethod915\" onclick=\"SetInterface('IUserAuthMethod915', false);return false;\">IUserAuthMethod915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IUserAuthMethod915\" onclick=\"SetInterface('IUserAuthMethod915', false);return false;\">IUserAuthMethod915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IUserNameBlacklist915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IUserNameBlacklistEntry915\" onclick=\"SetInterface('IUserNameBlacklistEntry915', false);return false;\">IUserNameBlacklistEntry915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IUserNameBlacklistEntry915\" onclick=\"SetInterface('IUserNameBlacklistEntry915', false);return false;\">IUserNameBlacklistEntry915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IUserNameBlacklist915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IUserNameBlacklistEntry915\" onclick=\"SetInterface('IUserNameBlacklistEntry915', false);return false;\">IUserNameBlacklistEntry915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IUserNameBlacklist915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IUserNameBlacklistEntry915\" onclick=\"SetInterface('IUserNameBlacklistEntry915', false);return false;\">IUserNameBlacklistEntry915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IUserNameBlacklistEntry915\" onclick=\"SetInterface('IUserNameBlacklistEntry915', false);return false;\">IUserNameBlacklistEntry915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IUserNameBlacklistEntry915\" onclick=\"SetInterface('IUserNameBlacklistEntry915', false);return false;\">IUserNameBlacklistEntry915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IUserNameBlacklistEntry915\" onclick=\"SetInterface('IUserNameBlacklistEntry915', false);return false;\">IUserNameBlacklistEntry915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IUserNameBlacklistEntry915\" onclick=\"SetInterface('IUserNameBlacklistEntry915', false);return false;\">IUserNameBlacklistEntry915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IUserNameBlacklistEntry915\" onclick=\"SetInterface('IUserNameBlacklistEntry915', false);return false;\">IUserNameBlacklistEntry915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IUserNameBlacklistEntry915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! userName &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"If a client attempts to log on with this user name, it will match this blacklist entry."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"An optional comment describing this blocked user name entry."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IUserNameBlacklistEntry915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IVersion915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"buildVersion &#x2192; BSTR {get}",
				description:"The version of the BssCfgManip object you are working with. This is the SSH Server version with which the BssCfgManip object is included. This version can be different from the version of the currently selected SSH Server instance. The relative order of versions is: cfgFormatVersion <= interfaceVersion <= buildVersion."
				},
				{
				name:"buildDesc &#x2192; BSTR {get}",
				description:"Empty for release versions. For non-release versions, a build description for the BssCfgManip object you are working with."
				},
				{
				name:"cfgFormatVersion &#x2192; BSTR {get}",
				description:"The SSH Server configuration format version the current BssCfgManip object is able to handle. This is the configuration format version of the SSH Server instance with which the BssCfgManip object is included. To minimize disruption with upgrades, minor new versions usually follow an older cfgFormatVersion compared to their buildVersion. The relative order of versions is: cfgFormatVersion <= interfaceVersion <= buildVersion."
				},
				{
				name:"interfaceVersion &#x2192; BSTR {get}",
				description:"The BssCfgManip interface version. This can be newer than cfgFormatVersion if there were changes to the BssCfgManip interface, but not to the configuration format. To minimize disruption with upgrades, minor new versions usually maintain an older interfaceVersion compared to their buildVersion. The relative order of versions is: cfgFormatVersion <= interfaceVersion <= buildVersion."
				}
			]
			},
			{
			name:"IVirtAccount915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! virtAccount &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The name of the virtual account. If there is a Windows account of the same name, it will be shadowed by the virtual account. It is still possible to log into a shadowed Windows account by fully qualifying it with a domain name ('domain\\user' or 'computer\\user')."
				},
				{
				name:"comment &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Optional field to describe this settings entry and its purpose.\n\nThis field is not used by the SSH Server. It is preserved and displayed in settings."
				},
				{
				name:"virtPassword &#x2192; <a href=\"#IPassword915\" onclick=\"SetInterface('IPassword915', false);return false;\">IPassword915</a> {get}",
				description:"The password that will be accepted for login into the virtual account."
				},
				{
				name:"group &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The virtual group of which this virtual account is a member.",
				values:"Has to be the name of a configured virtual group."
				},
				{
				name:"securityContext &#x2192; <a href=\"#IVirtAccount915\" onclick=\"ScrollToEnum();return false;\">VirtAcctSecurityContext915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.VirtAcctSecurityContext.defaultValue",
				description:"When an SSH client logs into a virtual account, SSH subsystems accessed using that account must be started using some Windows security context.\n\nBy default, the SSH Server will use a Windows account with standard, non-administrative user rights, which is created and managed by the SSH Server for this purpose. If this account doesn't exist, it is created any time the SSH Server starts, and is assigned a random and highly complex password beyond anyone's ability to brute force. For an unnamed Bitvise SSH Server installation, the default account is named 'BvSsh_VirtualUsers'.\n\nFor a named-instance SSH Server installation, the account name equals the SSH Server's instance name if the instance name is simple enough to be used as the account name. Otherwise, the name is generated randomly. In this case, you can discover the account name through Windows user account management under Control Panel or Administrative Tools, or by executing 'net user'.\n\nIf a specific account is configured, the SSH Server will use that Windows account to provide the security context for the virtual account logon session. If the user needs to access network resources, add a password for the Windows account into the SSH Server's password cache. Alternately, use the \"Windows file shares\" setting to configure explicit credentials for network share access.\n\nOn domain controllers, the default setting (automatically managed local account) cannot be used. Local accounts do not exist on Windows domain controllers, so the SSH Server cannot create and manage a default account for virtual users. You must specify a domain account, which you configured in Active Directory, when using the SSH Server on a domain controller."
				},
				{
				name:"winDomain &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The domain name of the Windows account to impersonate when this virtual account is logged into."
				},
				{
				name:"winAccount &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The Windows account name, without domain, to impersonate when this virtual account logs in.\n\nThe SSH Server will use this Windows account to provide the security context for the virtual account logon session. The password for this Windows account can be added into the SSH Server's password cache using the \"Manage password cache\" interface in the SSH Server Control Panel. If a password is available in the password cache, the SSH Server will use it to log into this Windows account. If no password is available, the SSH Server will create a password-less logon.\n\nA password-less logon will not permit the user to access network resources using the credentials of the Windows account. If the user needs to access network resources, enter the Windows account's password into the SSH Server's password cache. Alternately, you can configure explicit credentials to access network shares using the setting \"Windows file shares\"."
				},
				{
				name:"loginAllowed &#x2192; <a href=\"#IVirtAccount915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether login is allowed for this user into the SSH Server."
				},
				{
				name:"editableByDelegatedAdmin &#x2192; <a href=\"#IVirtAccount915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether delegated administrators are permitted to edit this account settings entry."
				},
				{
				name:"limits &#x2192; <a href=\"#IAccountLimitsAndQuotas915\" onclick=\"SetInterface('IAccountLimitsAndQuotas915', false);return false;\">IAccountLimitsAndQuotas915</a> {get}",
				description:"Configure the maximum number of simultaneous connections; bandwidth limits; and daily or monthly bandwidth quotas for this account."
				},
				{
				name:"clientAddresses &#x2192; <a href=\"#IAddressAcceptRules915\" onclick=\"SetInterface('IAddressAcceptRules915', false);return false;\">IAddressAcceptRules915</a> {get}",
				description:"Rules to accept or deny login for this account based on the IP address, DNS name, or geographic location from which the user connects. Rules are processed on a first-match basis, so the order of the rules is important. Use the arrow buttons at the bottom to control the order in which the rules will be processed.\n\nIf there is no matching rule in account settings, processing will continue with rules in group settings. If no matching rule is found in group settings either, login will be denied."
				},
				{
				name:"auth &#x2192; <a href=\"#IVirtAccountAuthentication915\" onclick=\"SetInterface('IVirtAccountAuthentication915', false);return false;\">IVirtAccountAuthentication915</a> {get}",
				description:"Configure password and public key authentication settings, and manage public keys for this account."
				},
				{
				name:"remoteAdminAccess &#x2192; <a href=\"#IRemoteAdminAccess915\" onclick=\"SetInterface('IRemoteAdminAccess915', false);return false;\">IRemoteAdminAccess915</a> {get}",
				description:"Configure remote administration access settings for this account. Remote administration includes partial or complete access to server settings, host keys, and/or password cache.\n\nWhen using delegated administration, you can limit the mount point root paths which a delegated administrator can configure. This is configured outside of account and group settings, under Access control > Limit delegated administrator mount points.\n\nTo use remote administration, the user must connect using Bitvise SSH Client."
				},
				{
				name:"connection &#x2192; <a href=\"#IVirtAccountConnectionSetup915\" onclick=\"SetInterface('IVirtAccountConnectionSetup915', false);return false;\">IVirtAccountConnectionSetup915</a> {get}",
				description:"Settings having to do with establishment and maintenance of incoming connections for this account."
				},
				{
				name:"session &#x2192; <a href=\"#IVirtAccountSessionSetup915\" onclick=\"SetInterface('IVirtAccountSessionSetup915', false);return false;\">IVirtAccountSessionSetup915</a> {get}",
				description:"Settings having to do with initialization and caching of Windows sessions for this account."
				},
				{
				name:"term &#x2192; <a href=\"#IAccountTerminalAndExec915\" onclick=\"SetInterface('IAccountTerminalAndExec915', false);return false;\">IAccountTerminalAndExec915</a> {get}",
				description:"Configure terminal shell and exec request settings for this account. Use BvShell to allow shell access, but still restrict the user to virtual filesystem directories configured in the user's account and group settings."
				},
				{
				name:"xfer &#x2192; <a href=\"#IVirtAccountFileTransfer915\" onclick=\"SetInterface('IVirtAccountFileTransfer915', false);return false;\">IVirtAccountFileTransfer915</a> {get}",
				description:"Configure SCP, SFTP, and FTPS file transfer settings for this account."
				},
				{
				name:"fwding &#x2192; <a href=\"#IAccountForwarding915\" onclick=\"SetInterface('IAccountForwarding915', false);return false;\">IAccountForwarding915</a> {get}",
				description:"Configure settings and restrictions for SSH connection tunneling for this account."
				},
				{
				name:"creationTime &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"Unknown\"",
				description:"The time this account settings entry was created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IVirtAccount915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"DefaultGroupYesNo915",
				description:"DefaultGroupYesNo_defaultValue (0): Use group default<br />DefaultGroupYesNo_yes (1): Yes<br />DefaultGroupYesNo_no (2): No"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				},
				{
				name:"VirtAcctSecurityContext915",
				description:"VirtAcctSecurityContext_defaultValue (0): Use group default<br />VirtAcctSecurityContext_autoAccount (1): Automatically managed local account<br />VirtAcctSecurityContext_localAccount (2): A specific Windows local account<br />VirtAcctSecurityContext_domainAccount (3): A specific Windows domain account<br />VirtAcctSecurityContext_microsoftAccount (5): A specific Microsoft account<br />VirtAcctSecurityContext_service (4): SSH Server security context (advanced, risky)"
				}
			]
			},
			{
			name:"IVirtAccountAuthentication915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"passwordAuth &#x2192; <a href=\"#IVirtAccountAuthentication915\" onclick=\"ScrollToEnum();return false;\">AuthDisp915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.AuthDisp.defaultValue",
				description:"Whether password authentication is disabled, allowed, or required for this user.\n\nThis setting can be grayed-out if password authentication is disabled globally using server-wide settings under Access control."
				},
				{
				name:"useDefaultPwdExpiration &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the default password expiration setting configured in group settings, or the value configured here."
				},
				{
				name:"pwdExpirationDays &#x2192; ULONG {get} {set}",
				defaultValue:"default: 0",
				description:"The number of days the user's password can remain unchanged before the server will require to change it. If the user is not permitted to change password, the account will be locked.\n\nWhen set to 0, password expiration will not be enforced."
				},
				{
				name:"allowGroupForcePwdChange &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the administrator will be able to force this account's password to be changed through a setting in the virtual group of which this account is a member."
				},
				{
				name:"forcePwdChange &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the password for this virtual account will need to be changed when the account next attempts to log in using password authentication."
				},
				{
				name:"allowPasswordChange &#x2192; <a href=\"#IVirtAccountAuthentication915\" onclick=\"ScrollToEnum();return false;\">DefaultGlobalYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGlobalYesNo.defaultValue",
				description:"Whether the SSH Server should allow this user to change their password during SSH authentication."
				},
				{
				name:"publicKeyAuth &#x2192; <a href=\"#IVirtAccountAuthentication915\" onclick=\"ScrollToEnum();return false;\">AuthDisp915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.AuthDisp.defaultValue",
				description:"Whether public key authentication is disabled, allowed, or required for this user."
				},
				{
				name:"allowKeyManagement &#x2192; <a href=\"#IVirtAccountAuthentication915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether the user should be allowed to manage (add, remove, list) public keys configured for their account using SSH clients that support the SSH public key management subsystem."
				},
				{
				name:"keys &#x2192; <a href=\"#IClientKeys915\" onclick=\"SetInterface('IClientKeys915', false);return false;\">IClientKeys915</a> {get}",
				description:"If public key authentication is permitted, a list of public keys that the user can use to log in. At least one public key needs to be imported, either here or for all members of this group in group settings, in order to use public key authentication."
				},
				{
				name:"totp &#x2192; <a href=\"#IAccountKbdiTotp915\" onclick=\"SetInterface('IAccountKbdiTotp915', false);return false;\">IAccountKbdiTotp915</a> {get}",
				description:"Configure time-based one-time password (TOTP) settings for this account. For most common use, simply configure a secret key and share it with the user to set up their authenticator. Other settings are provided for advanced users and should not be changed in most situations."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IVirtAccountAuthentication915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"AuthDisp915",
				description:"AuthDisp_defaultValue (0): Use group default<br />AuthDisp_disabled (1): Disabled<br />AuthDisp_allowed (2): Allowed<br />AuthDisp_required (3): Required"
				},
				{
				name:"DefaultGlobalYesNo915",
				description:"DefaultGlobalYesNo_defaultValue (0): Use global default<br />DefaultGlobalYesNo_yes (1): Yes<br />DefaultGlobalYesNo_no (2): No"
				},
				{
				name:"DefaultGroupYesNo915",
				description:"DefaultGroupYesNo_defaultValue (0): Use group default<br />DefaultGroupYesNo_yes (1): Yes<br />DefaultGroupYesNo_no (2): No"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IVirtAccountConnectionSetup915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"startReexchange &#x2192; <a href=\"#IVirtAccountConnectionSetup915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"During a lengthy connection, regular key re-exchange protects against a resourceful attacker who could analyze exchanged encrypted data and recover encryption keys. Regular key re-exchange is required by the SSH specification, but there exist implementations that will disconnect if the server starts it.\n\nIf this setting is enabled, the SSH Server will automatically initiate key re-exchange at regular intervals during an SSH connection. If disabled, the server will still accept key re-exchange if initiated by the client, but will not initiate it.\n\nDepending on the negotiated encryption algorithm and the amount of data transferred, disabling key re-exchange may significantly compromise connection security. If you are considering disabling key re-exchange, consider also updating the client software, or replacing it with software that supports key re-exchange."
				},
				{
				name:"useGroupKeepAlive &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the default keep-alive timeout configured in group settings, or the setting configured here for the account. Unless configured differently, group settings themselves inherit the server-wide keep-alive timeout configured under Server > Connection."
				},
				{
				name:"keepAliveTimeout &#x2192; ULONG {get} {set}",
				defaultValue:"default: 20",
				description:"If there is no traffic over an SSH connection for longer than this number of seconds, the SSH Server will send to the client a small packet. This verifies whether the client is still connected. This detects connections that disconnect in a way that the SSH Server is not notified. This can also keep an intermediate network component from terminating the connection due to perceived inactivity.\n\nIf your SSH or SFTP connections keep disconnecting when idle, try a low non-zero value: for example, 5 seconds. To disable this feature, configure 0.\n\nFTP connections do not have a mechanism to detect broken connections. For FTP connections, a connection timeout is always in place. The FTP connection timeout either equals the SSH connection timeout, or 45 minutes, whichever is shorter. A future version will introduce this as a separate setting."
				},
				{
				name:"useGroupConnTimeout &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the default connection timeout configured in group settings, or the setting defined here for the account. Unless configured differently, group settings themselves inherit the server-wide connection timeout configured under Server > Connection."
				},
				{
				name:"connectionTimeout &#x2192; ULONG {get} {set}",
				defaultValue:"default: 0",
				description:"The number of seconds an SSH connection may remain inactive before the SSH Server will terminate it. To disable this feature, configure 0.\n\nFTP connections do not have a mechanism to detect broken connections. For FTP connections, a connection timeout is always in place. The FTP connection timeout either equals the SSH connection timeout, or 45 minutes, whichever is shorter. A future version will introduce this as a separate setting.\n\nThe SSH Server will not terminate a connection that simulates activity, even if the activity is trivial. The SSH Server cannot prevent a client from reconnecting if the client is permitted to connect. If a client is creating too many simultaneous connections and not disconnecting them, limit the number of simultaneous connections the client can make. You can configure this in an account or group settings entry, under Limits and quotas."
				},
				{
				name:"onLogonCmd &#x2192; <a href=\"#IConnOnLogonCommandWithDefault915\" onclick=\"SetInterface('IConnOnLogonCommandWithDefault915', false);return false;\">IConnOnLogonCommandWithDefault915</a> {get}",
				description:"If configured, this command will be run immediately after the user authenticates and is successfully logged in, and before any other connection activity takes place.\n\nIf Windows session caching is enabled, this command can execute many times in the same Windows session, each time the user logs in and reuses the Windows session. If you want to perform actions that affect all connections in a Windows session; for example, to map a network drive; then configure a Windows on-logon command.\n\nThis command runs before the user opens a terminal window. The command is run for all connections, including file transfer connections which never open a terminal window. If you want to run something when the user opens a terminal window, change the user's Shell access type to \"Custom shell settings\". Then, configure a custom \"Terminal shell\" and \"Exec request prefix\" so that the shell runs the desired command. For example, you can set \"Terminal shell\" to \"cmd.exe /k C:\\Path\\Script.cmd\", and \"Exec request prefix\" to \"cmd.exe /c C:\\Path\\Script.cmd &&\"."
				},
				{
				name:"onLogoffCmd &#x2192; <a href=\"#IConnOnLogoffCommandWithDefault915\" onclick=\"SetInterface('IConnOnLogoffCommandWithDefault915', false);return false;\">IConnOnLogoffCommandWithDefault915</a> {get}",
				description:"If configured, this command will be run immediately after the user disconnects after successfully authenticating."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IVirtAccountConnectionSetup915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"DefaultGroupYesNo915",
				description:"DefaultGroupYesNo_defaultValue (0): Use group default<br />DefaultGroupYesNo_yes (1): Yes<br />DefaultGroupYesNo_no (2): No"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IVirtAccountFileTransfer915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"permitScp &#x2192; <a href=\"#IVirtAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether SCP file transfer should be allowed for this user."
				},
				{
				name:"permitSftp &#x2192; <a href=\"#IVirtAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether SFTP file access should be allowed for this user. The availability of SCP and FTPS file transfer is unaffected by this setting."
				},
				{
				name:"permitFtps &#x2192; <a href=\"#IVirtAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether the user should be permitted to access the server using FTP over TLS (SSL).\n\nFTPS access requires an FTP binding to be configured in server settings. FTPS is not available on Windows XP and Windows Server 2003 due to absence of adequate TLS support on these platforms."
				},
				{
				name:"loadProfileForFileXfer &#x2192; <a href=\"#IVirtAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Whether the SSH Server should load this user's Windows profile before starting SCP, SFTP, or FTPS.\n\nEnabling this setting ensures the user's profile will be loaded if it was not already loaded for another reason. If this setting is disabled, the SSH Server may still load the user's profile because of another setting. If Windows session sharing is enabled, the user's profile may already be loaded.\n\nFor more information about disabling Windows profile loading, see Q260 and Q265 in the SSH Server Usage FAQ:\nhttps://www.bitvise.com/ssh-server-usage-faq#Q260 \n"
				},
				{
				name:"omitRelative &#x2192; <a href=\"#IVirtAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Omit relative directory entries \".\" and \"..\" from directory listings in SFTP. With most clients, relative directory entries are either helpful or ignored. However, this setting may be useful with specific clients, especially special-purpose or custom-made, that can have trouble handling them.\n\nIf this setting is enabled, an SFTP client connecting as this user will not receive relative entries in directory listings."
				},
				{
				name:"limitToSftp3 &#x2192; <a href=\"#IVirtAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"The SFTP protocol version is a separate concept from the SSH protocol version. Bitvise SSH Server always uses SSH protocol version 2. However, the supported SFTP versions are 3, 4, and 6.\n\nSFTP versions 4 and 6 are newer and more feature-complete than SFTP version 3. There may sometimes be interoperability issues when using these versions that do not arise if the client and server settle on SFTP version 3.\n\nIf you run into an interoperability issue with an SFTP client, please report it to us so that we can improve interoperability in future SSH Server versions. In the meanwhile, enabling this setting may resolve an interoperability issue by forcing a client to use SFTP version 3 instead of newer SFTP versions.\n\nIf this setting is enabled, this user will be limited to SFTP version 3. Features specific to newer SFTP versions will be unavailable to this user."
				},
				{
				name:"useDefaultPosixPerm &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use default POSIX permissions as configured in group settings, or settings defined here for the account. Unless configured differently, group settings themselves inherit values configured globally in the Server section of settings."
				},
				{
				name:"posixPermDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"770\"",
				description:"Controls POSIX permissions that will be sent to SFTP, SCP, and FTPS clients for directories.\n\nMust be between 0 and 7777, and may only contain digits 0 to 7."
				},
				{
				name:"posixPermFile &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"660\"",
				description:"Controls POSIX permissions that will be sent to SFTP, SCP, and FTPS clients for files.\n\nMust be between 0 and 7777, and may only contain digits 0 to 7."
				},
				{
				name:"useBvShellWithWinScp &#x2192; <a href=\"#IVirtAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"If enabled, BvShell will be used as terminal shell when a WinSCP client connects using the SCP file transfer protocol. When used in SCP mode, WinSCP requires a Unix-like terminal shell, which BvShell imitates.\n\nBvShell respects the virtual filesystem layout configured for the user, and does not permit execution of arbitrary programs.\n\nThis setting does not affect SFTP file transfer, or access with clients other than WinSCP. "
				},
				{
				name:"displayTime &#x2192; <a href=\"#IVirtAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DisplayTimeType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DisplayTimeType.defaultValue",
				description:"Format of the time sent to the client in the SFTP \"long name\" field.\n\nSFTP encodes file time information in binary, using the UTC time zone, and this is used properly by most clients. Normal SFTP file times are not affected by this setting.\n\nHowever, some clients - including OpenSSH, and PuTTY's PSFTP - rely on information in the SFTP \"long name\" field. The \"long name\" field is interpreted by the client as a Unix-like directory listing, and may need to contain file times in a format preferred by the client."
				},
				{
				name:"useDefaultMaxPathLength &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the default maximum path length as configured in group settings, or the value defined here for the account. Unless configured differently, group settings themselves inherit the server-wide value configured in the Server section of settings."
				},
				{
				name:"maxPathLength &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3000",
				description:"Paths longer than 259 characters may be inaccessible by many programs on Windows. This was a fundamental limit in very old versions of Windows, so many programs - including Windows components - remain affected by it. The number is determined by the Windows constant MAX_PATH (260) minus 1 character for the null terminator.\n\nOn recent Windows versions, the fundamental maximum path length is around 32*1024 characters. However, not all programs support paths or filenames of such length."
				},
				{
				name:"allowAltStreams &#x2192; <a href=\"#IVirtAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Windows supports alternate data streams in filesystems including NTFS (the Windows NT File System) and ReFS (Resilient File System, introduced with Windows Server 2012).\n\nIf clients are allowed to create alternate streams, data written this way may be difficult to detect or validate with many tools. If clients are allowed to read or modify alternate streams, the information in those streams may have special meaning that clients should not be able to read or modify.\n\nNote that control characters in range 0x01-0x1F are valid in names of alternate data streams. This may further complicate detecting and validating alternate stream content depending on tools used. Whether clients are able to create or access alternate data streams containing control characters is influenced by the setting Allow unsafe names."
				},
				{
				name:"allowUnsafeNames &#x2192; <a href=\"#IVirtAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"Windows supports creation of files with names that are difficult to access with some tools, including Windows components. Attempting to access files with such names, or even communicating the names, may have unintended side effects.\n\nThe SSH Server treats the following as unsafe Windows file names (case-insensitive): CON, PRN, AUX, NUL, COM[1-9], LPT[1-9], CONIN$, CONOUT$; names ending with space (' ') or dot ('.'); and alternate data streams with characters in range 0x01-0x1F (control characters). Note that control characters above 0x20 (e.g. 0x7F) are valid Windows path characters."
				},
				{
				name:"inheritMountPoints &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether the account should inherit virtual filesystem mount points configured in group settings."
				},
				{
				name:"undefMountPoints &#x2192; <a href=\"#ISfsUndefMountPoints915\" onclick=\"SetInterface('ISfsUndefMountPoints915', false);return false;\">ISfsUndefMountPoints915</a> {get}",
				description:"If the account inherits virtual filesystem mount points configured in group settings, some of those mount points can be excluded from inheritance (as if they were not defined) by listing them here."
				},
				{
				name:"mountPoints &#x2192; <a href=\"#ISfsMountPoints915\" onclick=\"SetInterface('ISfsMountPoints915', false);return false;\">ISfsMountPoints915</a> {get}",
				description:"Mount points are virtual folders that this user or group has access to. Add one or more virtual folders to configure file access for SCP, SFTP, and FTPS.\n\nIf the setting Inherit group mount points is enabled, there may be additional mount points not visible here, configured in group settings. A mount point in group settings will take effect unless its Virtual mount path is overridden here, or it is removed using Excluded group mount points."
				},
				{
				name:"useDefaultSfsHomeDir &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use the default virtual home directory as configured in group settings, or the virtual home directory specified here."
				},
				{
				name:"sfsHomeDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"/\"",
				description:"The home directory must correspond to a virtual path inside the above list of mount points. This setting controls the SCP, SFTP, and FTPS initial directory for this user or group.\n\nIf this setting is left empty, the user will initially find themselves at the root of the virtual filesystem tree.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"createSfsHomeDir &#x2192; <a href=\"#IVirtAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"If enabled, the SSH Server will create the virtual home directory, if it does not yet exist."
				},
				{
				name:"delIncompleteUploads &#x2192; <a href=\"#IVirtAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGroupYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGroupYesNo.defaultValue",
				description:"If enabled, the SSH Server will delete files that were created by the client and were not properly closed by the time the client disconnects or closes the SFTP channel."
				},
				{
				name:"moveCompletedUploads &#x2192; <a href=\"#IMoveCompletedUploadsWithDefault915\" onclick=\"SetInterface('IMoveCompletedUploadsWithDefault915', false);return false;\">IMoveCompletedUploadsWithDefault915</a> {get}",
				description:"If configured, the SSH Server can automatically move files when they are properly closed by the client after uploading.\n\nThe move operation will activate only for mount points backed by the Windows filesystem. These are mount points that use the provider FlowSfsWin."
				},
				{
				name:"onUploadCmd &#x2192; <a href=\"#IConnOnUploadCommandWithDefault915\" onclick=\"SetInterface('IConnOnUploadCommandWithDefault915', false);return false;\">IConnOnUploadCommandWithDefault915</a> {get}",
				description:"If configured, this command will be executed after closing a file that has been written to by the client."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IVirtAccountFileTransfer915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"DefaultGroupYesNo915",
				description:"DefaultGroupYesNo_defaultValue (0): Use group default<br />DefaultGroupYesNo_yes (1): Yes<br />DefaultGroupYesNo_no (2): No"
				},
				{
				name:"DisplayTimeType915",
				description:"DisplayTimeType_defaultValue (0): Use group default<br />DisplayTimeType_serverTimeWithOffset (1): Server local time with offset<br />DisplayTimeType_serverTime (2): Server local time<br />DisplayTimeType_utc (3): UTC"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IVirtAccountSessionSetup915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"logonType &#x2192; <a href=\"#IVirtAccountSessionSetup915\" onclick=\"ScrollToEnum();return false;\">LogonType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.LogonType.defaultValue",
				description:"The Windows logon type to use when this user logs in.\n\nThe 'Interactive' logon type grants the logon session the same Windows permissions as when the Windows account that provides the security context is logged on locally at the server's keyboard. Login with this logon type will fail if the Windows account does not have the right to 'Log on locally' configured in Windows security policy that applies to the server computer. This right is normally granted to all users in a default Windows configuration, but on a domain controller it is granted only to administrators.\n\nThe 'Network' logon type requires the Windows account to have the right to 'Access this computer from the network', but it does not require 'Log on locally'. Network logon will work well on most Windows installations, except outdated Windows Server versions where interactive logon is required to use cmd.exe and other command line tools. On those servers, unrestricted terminal shell access will not work with the 'Network' logon type, but file transfer and tunneling will function.\n\nThe 'Batch' logon type requires the Windows account to have the right to 'Log on as batch job'. Windows grants this by default to Administrators, Backup Operators and Performance Log Users. The Windows Task Scheduler uses this logon type for tasks that run when no user is logged on. This logon type may allow programs to run which do not run correctly under 'Network' or 'Interactive'.\n\nRecommendation: 'Network' is the suggested logon type for all current Windows versions. For users who require unrestricted terminal shell access, you may set logon type to 'Interactive'. Set the logon type to 'Batch' if the program you're trying to run does not run otherwise.\n\nNote: When using the Kerberos or NTLM authentication methods, Windows does not provide a way for the SSH Server to use the 'Interactive' logon type. When logging in with Kerberos or NTLM, Windows will behave as if the 'Network' logon type was used."
				},
				{
				name:"onAccountInfoFailure &#x2192; <a href=\"#IVirtAccountSessionSetup915\" onclick=\"ScrollToEnum();return false;\">OnAccountInfoFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnAccountInfoFailure.defaultValue",
				description:"It is possible that the SSH Server can log a user in successfully, but Windows reports an error when attempting to obtain account information, such as the location of the user's profile directory. This can create undesired outcomes, or even security risks, if your configuration depends on environment variables such as %HOME% to be set correctly.\n\nIn most environments, the setting Disable access to child processes is sufficient to mitigate such risks. If an error occurs, file transfer, terminal, and exec requests will not function, but port forwarding will work.\n\nIf this is set to Disable Windows profile loading, then if there is an account info failure, file transfer and BvShell may continue to work, but environment variables may be set to different values than expected. Terminal and exec requests will not function because the user's Windows profile will not be loaded.\n\nIf this is set to No restrictions, then if there is an account info failure, and the SSH Server needs to load the user's Windows profile, it will attempt to load it with a null profile path. If this succeeds, all functionality will continue to be available, but the Windows profile may be loaded differently than expected, and related environment variables may be set to different values than expected."
				},
				{
				name:"ifTemporaryProfileLoaded &#x2192; <a href=\"#IVirtAccountSessionSetup915\" onclick=\"ScrollToEnum();return false;\">IfTemporaryProfileLoaded915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.IfTemporaryProfileLoaded.defaultValue",
				description:"Certain settings will cause the SSH Server to load the Windows profile for the user's logon session. Profile loading is performed by Windows and can fail. If the intended Windows profile cannot be loaded, Windows might load a temporary profile instead. The temporary profile may contain different settings and environment variables than the intended Windows profile. This may cause the SSH connection to behave differently than intended.\n\nWith Treat as failure, a temporary profile is treated as if the profile failed to load. Actions which require a Windows profile to be loaded will not succeed. This includes, for example, terminal shell access (when not using BvShell), or synchronization with authorized_keys.\n\nWith No restrictions, a temporary profile will be treated as if the intended profile was successfully loaded. Actions which depend on the Windows profile to be loaded will succeed, but could have different outcomes than intended."
				},
				{
				name:"useGroupWinSessionStgs &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether to use default Windows session settings configured in group settings, or the settings defined here for this account. Unless configured differently, group settings themselves inherit values configured globally under Server > Sessions."
				},
				{
				name:"winSessionSharing &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether multiple connections from the same user can share the same Windows session. When connections share a Windows session, actions performed by one connection may affect others. For example, when one connection maps a Windows file share, the same share becomes accessible to other connections in the same Windows session. If one connection disconnects a share, that share stops being available to other connections. A connection which does not require a Windows profile to be loaded may run inside a Windows session in which the Windows profile is loaded, if it was loaded previously by another connection.\n\nConnections that log in as separate accounts - Windows or virtual - cannot share the same Windows session. If SSH Server settings change in a way that affects Windows session initialization, subsequent connections will receive a new Windows session."
				},
				{
				name:"winSessionKeepAliveSecs &#x2192; ULONG {get} {set}",
				defaultValue:"default: 600",
				description:"The number of seconds a Windows session stays cached after the last connection which was using the Windows session disconnects."
				},
				{
				name:"maxWinSessionAgeHours &#x2192; ULONG {get} {set}",
				defaultValue:"default: 768",
				description:"After a Windows session was created, the maximum number of hours it can continue to be reused. After this time expires, the Windows session will be closed, and a new one will be created when the next connection needs it."
				},
				{
				name:"windowsFileShareSettings &#x2192; <a href=\"#INetworkShareVirtAccountSettings915\" onclick=\"SetInterface('INetworkShareVirtAccountSettings915', false);return false;\">INetworkShareVirtAccountSettings915</a> {get}",
				description:"Settings in this group control how to handle connections to Windows file shares: whether to map a remote home directory; whether to map remembered shares; and what to do if file share connections fail."
				},
				{
				name:"shares &#x2192; <a href=\"#IFileShares915\" onclick=\"SetInterface('IFileShares915', false);return false;\">IFileShares915</a> {get}",
				description:"A list of shared folders on other computers in the local network to which the SSH Server should establish connections when this user logs in.\n\nThere may be additional Windows file share entries not visible here, configured in group settings."
				},
				{
				name:"windowsOnLogonCmd &#x2192; <a href=\"#IWinOnLogonCommandWithDefault915\" onclick=\"SetInterface('IWinOnLogonCommandWithDefault915', false);return false;\">IWinOnLogonCommandWithDefault915</a> {get}",
				description:"If configured, this command will be run when a Windows session is initialized for this user.\n\nIf Windows session sharing is enabled, then a Windows session will be initialized when a user first connects and authenticates. Subsequent connections from the same user may reuse the same Windows session. When a Windows session is reused, the Windows on-logon command is not run in that session again.\n\nIf Windows session sharing is disabled, then a new Windows session is initialized for each connection where the user authenticates. In this case, the Windows on-logon command runs before the per-connection On-logon command, if one is configured.\n\nThe Windows on-logon command is suitable to initialize resources which should be available to all connections from the same user. For example, this command is suitable to map a network drive."
				},
				{
				name:"windowsOnLogoffCmd &#x2192; <a href=\"#IWinOnLogoffCommandWithDefault915\" onclick=\"SetInterface('IWinOnLogoffCommandWithDefault915', false);return false;\">IWinOnLogoffCommandWithDefault915</a> {get}",
				description:"If configured, this command will be run when a Windows session is dismissed for this user.\n\nIf Windows session sharing is enabled, a single Windows session can be used for one or more, or many connections from the same user. A Windows session gets dismissed when the user has been disconnected for a configurable amount of time. A Windows session also gets dismissed when it has been around for a configurable maximum time; or when certain user settings change in a way that requires the SSH Server to initialize a new Windows session.\n\nIf Windows session sharing is disabled, then a new Windows session is initialized for each connection where the user authenticates, and dismissed when the user disconnects. In this case, the Windows on-logoff command runs after the On-disconnect command, if one is configured.\n"
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IVirtAccountSessionSetup915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"IfTemporaryProfileLoaded915",
				description:"IfTemporaryProfileLoaded_defaultValue (0): Use group default<br />IfTemporaryProfileLoaded_treatAsFailure (1): Treat as failure<br />IfTemporaryProfileLoaded_noRestrict (2): No restrictions"
				},
				{
				name:"LogonType915",
				description:"LogonType_defaultValue (0): Use group default<br />LogonType_interactive (1): Interactive<br />LogonType_network (2): Network<br />LogonType_batch (3): Batch"
				},
				{
				name:"OnAccountInfoFailure915",
				description:"OnAccountInfoFailure_defaultValue (0): Use group default<br />OnAccountInfoFailure_denyLogin (1): Deny login<br />OnAccountInfoFailure_restrictAccess (2): Disable access to child processes<br />OnAccountInfoFailure_disableProfile (3): Disable Windows profile loading<br />OnAccountInfoFailure_noRestrict (4): No restrictions"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IVirtAccounts915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IVirtAccount915\" onclick=\"SetInterface('IVirtAccount915', false);return false;\">IVirtAccount915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IVirtAccount915\" onclick=\"SetInterface('IVirtAccount915', false);return false;\">IVirtAccount915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IVirtAccounts915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IVirtAccount915\" onclick=\"SetInterface('IVirtAccount915', false);return false;\">IVirtAccount915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IVirtAccounts915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IVirtAccount915\" onclick=\"SetInterface('IVirtAccount915', false);return false;\">IVirtAccount915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IVirtAccount915\" onclick=\"SetInterface('IVirtAccount915', false);return false;\">IVirtAccount915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IVirtAccount915\" onclick=\"SetInterface('IVirtAccount915', false);return false;\">IVirtAccount915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IVirtAccount915\" onclick=\"SetInterface('IVirtAccount915', false);return false;\">IVirtAccount915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IVirtAccount915\" onclick=\"SetInterface('IVirtAccount915', false);return false;\">IVirtAccount915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IVirtAccount915\" onclick=\"SetInterface('IVirtAccount915', false);return false;\">IVirtAccount915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IVirtAccountsPwdPolicy915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"minPwdLen &#x2192; BYTE {get} {set}",
				defaultValue:"default: 0",
				description:"The minimum number of total characters required in virtual account passwords.\n\nWhen set to 0, no minimum password length will be enforced."
				},
				{
				name:"reqAlphaChars &#x2192; BYTE {get} {set}",
				defaultValue:"default: 0",
				description:"The minimum number of alphabetic characters (letters) required in virtual account passwords.\n\nWhen set to 0, no minimum number of alpha characters will be enforced."
				},
				{
				name:"reqNumericChars &#x2192; BYTE {get} {set}",
				defaultValue:"default: 0",
				description:"The minimum number of numeric characters (digits) required in virtual account passwords.\n\nWhen set to 0, no minimum number of numeric characters will be enforced."
				},
				{
				name:"reqSpecialChars &#x2192; BYTE {get} {set}",
				defaultValue:"default: 0",
				description:"The minimum number of special (non-alphanumeric) characters required in virtual account passwords.\n\nWhen set to 0, no minimum number of special characters will be enforced."
				},
				{
				name:"preventOldPwdReuse &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to prevent a new password from being the same as the immediate previous one."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IVirtAccountsPwdPolicy915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IVirtGroup915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! group &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"Virtual Users\"",
				description:"Choose a name for this virtual group."
				},
				{
				name:"comment &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Optional field to describe this settings entry and its purpose.\n\nThis field is not used by the SSH Server. It is preserved and displayed in settings."
				},
				{
				name:"securityContext &#x2192; <a href=\"#IVirtGroup915\" onclick=\"ScrollToEnum();return false;\">VirtAcctSecurityContext915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.VirtAcctSecurityContext.autoAccount",
				description:"When an SSH client logs into a virtual account, SSH subsystems accessed using that account must be started using some Windows security context.\n\nBy default, the SSH Server will use a Windows account with standard, non-administrative user rights, which is created and managed by the SSH Server for this purpose. If this account doesn't exist, it is created any time the SSH Server starts, and is assigned a random and highly complex password beyond anyone's ability to brute force. For an unnamed Bitvise SSH Server installation, the default account is named 'BvSsh_VirtualUsers'.\n\nFor a named-instance SSH Server installation, the account name equals the SSH Server's instance name if the instance name is simple enough to be used as the account name. Otherwise, the name is generated randomly. In this case, you can discover the account name through Windows user account management under Control Panel or Administrative Tools, or by executing 'net user'.\n\nIf a specific account is configured, the SSH Server will use that Windows account to provide the security context for the virtual account logon session. If the user needs to access network resources, add a password for the Windows account into the SSH Server's password cache. Alternately, use the \"Windows file shares\" setting to configure explicit credentials for network share access.\n\nOn domain controllers, the default setting (automatically managed local account) cannot be used. Local accounts do not exist on Windows domain controllers, so the SSH Server cannot create and manage a default account for virtual users. You must specify a domain account, which you configured in Active Directory, when using the SSH Server on a domain controller."
				},
				{
				name:"winDomain &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The domain name of the Windows account to impersonate when virtual accounts of this group are logged into."
				},
				{
				name:"winAccount &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The Windows account name, without domain, to impersonate when virtual accounts that inherit settings from this group log in.\n\nThe SSH Server will use this Windows account to provide the security context for the virtual account logon session. The password for this Windows account can be added into the SSH Server's password cache using the \"Manage password cache\" interface in the SSH Server Control Panel. If a password is available in the password cache, the SSH Server will use it to log into this Windows account. If no password is available, the SSH Server will create a password-less logon.\n\nA password-less logon will not permit the user to access network resources using the credentials of the Windows account. If the user needs to access network resources, enter the Windows account's password into the SSH Server's password cache. Alternately, you can configure explicit credentials to access network shares using the setting \"Windows file shares\"."
				},
				{
				name:"loginAllowed &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether login into the SSH Server is allowed."
				},
				{
				name:"editableByDelegatedAdmin &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether their account settings entry can be edited by delegated administrators."
				},
				{
				name:"limits &#x2192; <a href=\"#IGroupLimitsAndQuotas915\" onclick=\"SetInterface('IGroupLimitsAndQuotas915', false);return false;\">IGroupLimitsAndQuotas915</a> {get}",
				description:"Configure default values for the maximum number of simultaneous connections; bandwidth limits; and daily or monthly bandwidth quotas for members of this group."
				},
				{
				name:"clientAddresses &#x2192; <a href=\"#IAddressAcceptRules915\" onclick=\"SetInterface('IAddressAcceptRules915', false);return false;\">IAddressAcceptRules915</a> {get}",
				description:"Rules to accept or deny login for members of this group based on the IP address, DNS name, or geographic location from which a user connects. Rules are processed on a first-match basis, so the order of rules is important. Use arrow buttons at bottom to control which rules are processed first. To log blocked connections, enable the event T_CONNECT_REJECTED_BLOCKED."
				},
				{
				name:"auth &#x2192; <a href=\"#IVirtGroupAuthentication915\" onclick=\"SetInterface('IVirtGroupAuthentication915', false);return false;\">IVirtGroupAuthentication915</a> {get}",
				description:"Configure default password and public key authentication settings for members of this group."
				},
				{
				name:"remoteAdminAccess &#x2192; <a href=\"#IRemoteAdminAccess915\" onclick=\"SetInterface('IRemoteAdminAccess915', false);return false;\">IRemoteAdminAccess915</a> {get}",
				description:"Configure default remote administration access settings for members of this group. Remote administration includes partial or complete access to server settings, host keys, and/or password cache.\n\nWhen using delegated administration, you can limit the mount point root paths which a delegated administrator can configure. This is configured outside of account and group settings, under Access control > Limit delegated administrator mount points.\n\nTo use remote administration, the user must connect using Bitvise SSH Client."
				},
				{
				name:"connection &#x2192; <a href=\"#IVirtGroupConnectionSetup915\" onclick=\"SetInterface('IVirtGroupConnectionSetup915', false);return false;\">IVirtGroupConnectionSetup915</a> {get}",
				description:"Settings having to do with establishment and maintenance of incoming connections for members of this group whose individual account settings are not defined differently."
				},
				{
				name:"session &#x2192; <a href=\"#IVirtGroupSessionSetup915\" onclick=\"SetInterface('IVirtGroupSessionSetup915', false);return false;\">IVirtGroupSessionSetup915</a> {get}",
				description:"Settings having to do with initialization and caching of Windows sessions for members of this group whose individual account settings are not defined differently."
				},
				{
				name:"term &#x2192; <a href=\"#IGroupTerminalAndExec915\" onclick=\"SetInterface('IGroupTerminalAndExec915', false);return false;\">IGroupTerminalAndExec915</a> {get}",
				description:"Configure default terminal shell and exec request settings for members of this group. Use BvShell to allow shell access, but still restrict the user to virtual filesystem directories configured in the user's account and group settings."
				},
				{
				name:"xfer &#x2192; <a href=\"#IVirtGroupFileTransfer915\" onclick=\"SetInterface('IVirtGroupFileTransfer915', false);return false;\">IVirtGroupFileTransfer915</a> {get}",
				description:"Configure default SCP, SFTP, and FTPS file transfer settings for members of this group."
				},
				{
				name:"fwding &#x2192; <a href=\"#IGroupForwarding915\" onclick=\"SetInterface('IGroupForwarding915', false);return false;\">IGroupForwarding915</a> {get}",
				description:"Configure default settings and restrictions for SSH connection tunneling for members of this group."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IVirtGroup915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				},
				{
				name:"VirtAcctSecurityContext915",
				description:"VirtAcctSecurityContext_autoAccount (1): Automatically managed local account<br />VirtAcctSecurityContext_localAccount (2): A specific Windows local account<br />VirtAcctSecurityContext_domainAccount (3): A specific Windows domain account<br />VirtAcctSecurityContext_microsoftAccount (5): A specific Microsoft account<br />VirtAcctSecurityContext_service (4): SSH Server security context (advanced, risky)"
				}
			]
			},
			{
			name:"IVirtGroupAuthentication915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"passwordAuth &#x2192; <a href=\"#IVirtGroupAuthentication915\" onclick=\"ScrollToEnum();return false;\">AuthDisp915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.AuthDisp.allowed",
				description:"For members of this group whose individual settings are not defined differently, whether password authentication is disabled, available, or required.\n\nThis setting can be grayed-out if password authentication is disabled globally using server-wide settings under Access control."
				},
				{
				name:"pwdExpirationDays &#x2192; ULONG {get} {set}",
				defaultValue:"default: 0",
				description:"For members of this group whose individual settings are not defined differently, the number of days the user's password can remain unchanged before the server will require to change it. If the user is not permitted to change their password, the account will be locked.\n\nWhen set to 0, password expiration will not be enforced."
				},
				{
				name:"makeAllAccountsChangePwd &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If this setting is enabled, then when the current settings are saved, a password change flag will be set for all members of this group whose account settings do not explicitly prevent this. This flag will require the password of each account to be changed when the account next attempts to log in using password authentication.\n\nAccounts affected by this flag must have a virtual account password already set, and must be permitted to perform password change. Users for whom this is not true will not be able to change their passwords. Such accounts may still be able to log in using e.g. public key authentication."
				},
				{
				name:"publicKeyAuth &#x2192; <a href=\"#IVirtGroupAuthentication915\" onclick=\"ScrollToEnum();return false;\">AuthDisp915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.AuthDisp.allowed",
				description:"For members of this group whose individual settings are not defined differently, whether public key authentication is disabled, available, or required."
				},
				{
				name:"allowKeyManagement &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether they should be allowed to manage (add, remove, list) public keys configured for their accounts using SSH clients that support the SSH public key management subsystem."
				},
				{
				name:"keys &#x2192; <a href=\"#IClientKeys915\" onclick=\"SetInterface('IClientKeys915', false);return false;\">IClientKeys915</a> {get}",
				description:"A list of public keys that any member of the group can use to log in. This is not secure unless your settings also require another authentication method, such as password, that individually authenticates the user.\n\nUse of this setting is not recommended. It is maintained for compatibility with existing configurations. New users should avoid using public keys in group settings. Public keys should be configured in individual account settings entries. Each user that logs in using public key authentication should be set up so they can only log in with their own individual key."
				},
				{
				name:"totp &#x2192; <a href=\"#IGroupKbdiTotp915\" onclick=\"SetInterface('IGroupKbdiTotp915', false);return false;\">IGroupKbdiTotp915</a> {get}",
				description:"Configure time-based one-time password (TOTP) settings for this group."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IVirtGroupAuthentication915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"AuthDisp915",
				description:"AuthDisp_disabled (1): Disabled<br />AuthDisp_allowed (2): Allowed<br />AuthDisp_required (3): Required"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IVirtGroupConnectionSetup915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"startReexchange &#x2192; <a href=\"#IVirtGroupConnectionSetup915\" onclick=\"ScrollToEnum();return false;\">DefaultGlobalYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGlobalYesNo.defaultValue",
				description:"During a lengthy connection, regular key re-exchange protects against a resourceful attacker who could analyze exchanged encrypted data and recover encryption keys. Regular key re-exchange is required by the SSH specification, but there exist implementations that will disconnect if the server starts it.\n\nIf this setting is enabled, the SSH Server will automatically initiate key re-exchange at regular intervals during an SSH connection. If disabled, the server will still accept key re-exchange if initiated by the client, but will not initiate it.\n\nDepending on the negotiated encryption algorithm and the amount of data transferred, disabling key re-exchange may significantly compromise connection security. If you are considering disabling key re-exchange, consider also updating the client software, or replacing it with software that supports key re-exchange."
				},
				{
				name:"useGlobalKeepAlive &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether to use the server-wide keep-alive timeout configured under Server > Connections, or the value defined here for the group."
				},
				{
				name:"keepAliveTimeout &#x2192; ULONG {get} {set}",
				defaultValue:"default: 20",
				description:"If there is no traffic over an SSH connection for longer than this number of seconds, the SSH Server will send to the client a small packet. This verifies whether the client is still connected. This detects connections that disconnect in a way that the SSH Server is not notified. This can also keep an intermediate network component from terminating the connection due to perceived inactivity.\n\nIf your SSH or SFTP connections keep disconnecting when idle, try a low non-zero value: for example, 5 seconds. To disable this feature, configure 0.\n\nFTP connections do not have a mechanism to detect broken connections. For FTP connections, a connection timeout is always in place. The FTP connection timeout either equals the SSH connection timeout, or 45 minutes, whichever is shorter. A future version will introduce this as a separate setting."
				},
				{
				name:"useGlobalConnTimeout &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether to use the server-wide connection timeout configured under Server > Connections, or the value defined here for the group."
				},
				{
				name:"connectionTimeout &#x2192; ULONG {get} {set}",
				defaultValue:"default: 0",
				description:"The number of seconds an SSH connection may remain inactive before the SSH Server will terminate it. To disable this feature, configure 0.\n\nFTP connections do not have a mechanism to detect broken connections. For FTP connections, a connection timeout is always in place. The FTP connection timeout either equals the SSH connection timeout, or 45 minutes, whichever is shorter. A future version will introduce this as a separate setting.\n\nThe SSH Server will not terminate a connection that simulates activity, even if the activity is trivial. The SSH Server cannot prevent a client from reconnecting if the client is permitted to connect. If a client is creating too many simultaneous connections and not disconnecting them, limit the number of simultaneous connections the client can make. You can configure this in an account or group settings entry, under Limits and quotas."
				},
				{
				name:"onLogonCmd &#x2192; <a href=\"#IConnOnLogonCommand915\" onclick=\"SetInterface('IConnOnLogonCommand915', false);return false;\">IConnOnLogonCommand915</a> {get}",
				description:"If configured, then for members of this group that do not configure this differently, this command will be run immediately after the user authenticates and is successfully logged in, and before any other connection activity takes place.\n\nIf Windows session caching is enabled, this command can execute many times in the same Windows session, each time the user logs in and reuses the Windows session. If you want to perform actions that affect all connections in a Windows session; for example, to map a network drive; then configure a Windows on-logon command.\n\nThis command runs before the user opens a terminal window. The command is run for all connections, including file transfer connections which never open a terminal window. If you want to run something when the user opens a terminal window, change the user's Shell access type to \"Custom shell settings\". Then, configure a custom \"Terminal shell\" and \"Exec request prefix\" so that the shell runs the desired command. For example, you can set \"Terminal shell\" to \"cmd.exe /k C:\\Path\\Script.cmd\", and \"Exec request prefix\" to \"cmd.exe /c C:\\Path\\Script.cmd &&\"."
				},
				{
				name:"onLogoffCmd &#x2192; <a href=\"#IConnOnLogoffCommand915\" onclick=\"SetInterface('IConnOnLogoffCommand915', false);return false;\">IConnOnLogoffCommand915</a> {get}",
				description:"If configured, then for members of this group that do not configure this differently, this command will be run immediately after the user disconnects after successfully authenticating."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IVirtGroupConnectionSetup915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"DefaultGlobalYesNo915",
				description:"DefaultGlobalYesNo_defaultValue (0): Use global default<br />DefaultGlobalYesNo_yes (1): Yes<br />DefaultGlobalYesNo_no (2): No"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IVirtGroupFileTransfer915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"permitScp &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether SCP file transfer should be allowed."
				},
				{
				name:"permitSftp &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether SFTP file access should be allowed. The availability of SCP and FTPS file transfer is unaffected by this setting."
				},
				{
				name:"permitFtps &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether access using FTP over TLS (SSL) should be allowed.\n\nFTPS access requires an FTP binding to be configured in server settings. FTPS is not available on Windows XP and Windows Server 2003 due to absence of adequate TLS support on these platforms."
				},
				{
				name:"loadProfileForFileXfer &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"For members of this group whose individual settings are not defined differently, this setting controls whether the SSH Server should load a user's Windows profile before starting SCP, SFTP, or FTPS.\n\nEnabling this setting ensures the user's profile will be loaded if it was not already loaded for another reason. If this setting is disabled, the SSH Server may still load the user's profile because of another setting. If Windows session sharing is enabled, the user's profile may already be loaded.\n\nFor more information about disabling Windows profile loading, see Q260 and Q265 in the SSH Server Usage FAQ:\nhttps://www.bitvise.com/ssh-server-usage-faq#Q260 \n"
				},
				{
				name:"omitRelative &#x2192; <a href=\"#IVirtGroupFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGlobalYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGlobalYesNo.defaultValue",
				description:"Omit relative directory entries \".\" and \"..\" from directory listings in SFTP. With most clients, relative directory entries are either helpful or ignored. However, this setting may be useful with specific clients, especially special-purpose or custom-made, that can have trouble handling them.\n\nIf this setting is enabled, an SFTP client whose account settings entry does not override this setting will not receive relative entries in directory listings."
				},
				{
				name:"limitToSftp3 &#x2192; <a href=\"#IVirtGroupFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGlobalYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGlobalYesNo.defaultValue",
				description:"The SFTP protocol version is a separate concept from the SSH protocol version. Bitvise SSH Server always uses SSH protocol version 2. However, the supported SFTP versions are 3, 4, and 6.\n\nSFTP versions 4 and 6 are newer and more feature-complete than SFTP version 3. There may sometimes be interoperability issues when using these versions that do not arise if the client and server settle on SFTP version 3.\n\nIf you run into an interoperability issue with an SFTP client, please report it to us so that we can improve interoperability in future SSH Server versions. In the meanwhile, enabling this setting may resolve an interoperability issue by forcing a client to use SFTP version 3 instead of newer SFTP versions.\n\nIf this setting is enabled, all SFTP clients whose account settings entry does not override this setting will be limited to SFTP version 3. Features specific to newer SFTP versions will be unavailable to these clients."
				},
				{
				name:"useDefaultPosixPerm &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether to use server-wide default POSIX permissions configured in the Server section of settings, or settings defined here for the group."
				},
				{
				name:"posixPermDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"770\"",
				description:"Controls POSIX permissions that will be sent to SFTP, SCP, and FTPS clients for directories.\n\nMust be between 0 and 7777, and may only contain digits 0 to 7."
				},
				{
				name:"posixPermFile &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"660\"",
				description:"Controls POSIX permissions that will be sent to SFTP, SCP, and FTPS clients for files.\n\nMust be between 0 and 7777, and may only contain digits 0 to 7."
				},
				{
				name:"useBvShellWithWinScp &#x2192; <a href=\"#IVirtGroupFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGlobalYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGlobalYesNo.defaultValue",
				description:"If enabled, BvShell will be used as terminal shell when a WinSCP client connects using the SCP file transfer protocol. When used in SCP mode, WinSCP requires a Unix-like terminal shell, which BvShell imitates.\n\nBvShell respects the virtual filesystem layout configured for the user, and does not permit execution of arbitrary programs.\n\nThis setting does not affect SFTP file transfer, or access with clients other than WinSCP. "
				},
				{
				name:"displayTime &#x2192; <a href=\"#IVirtGroupFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DisplayTimeType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DisplayTimeType.serverTime",
				description:"Format of the time sent to the client in the SFTP \"long name\" field.\n\nSFTP encodes file time information in binary, using the UTC time zone, and this is used properly by most clients. Normal SFTP file times are not affected by this setting.\n\nHowever, some clients - including OpenSSH, and PuTTY's PSFTP - rely on information in the SFTP \"long name\" field. The \"long name\" field is interpreted by the client as a Unix-like directory listing, and may need to contain file times in a format preferred by the client."
				},
				{
				name:"useDefaultMaxPathLength &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not defined differently, whether to use the server-wide maximum path length configured in the Server section of settings, or settings defined here for the group."
				},
				{
				name:"maxPathLength &#x2192; ULONG {get} {set}",
				defaultValue:"default: 3000",
				description:"Paths longer than 259 characters may be inaccessible by many programs on Windows. This was a fundamental limit in very old versions of Windows, so many programs - including Windows components - remain affected by it. The number is determined by the Windows constant MAX_PATH (260) minus 1 character for the null terminator.\n\nOn recent Windows versions, the fundamental maximum path length is around 32*1024 characters. However, not all programs support paths or filenames of such length."
				},
				{
				name:"allowAltStreams &#x2192; <a href=\"#IVirtGroupFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGlobalYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGlobalYesNo.defaultValue",
				description:"Windows supports alternate data streams in filesystems including NTFS (the Windows NT File System) and ReFS (Resilient File System, introduced with Windows Server 2012).\n\nIf clients are allowed to create alternate streams, data written this way may be difficult to detect or validate with many tools. If clients are allowed to read or modify alternate streams, the information in those streams may have special meaning that clients should not be able to read or modify.\n\nNote that control characters in range 0x01-0x1F are valid in names of alternate data streams. This may further complicate detecting and validating alternate stream content depending on tools used. Whether clients are able to create or access alternate data streams containing control characters is influenced by the setting Allow unsafe names."
				},
				{
				name:"allowUnsafeNames &#x2192; <a href=\"#IVirtGroupFileTransfer915\" onclick=\"ScrollToEnum();return false;\">DefaultGlobalYesNo915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.DefaultGlobalYesNo.defaultValue",
				description:"Windows supports creation of files with names that are difficult to access with some tools, including Windows components. Attempting to access files with such names, or even communicating the names, may have unintended side effects.\n\nThe SSH Server treats the following as unsafe Windows file names (case-insensitive): CON, PRN, AUX, NUL, COM[1-9], LPT[1-9], CONIN$, CONOUT$; names ending with space (' ') or dot ('.'); and alternate data streams with characters in range 0x01-0x1F (control characters). Note that control characters above 0x20 (e.g. 0x7F) are valid Windows path characters."
				},
				{
				name:"mountPoints &#x2192; <a href=\"#ISfsMountPoints915\" onclick=\"SetInterface('ISfsMountPoints915', false);return false;\">ISfsMountPoints915</a> {get}",
				description:"Mount points are virtual folders that this user or group has access to. Add one or more virtual folders to configure file access for SCP, SFTP, and FTPS."
				},
				{
				name:"sfsHomeDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"/\"",
				description:"The home directory must correspond to a virtual path inside the above list of mount points. This setting controls the SCP, SFTP, and FTPS initial directory for this user or group.\n\nIf this setting is left empty, the user will initially find themselves at the root of the virtual filesystem tree.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"createSfsHomeDir &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the SSH Server will create the virtual home directory, if it does not yet exist."
				},
				{
				name:"delIncompleteUploads &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, then for members of this group which do not configure this differently, the SSH Server will delete files that were created by the client and were not properly closed by the time the client disconnects or closes the SFTP channel."
				},
				{
				name:"moveCompletedUploads &#x2192; <a href=\"#IMoveCompletedUploads915\" onclick=\"SetInterface('IMoveCompletedUploads915', false);return false;\">IMoveCompletedUploads915</a> {get}",
				description:"If configured, then for members of this group which do not configure this differently, the SSH Server can automatically move files when they are properly closed by a client after uploading.\n\nThe move operation will activate only for mount points backed by the Windows filesystem. These are mount points that use the provider FlowSfsWin."
				},
				{
				name:"onUploadCmd &#x2192; <a href=\"#IConnOnUploadCommand915\" onclick=\"SetInterface('IConnOnUploadCommand915', false);return false;\">IConnOnUploadCommand915</a> {get}",
				description:"If configured, then for members of this group which do not configure this differently, the SSH Server can execute a command after closing a file that has been written to by the client."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IVirtGroupFileTransfer915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"DefaultGlobalYesNo915",
				description:"DefaultGlobalYesNo_defaultValue (0): Use global default<br />DefaultGlobalYesNo_yes (1): Yes<br />DefaultGlobalYesNo_no (2): No"
				},
				{
				name:"DisplayTimeType915",
				description:"DisplayTimeType_serverTimeWithOffset (1): Server local time with offset<br />DisplayTimeType_serverTime (2): Server local time<br />DisplayTimeType_utc (3): UTC"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IVirtGroupSessionSetup915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"logonType &#x2192; <a href=\"#IVirtGroupSessionSetup915\" onclick=\"ScrollToEnum();return false;\">LogonType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.LogonType.network",
				description:"For members of this group whose individual settings are not defined differently, the Windows logon type to use.\n\nThe 'Interactive' logon type grants the logon session the same Windows permissions as when the Windows account that provides the security context is logged on locally at the server's keyboard. Login with this logon type will fail if the Windows account does not have the right to 'Log on locally' configured in Windows security policy that applies to the server computer. This right is normally granted to all users in a default Windows configuration, but on a domain controller it is granted only to administrators.\n\nThe 'Network' logon type requires the Windows account to have the right to 'Access this computer from the network', but it does not require 'Log on locally'. Network logon will work well on most Windows installations, except outdated Windows Server versions where interactive logon is required to use cmd.exe and other command line tools. On those servers, unrestricted terminal shell access will not work with the 'Network' logon type, but file transfer and tunneling will function.\n\nThe 'Batch' logon type requires the Windows account to have the right to 'Log on as batch job'. Windows grants this by default to Administrators, Backup Operators and Performance Log Users. The Windows Task Scheduler uses this logon type for tasks that run when no user is logged on. This logon type may allow programs to run which do not run correctly under 'Network' or 'Interactive'.\n\nRecommendation: 'Network' is the suggested logon type for all current Windows versions. For users who require unrestricted terminal shell access, you may set logon type to 'Interactive'. Set the logon type to 'Batch' if the program you're trying to run does not run otherwise.\n\nNote: When using the Kerberos or NTLM authentication methods, Windows does not provide a way for the SSH Server to use the 'Interactive' logon type. When logging in with Kerberos or NTLM, Windows will behave as if the 'Network' logon type was used."
				},
				{
				name:"onAccountInfoFailure &#x2192; <a href=\"#IVirtGroupSessionSetup915\" onclick=\"ScrollToEnum();return false;\">OnAccountInfoFailure915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.OnAccountInfoFailure.restrictAccess",
				description:"For members of this group whose individual settings are not defined differently, the action the SSH Server should take if the SSH Server has been able to create a logon session, but Windows reports an error obtaining Windows account information.\n\nIt is possible that the SSH Server can log a user in successfully, but Windows reports an error when attempting to obtain account information, such as the location of the user's profile directory. This can create undesired outcomes, or even security risks, if your configuration depends on environment variables such as %HOME% to be set correctly.\n\nIn most environments, the setting Disable access to child processes is sufficient to mitigate such risks. If an error occurs, file transfer, terminal, and exec requests will not function, but port forwarding will work.\n\nIf this is set to Disable Windows profile loading, then if there is an account info failure, file transfer and BvShell may continue to work, but environment variables may be set to different values than expected. Terminal and exec requests will not function because the user's Windows profile will not be loaded.\n\nIf this is set to No restrictions, then if there is an account info failure, and the SSH Server needs to load the user's Windows profile, it will attempt to load it with a null profile path. If this succeeds, all functionality will continue to be available, but the Windows profile may be loaded differently than expected, and related environment variables may be set to different values than expected."
				},
				{
				name:"ifTemporaryProfileLoaded &#x2192; <a href=\"#IVirtGroupSessionSetup915\" onclick=\"ScrollToEnum();return false;\">IfTemporaryProfileLoaded915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.IfTemporaryProfileLoaded.treatAsFailure",
				description:"For members of this group whose individual settings are not defined differently, the action the SSH Server should take if a temporary Windows profile is loaded.\n\nCertain settings will cause the SSH Server to load the Windows profile for the user's logon session. Profile loading is performed by Windows and can fail. If the intended Windows profile cannot be loaded, Windows might load a temporary profile instead. The temporary profile may contain different settings and environment variables than the intended Windows profile. This may cause the SSH connection to behave differently than intended.\n\nWith Treat as failure, a temporary profile is treated as if the profile failed to load. Actions which require a Windows profile to be loaded will not succeed. This includes, for example, terminal shell access (when not using BvShell), or synchronization with authorized_keys.\n\nWith No restrictions, a temporary profile will be treated as if the intended profile was successfully loaded. Actions which depend on the Windows profile to be loaded will succeed, but could have different outcomes than intended."
				},
				{
				name:"useGlobalWinSessionStgs &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"For members of this group whose individual settings are not configured differently, whether to use server-wide Windows session settings configured under Server > Sessions, or the settings defined here for the group."
				},
				{
				name:"winSessionSharing &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"Whether multiple connections from the same user can share the same Windows session. When connections share a Windows session, actions performed by one connection may affect others. For example, when one connection maps a Windows file share, the same share becomes accessible to other connections in the same Windows session. If one connection disconnects a share, that share stops being available to other connections. A connection which does not require a Windows profile to be loaded may run inside a Windows session in which the Windows profile is loaded, if it was loaded previously by another connection.\n\nConnections that log in as separate accounts - Windows or virtual - cannot share the same Windows session. If SSH Server settings change in a way that affects Windows session initialization, subsequent connections will receive a new Windows session."
				},
				{
				name:"winSessionKeepAliveSecs &#x2192; ULONG {get} {set}",
				defaultValue:"default: 600",
				description:"The number of seconds a Windows session stays cached after the last connection which was using the Windows session disconnects."
				},
				{
				name:"maxWinSessionAgeHours &#x2192; ULONG {get} {set}",
				defaultValue:"default: 768",
				description:"After a Windows session was created, the maximum number of hours it can continue to be reused. After this time expires, the Windows session will be closed, and a new one will be created when the next connection needs it."
				},
				{
				name:"windowsFileShareSettings &#x2192; <a href=\"#INetworkShareVirtGroupSettings915\" onclick=\"SetInterface('INetworkShareVirtGroupSettings915', false);return false;\">INetworkShareVirtGroupSettings915</a> {get}",
				description:"Settings in this group control how to handle connections to Windows file shares: whether to map a remote home directory; whether to map remembered shares; and what to do if file share connections fail."
				},
				{
				name:"shares &#x2192; <a href=\"#IFileShares915\" onclick=\"SetInterface('IFileShares915', false);return false;\">IFileShares915</a> {get}",
				description:"A list of shared folders on other computers in the local network that the SSH Server should establish connections to when members of this group log in."
				},
				{
				name:"windowsOnLogonCmd &#x2192; <a href=\"#IWinOnLogonCommand915\" onclick=\"SetInterface('IWinOnLogonCommand915', false);return false;\">IWinOnLogonCommand915</a> {get}",
				description:"If configured, then for members of this group whose individual settings are not configured differently, this command will be run when a Windows session is initialized for the user.\n\nIf Windows session sharing is enabled, then a Windows session will be initialized when a user first connects and authenticates. Subsequent connections from the same user may reuse the same Windows session. When a Windows session is reused, the Windows on-logon command is not run in that session again.\n\nIf Windows session sharing is disabled, then a new Windows session is initialized for each connection where the user authenticates. In this case, the Windows on-logon command runs before the per-connection On-logon command, if one is configured.\n\nThe Windows on-logon command is suitable to initialize resources which should be available to all connections from the same user. For example, this command is suitable to map a network drive."
				},
				{
				name:"windowsOnLogoffCmd &#x2192; <a href=\"#IWinOnLogoffCommand915\" onclick=\"SetInterface('IWinOnLogoffCommand915', false);return false;\">IWinOnLogoffCommand915</a> {get}",
				description:"If configured, then for members of this group whose individual settings are not configured differently, this command will be run when a Windows session is dismissed for the user.\n\nIf Windows session sharing is enabled, a single Windows session can be used for one or more, or many connections from the same user. A Windows session gets dismissed when the user has been disconnected for a configurable amount of time. A Windows session also gets dismissed when it has been around for a configurable maximum time; or when certain user settings change in a way that requires the SSH Server to initialize a new Windows session.\n\nIf Windows session sharing is disabled, then a new Windows session is initialized for each connection where the user authenticates, and dismissed when the user disconnects. In this case, the Windows on-logoff command runs after the On-disconnect command, if one is configured.\n"
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IVirtGroupSessionSetup915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"IfTemporaryProfileLoaded915",
				description:"IfTemporaryProfileLoaded_treatAsFailure (1): Treat as failure<br />IfTemporaryProfileLoaded_noRestrict (2): No restrictions"
				},
				{
				name:"LogonType915",
				description:"LogonType_interactive (1): Interactive<br />LogonType_network (2): Network<br />LogonType_batch (3): Batch"
				},
				{
				name:"OnAccountInfoFailure915",
				description:"OnAccountInfoFailure_denyLogin (1): Deny login<br />OnAccountInfoFailure_restrictAccess (2): Disable access to child processes<br />OnAccountInfoFailure_disableProfile (3): Disable Windows profile loading<br />OnAccountInfoFailure_noRestrict (4): No restrictions"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IVirtGroups915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IVirtGroup915\" onclick=\"SetInterface('IVirtGroup915', false);return false;\">IVirtGroup915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IVirtGroup915\" onclick=\"SetInterface('IVirtGroup915', false);return false;\">IVirtGroup915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IVirtGroups915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IVirtGroup915\" onclick=\"SetInterface('IVirtGroup915', false);return false;\">IVirtGroup915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IVirtGroups915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IVirtGroup915\" onclick=\"SetInterface('IVirtGroup915', false);return false;\">IVirtGroup915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IVirtGroup915\" onclick=\"SetInterface('IVirtGroup915', false);return false;\">IVirtGroup915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IVirtGroup915\" onclick=\"SetInterface('IVirtGroup915', false);return false;\">IVirtGroup915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IVirtGroup915\" onclick=\"SetInterface('IVirtGroup915', false);return false;\">IVirtGroup915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IVirtGroup915\" onclick=\"SetInterface('IVirtGroup915', false);return false;\">IVirtGroup915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IVirtGroup915\" onclick=\"SetInterface('IVirtGroup915', false);return false;\">IVirtGroup915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IVirtualGroupWhitelist915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IVirtualGroupWhitelistEntry915\" onclick=\"SetInterface('IVirtualGroupWhitelistEntry915', false);return false;\">IVirtualGroupWhitelistEntry915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IVirtualGroupWhitelistEntry915\" onclick=\"SetInterface('IVirtualGroupWhitelistEntry915', false);return false;\">IVirtualGroupWhitelistEntry915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IVirtualGroupWhitelist915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IVirtualGroupWhitelistEntry915\" onclick=\"SetInterface('IVirtualGroupWhitelistEntry915', false);return false;\">IVirtualGroupWhitelistEntry915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IVirtualGroupWhitelist915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IVirtualGroupWhitelistEntry915\" onclick=\"SetInterface('IVirtualGroupWhitelistEntry915', false);return false;\">IVirtualGroupWhitelistEntry915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IVirtualGroupWhitelistEntry915\" onclick=\"SetInterface('IVirtualGroupWhitelistEntry915', false);return false;\">IVirtualGroupWhitelistEntry915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IVirtualGroupWhitelistEntry915\" onclick=\"SetInterface('IVirtualGroupWhitelistEntry915', false);return false;\">IVirtualGroupWhitelistEntry915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IVirtualGroupWhitelistEntry915\" onclick=\"SetInterface('IVirtualGroupWhitelistEntry915', false);return false;\">IVirtualGroupWhitelistEntry915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IVirtualGroupWhitelistEntry915\" onclick=\"SetInterface('IVirtualGroupWhitelistEntry915', false);return false;\">IVirtualGroupWhitelistEntry915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IVirtualGroupWhitelistEntry915\" onclick=\"SetInterface('IVirtualGroupWhitelistEntry915', false);return false;\">IVirtualGroupWhitelistEntry915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IVirtualGroupWhitelistEntry915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! group &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The name of a virtual group configured in SSH Server settings. Whitelisting the virtual group allows users who are granted delegated administration rights to create or edit virtual accounts that derive settings from this group.",
				values:"Has to be the name of a configured virtual group."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IVirtualGroupWhitelistEntry915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IWhitelistAddress915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				flag:3,
				name:"&#155; ! addressType &#x2192; <a href=\"#IWhitelistAddress915\" onclick=\"ScrollToEnum();return false;\">WhitelistAddressType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.WhitelistAddressType.ipv4",
				description:"Type of address to match."
				},
				{
				name:"desc &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"An optional comment describing this address."
				},
				{
				flag:3,
				name:"&#155; ! ipv4range &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to specify a single IPv4 address, or a range of addresses."
				},
				{
				flag:3,
				name:"&#155; ! ipv4 &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"0.0.0.0\"",
				description:"The IPv4 address to match."
				},
				{
				flag:3,
				name:"&#155; ! ipv4start &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"0.0.0.0\"",
				description:"The beginning of the IPv4 address range to match (inclusive)."
				},
				{
				flag:3,
				name:"&#155; ! ipv4end &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"0.0.0.0\"",
				description:"The end of the IPv4 address range to match (inclusive). Must be greater than \"Start IPv4 address\"."
				},
				{
				flag:3,
				name:"&#155; ! ipv6range &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"Whether to specify a single IPv6 address, or a range of addresses."
				},
				{
				flag:3,
				name:"&#155; ! ipv6 &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"::\"",
				description:"The IPv6 address match."
				},
				{
				flag:3,
				name:"&#155; ! ipv6start &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"::\"",
				description:"The beginning of the IPv6 address range to match (inclusive)."
				},
				{
				flag:3,
				name:"&#155; ! ipv6end &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"::\"",
				description:"The end of the IPv6 address range to match (inclusive). Must be greater than \"Start IPv6 address\"."
				},
				{
				flag:3,
				name:"&#155; ! locationType &#x2192; <a href=\"#IWhitelistAddress915\" onclick=\"ScrollToEnum();return false;\">LocationType915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.LocationType.country",
				description:"Type of location an IP address must originate from, in order to match this rule."
				},
				{
				flag:3,
				name:"&#155; ! countryName &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Match any IP address originating from this country.",
				values:"Must match one of the listed country names."
				},
				{
				flag:3,
				name:"&#155; ! continentName &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"Match any IP address originating from this continent.",
				values:"Must match one of the listed continent names."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IWhitelistAddress915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			flags:
			[
				{
				description:"Members flagged '&#155;' are part of sort order."
				},
				{
				description:"Members flagged '!' are part of unique constraint."
				}
			],
			enums:
			[
				{
				name:"LocationType915",
				description:"LocationType_country (0): Country<br />LocationType_continent (1): Continent"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				},
				{
				name:"WhitelistAddressType915",
				description:"WhitelistAddressType_ipv4 (0): IPv4<br />WhitelistAddressType_ipv6 (1): IPv6<br />WhitelistAddressType_location (4): Any IP from a country or continent"
				}
			]
			},
			{
			name:"IWhitelistedAddresses915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IWhitelistAddress915\" onclick=\"SetInterface('IWhitelistAddress915', false);return false;\">IWhitelistAddress915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IWhitelistAddress915\" onclick=\"SetInterface('IWhitelistAddress915', false);return false;\">IWhitelistAddress915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list. If the new entry has not yet been accessed or a previous new entry has just been committed or cleared, a new entry with a unique id is created."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IWhitelistedAddresses915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IWhitelistAddress915\" onclick=\"SetInterface('IWhitelistAddress915', false);return false;\">IWhitelistAddress915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Sort ()",
				description:"Sorts the list. Call this after modifying any member fields that affect sort order."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IWhitelistedAddresses915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IWhitelistAddress915\" onclick=\"SetInterface('IWhitelistAddress915', false);return false;\">IWhitelistAddress915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IWhitelistAddress915\" onclick=\"SetInterface('IWhitelistAddress915', false);return false;\">IWhitelistAddress915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IWhitelistAddress915\" onclick=\"SetInterface('IWhitelistAddress915', false);return false;\">IWhitelistAddress915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IWhitelistAddress915\" onclick=\"SetInterface('IWhitelistAddress915', false);return false;\">IWhitelistAddress915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IWhitelistAddress915\" onclick=\"SetInterface('IWhitelistAddress915', false);return false;\">IWhitelistAddress915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IWhitelistAddress915\" onclick=\"SetInterface('IWhitelistAddress915', false);return false;\">IWhitelistAddress915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IWinAccounts915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IAccount915\" onclick=\"SetInterface('IAccount915', false);return false;\">IAccount915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IAccount915\" onclick=\"SetInterface('IAccount915', false);return false;\">IAccount915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IWinAccounts915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IAccount915\" onclick=\"SetInterface('IAccount915', false);return false;\">IAccount915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Move (ULONG indexFrom, ULONG indexTo)",
				description:"Moves the entry with the specified zero-based index to the new location within the list."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IWinAccounts915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IAccount915\" onclick=\"SetInterface('IAccount915', false);return false;\">IAccount915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IAccount915\" onclick=\"SetInterface('IAccount915', false);return false;\">IAccount915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IAccount915\" onclick=\"SetInterface('IAccount915', false);return false;\">IAccount915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IAccount915\" onclick=\"SetInterface('IAccount915', false);return false;\">IAccount915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IAccount915\" onclick=\"SetInterface('IAccount915', false);return false;\">IAccount915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IAccount915\" onclick=\"SetInterface('IAccount915', false);return false;\">IAccount915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IWinGroups915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"count &#x2192; ULONG {get}",
				description:"Returns the number of list entries."
				},
				{
				name:"entries &#x2192; SAFEARRAY(<a href=\"#IGroup915\" onclick=\"SetInterface('IGroup915', false);return false;\">IGroup915</a>) {get}",
				description:"Allows enumeration of list entries and access to entries by index."
				},
				{
				name:"new &#x2192; <a href=\"#IGroup915\" onclick=\"SetInterface('IGroup915', false);return false;\">IGroup915</a> {get}",
				description:"Accesses a new entry that has not yet been added to the list."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IWinGroups915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				},
				{
				name:"Clear ()",
				description:"Removes all entries, implies NewClear()."
				},
				{
				name:"GetItem (ULONG index) &#x2192; <a href=\"#IGroup915\" onclick=\"SetInterface('IGroup915', false);return false;\">IGroup915</a>",
				description:"Accesses the entry with the specified zero-based index."
				},
				{
				name:"Erase (ULONG index)",
				description:"Removes the entry with the specified zero-based index."
				},
				{
				name:"Move (ULONG indexFrom, ULONG indexTo)",
				description:"Moves the entry with the specified zero-based index to the new location within the list."
				},
				{
				name:"NewClear ()",
				description:"Clears the entry referenced with 'new'."
				},
				{
				name:"NewCommit ()",
				description:"Commits the entry referenced with 'new' into the list."
				},
				{
				names:
				[
					"ImportCsv (BSTR separator, BSTR csvData)",
					"TryImportCsv (BSTR separator, BSTR csvData) &#x2192; <a href=\"#IImportCsvResult915\" onclick=\"SetInterface('IImportCsvResult915', false);return false;\">IImportCsvResult915</a>"
				],
				description:"Imports entries from a CSV list. The 'Try' version of this function returns a result with properties including the number of imported lines, processed lines, and duplicate entries.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"csvData: A string with textual instance type settings."
					}
				]
				},
				{
				name:"ExportCsv (BSTR separator, <a href=\"#IWinGroups915\" onclick=\"ScrollToEnum();return false;\">CsvColumnNames915</a> columnNames) &#x2192; BSTR",
				description:"Exports list entries into a CSV-formatted string.",
				parameters:
				[
					{
					parameter:"separator: 1-3 characters that separate CSV fields. For example, a comma."
					},
					{
					parameter:"columnNames: whether to include friendly, scriptable, or no column names."
					}
				]
				},
				{
				names:
				[
					"FirstWhere(BSTR expression) &#x2192; <a href=\"#IGroup915\" onclick=\"SetInterface('IGroup915', false);return false;\">IGroup915</a>",
					"FirstWhere1(BSTR expression, BSTR arg1) &#x2192; <a href=\"#IGroup915\" onclick=\"SetInterface('IGroup915', false);return false;\">IGroup915</a>",
					"...",
					"FirstWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; <a href=\"#IGroup915\" onclick=\"SetInterface('IGroup915', false);return false;\">IGroup915</a>"
				],
				description:"Returns the first entry in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"FirstWhere(\"not any auth.keys\")"
					},
					{
					example:"FirstWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"AllWhere(BSTR expression) &#x2192; SAFEARRAY(<a href=\"#IGroup915\" onclick=\"SetInterface('IGroup915', false);return false;\">IGroup915</a>)",
					"AllWhere1(BSTR expression, BSTR arg1) &#x2192; SAFEARRAY(<a href=\"#IGroup915\" onclick=\"SetInterface('IGroup915', false);return false;\">IGroup915</a>)",
					"...",
					"AllWhere9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; SAFEARRAY(<a href=\"#IGroup915\" onclick=\"SetInterface('IGroup915', false);return false;\">IGroup915</a>)"
				],
				description:"Returns all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"AllWhere(\"not any auth.keys\")"
					},
					{
					example:"AllWhere1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				},
				{
				names:
				[
					"EraseAll(BSTR expression) &#x2192; ULONG",
					"EraseAll1(BSTR expression, BSTR arg1) &#x2192; ULONG",
					"...",
					"EraseAll9(BSTR expression, BSTR arg1, BSTR arg2, BSTR arg3, BSTR arg4, BSTR arg5, BSTR arg6, BSTR arg7, BSTR arg8, BSTR arg9) &#x2192; ULONG"
				],
				description:"Removes all entries in the list for which the provided expression is true.",
				parameters:
				[
					{
					parameter:"expression: the expression to evaluate. See $cfg.helpExpr (<a href=\"#IBssCfg915\" onclick=\"SetInterface('IBssCfg915', false);return false;\">IBssCfg915</a>) for details."
					},
					{
					parameter:"arg1: parameter for the expression."
					},
					{
					parameter:"..."
					},
					{
					parameter:"arg9: parameter for the expression."
					}
				],
				examples:
				[
					{
					example:"EraseAll(\"not any auth.keys\")"
					},
					{
					example:"EraseAll1(\"winAccount eq ?\", \"AccountName\")"
					}
				]
				}
			],
			enums:
			[
				{
				name:"CsvColumnNames915",
				description:"CsvColumnNames_doNotInclude (0): Do not include<br />CsvColumnNames_friendlyNames (1): Include friendly names<br />CsvColumnNames_scriptableNames (2): Include scriptable names"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IWinOnLogoffCommand915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"command &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The command to execute.\n\nThe command needs to invoke a Windows executable - such as a program, or a shell. To run a script, prefix it with the name of the shell that needs to run it. To invoke a PowerShell script, enter it like: \"PowerShell C:\\Path\\Script.ps1\" (without the quotes). The invoke a Command Prompt batch file (or command), enter it like: \"cmd /c C:\\Path\\Batch.cmd\".\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"workDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The working directory in which the command will be executed.\n\nIf an empty string is supplied, then if the command is being executed in the logged on user's context, the user's initial terminal shell directory will be used. Otherwise - if the command is being executed in service context - the SSH Server's installation directory will be used.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"execAsService &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the command will be executed in service context with global access. If disabled, the command will be executed in the logged-on user's context, with the logged-on user's security permissions."
				},
				{
				name:"loadProfile &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the logged-on user's profile will be loaded for the execution of the command.\n\nLoading the Windows profile causes the user's Windows registry hive to become available. It also makes it possible to use the user's environment variables in SSH Server settings that support environment variable expansion (%VARIABLE% syntax).\n\nFrequent loading and unloading of Windows profiles can cause a profile to break and should be avoided if possible.\n\nA Windows profile can be loaded by other settings, and may already be loaded if Windows session sharing is enabled: https://www.bitvise.com/ssh-server-usage-faq#Q260"
				},
				{
				name:"maxWaitTime &#x2192; ULONG {get} {set}",
				defaultValue:"default: 300",
				description:"If set to a non-zero value, the SSH Server will wait up to this number of seconds for the command to complete before proceeding. If the command doesn't complete in the configured time, it will be scheduled to be terminated. If set to 9999, the server will wait indefinitely."
				},
				{
				name:"jobObject &#x2192; <a href=\"#IWinOnLogoffCommand915\" onclick=\"ScrollToEnum();return false;\">JobObject915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.JobObject.noBreakaway",
				description:"Whether the command should be insulated using a job object. A job object ensures that when the command completes, all processes started by the command are also terminated. This means that processes will be abruptly ended if they are still running after the command completes.\n\nProcesses created by the command can be permitted to break away from the job object, so they can continue to run after the task completes. In this case, processes can still be ended abruptly for other reasons. For example, processes may terminate when their terminal console window closes, or when the Windows logon session associated with the command logs off.\n\nIf you wish to run a process that persists, it does not require job breakaway. You can use the Windows Task Scheduler to configure a Windows task which you can run by name. Then, run the task as follows:\n\nschtasks /run /tn NameOfTask\n\nIf you wish to use job breakaway, you can start such a child process using the bvRun utility with flags \"-brj -new\" or \"-brj -det\". You can also use a Windows function such as CreateProcess while passing the flag CREATE_BREAKAWAY_FROM_JOB, and perhaps also CREATE_NEW_CONSOLE or DETACHED_PROCESS."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IWinOnLogoffCommand915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"JobObject915",
				description:"JobObject_doNotUse (0): Do not use job object<br />JobObject_noBreakaway (1): Use job object, no breakaway<br />JobObject_allowBreakaway (2): Use job object, allow breakaway"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IWinOnLogoffCommandWithDefault915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"useDefault &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the settings here configured will be ignored, and the SSH Server will use the settings configured for the group associated with this user."
				},
				{
				name:"command &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The command to execute.\n\nThe command needs to invoke a Windows executable - such as a program, or a shell. To run a script, prefix it with the name of the shell that needs to run it. To invoke a PowerShell script, enter it like: \"PowerShell C:\\Path\\Script.ps1\" (without the quotes). The invoke a Command Prompt batch file (or command), enter it like: \"cmd /c C:\\Path\\Batch.cmd\".\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"workDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The working directory in which the command will be executed.\n\nIf an empty string is supplied, then if the command is being executed in the logged on user's context, the user's initial terminal shell directory will be used. Otherwise - if the command is being executed in service context - the SSH Server's installation directory will be used.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"execAsService &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the command will be executed in service context with global access. If disabled, the command will be executed in the logged-on user's context, with the logged-on user's security permissions."
				},
				{
				name:"loadProfile &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the logged-on user's profile will be loaded for the execution of the command.\n\nLoading the Windows profile causes the user's Windows registry hive to become available. It also makes it possible to use the user's environment variables in SSH Server settings that support environment variable expansion (%VARIABLE% syntax).\n\nFrequent loading and unloading of Windows profiles can cause a profile to break and should be avoided if possible.\n\nA Windows profile can be loaded by other settings, and may already be loaded if Windows session sharing is enabled: https://www.bitvise.com/ssh-server-usage-faq#Q260"
				},
				{
				name:"maxWaitTime &#x2192; ULONG {get} {set}",
				defaultValue:"default: 300",
				description:"If set to a non-zero value, the SSH Server will wait up to this number of seconds for the command to complete before proceeding. If the command doesn't complete in the configured time, it will be scheduled to be terminated. If set to 9999, the server will wait indefinitely."
				},
				{
				name:"jobObject &#x2192; <a href=\"#IWinOnLogoffCommandWithDefault915\" onclick=\"ScrollToEnum();return false;\">JobObject915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.JobObject.noBreakaway",
				description:"Whether the command should be insulated using a job object. A job object ensures that when the command completes, all processes started by the command are also terminated. This means that processes will be abruptly ended if they are still running after the command completes.\n\nProcesses created by the command can be permitted to break away from the job object, so they can continue to run after the task completes. In this case, processes can still be ended abruptly for other reasons. For example, processes may terminate when their terminal console window closes, or when the Windows logon session associated with the command logs off.\n\nIf you wish to run a process that persists, it does not require job breakaway. You can use the Windows Task Scheduler to configure a Windows task which you can run by name. Then, run the task as follows:\n\nschtasks /run /tn NameOfTask\n\nIf you wish to use job breakaway, you can start such a child process using the bvRun utility with flags \"-brj -new\" or \"-brj -det\". You can also use a Windows function such as CreateProcess while passing the flag CREATE_BREAKAWAY_FROM_JOB, and perhaps also CREATE_NEW_CONSOLE or DETACHED_PROCESS."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IWinOnLogoffCommandWithDefault915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"JobObject915",
				description:"JobObject_doNotUse (0): Do not use job object<br />JobObject_noBreakaway (1): Use job object, no breakaway<br />JobObject_allowBreakaway (2): Use job object, allow breakaway"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IWinOnLogonCommand915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"command &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The command to execute.\n\nThe command needs to invoke a Windows executable - such as a program, or a shell. To run a script, prefix it with the name of the shell that needs to run it. To invoke a PowerShell script, enter it like: \"PowerShell C:\\Path\\Script.ps1\" (without the quotes). The invoke a Command Prompt batch file (or command), enter it like: \"cmd /c C:\\Path\\Batch.cmd\".\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"workDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The working directory in which the command will be executed.\n\nIf an empty string is supplied, then if the command is being executed in the logged on user's context, the user's initial terminal shell directory will be used. Otherwise - if the command is being executed in service context - the SSH Server's installation directory will be used.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"execAsService &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the command will be executed in service context with global access. If disabled, the command will be executed in the logged-on user's context, with the logged-on user's security permissions."
				},
				{
				name:"loadProfile &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the logged-on user's profile will be loaded for the execution of the command.\n\nLoading the Windows profile causes the user's Windows registry hive to become available. It also makes it possible to use the user's environment variables in SSH Server settings that support environment variable expansion (%VARIABLE% syntax).\n\nFrequent loading and unloading of Windows profiles can cause a profile to break and should be avoided if possible.\n\nA Windows profile can be loaded by other settings, and may already be loaded if Windows session sharing is enabled: https://www.bitvise.com/ssh-server-usage-faq#Q260"
				},
				{
				name:"maxWaitTime &#x2192; ULONG {get} {set}",
				defaultValue:"default: 300",
				description:"If set to a non-zero value, the SSH Server will wait up to this number of seconds for the command to complete before proceeding. If the command doesn't complete in the configured time, it will be scheduled to be terminated. If set to 9999, the server will wait indefinitely."
				},
				{
				name:"jobObject &#x2192; <a href=\"#IWinOnLogonCommand915\" onclick=\"ScrollToEnum();return false;\">JobObject915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.JobObject.noBreakaway",
				description:"Whether the command should be insulated using a job object. A job object ensures that when the command completes, all processes started by the command are also terminated. This means that processes will be abruptly ended if they are still running after the command completes.\n\nProcesses created by the command can be permitted to break away from the job object, so they can continue to run after the task completes. In this case, processes can still be ended abruptly for other reasons. For example, processes may terminate when their terminal console window closes, or when the Windows logon session associated with the command logs off.\n\nIf you wish to run a process that persists, it does not require job breakaway. You can use the Windows Task Scheduler to configure a Windows task which you can run by name. Then, run the task as follows:\n\nschtasks /run /tn NameOfTask\n\nIf you wish to use job breakaway, you can start such a child process using the bvRun utility with flags \"-brj -new\" or \"-brj -det\". You can also use a Windows function such as CreateProcess while passing the flag CREATE_BREAKAWAY_FROM_JOB, and perhaps also CREATE_NEW_CONSOLE or DETACHED_PROCESS."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IWinOnLogonCommand915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"JobObject915",
				description:"JobObject_doNotUse (0): Do not use job object<br />JobObject_noBreakaway (1): Use job object, no breakaway<br />JobObject_allowBreakaway (2): Use job object, allow breakaway"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IWinOnLogonCommandWithDefault915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"useDefault &#x2192; BOOL {get} {set}",
				defaultValue:"default: $true",
				description:"If enabled, the settings here configured will be ignored, and the SSH Server will use the settings configured for the group associated with this user."
				},
				{
				name:"command &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The command to execute.\n\nThe command needs to invoke a Windows executable - such as a program, or a shell. To run a script, prefix it with the name of the shell that needs to run it. To invoke a PowerShell script, enter it like: \"PowerShell C:\\Path\\Script.ps1\" (without the quotes). The invoke a Command Prompt batch file (or command), enter it like: \"cmd /c C:\\Path\\Batch.cmd\".\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"workDir &#x2192; BSTR {get} {set}",
				defaultValue:"default: \"\"",
				description:"The working directory in which the command will be executed.\n\nIf an empty string is supplied, then if the command is being executed in the logged on user's context, the user's initial terminal shell directory will be used. Otherwise - if the command is being executed in service context - the SSH Server's installation directory will be used.\n\nThis field supports environment variable expansion. See: https://www.bitvise.com/ssh-server-guide-env"
				},
				{
				name:"execAsService &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the command will be executed in service context with global access. If disabled, the command will be executed in the logged-on user's context, with the logged-on user's security permissions."
				},
				{
				name:"loadProfile &#x2192; BOOL {get} {set}",
				defaultValue:"default: $false",
				description:"If enabled, the logged-on user's profile will be loaded for the execution of the command.\n\nLoading the Windows profile causes the user's Windows registry hive to become available. It also makes it possible to use the user's environment variables in SSH Server settings that support environment variable expansion (%VARIABLE% syntax).\n\nFrequent loading and unloading of Windows profiles can cause a profile to break and should be avoided if possible.\n\nA Windows profile can be loaded by other settings, and may already be loaded if Windows session sharing is enabled: https://www.bitvise.com/ssh-server-usage-faq#Q260"
				},
				{
				name:"maxWaitTime &#x2192; ULONG {get} {set}",
				defaultValue:"default: 300",
				description:"If set to a non-zero value, the SSH Server will wait up to this number of seconds for the command to complete before proceeding. If the command doesn't complete in the configured time, it will be scheduled to be terminated. If set to 9999, the server will wait indefinitely."
				},
				{
				name:"jobObject &#x2192; <a href=\"#IWinOnLogonCommandWithDefault915\" onclick=\"ScrollToEnum();return false;\">JobObject915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.JobObject.noBreakaway",
				description:"Whether the command should be insulated using a job object. A job object ensures that when the command completes, all processes started by the command are also terminated. This means that processes will be abruptly ended if they are still running after the command completes.\n\nProcesses created by the command can be permitted to break away from the job object, so they can continue to run after the task completes. In this case, processes can still be ended abruptly for other reasons. For example, processes may terminate when their terminal console window closes, or when the Windows logon session associated with the command logs off.\n\nIf you wish to run a process that persists, it does not require job breakaway. You can use the Windows Task Scheduler to configure a Windows task which you can run by name. Then, run the task as follows:\n\nschtasks /run /tn NameOfTask\n\nIf you wish to use job breakaway, you can start such a child process using the bvRun utility with flags \"-brj -new\" or \"-brj -det\". You can also use a Windows function such as CreateProcess while passing the flag CREATE_BREAKAWAY_FROM_JOB, and perhaps also CREATE_NEW_CONSOLE or DETACHED_PROCESS."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IWinOnLogonCommandWithDefault915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"JobObject915",
				description:"JobObject_doNotUse (0): Do not use job object<br />JobObject_noBreakaway (1): Use job object, no breakaway<br />JobObject_allowBreakaway (2): Use job object, allow breakaway"
				},
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				}
			]
			},
			{
			name:"IWindowsFirewall915",
			properties:
			[
				{
				name:"help &#x2192; BSTR {get}",
				description:"Returns a short description of the interface and its members."
				},
				{
				name:"sshPortsFirewallSetting &#x2192; <a href=\"#IWindowsFirewall915\" onclick=\"ScrollToEnum();return false;\">WindowsFirewallSetting915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.WindowsFirewallSetting.subnetScope",
				description:"Whether the SSH Server should add exceptions to the Windows Firewall to allow incoming SSH connections. If set to one of the Open ports settings, Windows Firewall rules will be created when the SSH Server starts up, and removed when it shuts down."
				},
				{
				name:"forwardedPortsFirewallSetting &#x2192; <a href=\"#IWindowsFirewall915\" onclick=\"ScrollToEnum();return false;\">WindowsFirewallSetting915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.WindowsFirewallSetting.subnetScope",
				description:"Whether the SSH Server should add exceptions to the Windows Firewall to allow incoming connections to SSH forwarded ports. If set to one of the Open ports settings, Windows Firewall rules will be created for each new server-to-client port forwarding, and removed when the port forwarding ends, or when the SSH Server shuts down."
				},
				{
				name:"ftpPortsFirewallSetting &#x2192; <a href=\"#IWindowsFirewall915\" onclick=\"ScrollToEnum();return false;\">WindowsFirewallSetting915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.WindowsFirewallSetting.subnetScope",
				description:"Whether the SSH Server should add exceptions to the Windows Firewall to allow incoming FTP control and passive-mode data connections. If set to one of the Open ports settings, Windows Firewall rules will be added when the SSH Server starts, and removed when it shuts down."
				},
				{
				name:"upnpPortsFirewallSetting &#x2192; <a href=\"#IWindowsFirewall915\" onclick=\"ScrollToEnum();return false;\">WindowsFirewallSetting915</a> {get} {set}",
				defaultValue:"default: $cfg.enums.WindowsFirewallSetting.subnetScope",
				description:"Whether the SSH Server should add exceptions to the Windows Firewall to allow incoming connections from routers and gateways required for automatic configuration via UPnP. If set to one of the Open ports settings, Windows Firewall rules will be added when the SSH Server starts, and removed when it shuts down."
				}
			],
			methods:
			[
				{
				name:"Dump () &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy."
				},
				{
				name:"DumpEx (<a href=\"#IWindowsFirewall915\" onclick=\"ScrollToEnum();return false;\">ShowDefaults915</a> showDefaults) &#x2192; BSTR",
				description:"Returns a PowerShell script with the current values of the whole hierarchy.",
				parameters:
				[
					{
					parameter:"showDefaults: if set to yes, default values are returned."
					}
				]
				},
				{
				name:"SetDefaults ()",
				description:"Will reset the whole hierarchy to defaults."
				}
			],
			enums:
			[
				{
				name:"ShowDefaults915",
				description:"ShowDefaults_no: 0<br />ShowDefaults_yes: 1"
				},
				{
				name:"WindowsFirewallSetting915",
				description:"WindowsFirewallSetting_dontChange (1): Do not change Windows Firewall settings<br />WindowsFirewallSetting_subnetScope (2): Open port(s) to local network (subnet scope, non-Public profiles only)<br />WindowsFirewallSetting_subnetScopeAllProfiles (4): Open port(s) to local network (all firewall profiles)"
				}
			]
			}
		];

		// Function definitions

		function GetInterfaceName() {
			try {
				var name = location.hash.substring(1);
				if (name.length)
					return name;
			}
			catch (err)
			{}

			return "";
		}

		function GetParagraphStart(flag) {
			var title = "";
			if (flag && flag != 0) {
				title = " title=\"Part of ";
				if (flag & 1)
					title += "sort order";
				if (flag & 2) {
					if (flag & 1)
						title += " and ";
					title += "unique constraint";
				}
				title += ".\"";
			}

			return "<p class=\"name\"" + title + ">";
		}

		function DescribeArray(array, title, classId) {
			var result = "";
			if (!array)
				return result;

			if (title)
				result += "<h2 class=\"" + classId + "\">" + title + "</h2>\n";

			result += "<ul class=\"" + classId + "\">";
			for (var i = 0; i < array.length; i++) {
				result += "<li>";
				if (array[i].name)
					result += GetParagraphStart(array[i].flag) + "<b>" + array[i].name + "</b></p>";
				if (array[i].names) {
					result += GetParagraphStart(array[i].flag) + "<b>";
					for (var j = 0; j < array[i].names.length; j++)
						result += array[i].names[j] + "<br />";
					result += "</b></p>";
				}
				if (array[i].defaultValue)
					result += "<p class=\"defaultValue\">" + array[i].defaultValue + "</p>";
				if (array[i].description)
					result += "<p class=\"description\">" + array[i].description + "</p>";
				if (array[i].values) {
					result += "<h3>" + g_valuesTitle + "</h3>\n";
					result += "<ul><li><p class=\"restrictedValues\">" + array[i].values + "</p></li></ul>";
				}
				if (array[i].parameters) {
					result += "<h3>" + g_parametersTitle + "</h3>\n";
					result += DescribeArray(array[i].parameters);
				}
				if (array[i].parameter)
					result += "<p class=\"parameter\">" + array[i].parameter + "</p>";
				if (array[i].examples) {
					if (array[i].examples.length == 1)
						result += "<h3>" + g_exampleTitle + "</h3>\n";
					else
						result += "<h3>" + g_examplesTitle + "</h3>\n";
					result += DescribeArray(array[i].examples);
				}
				if (array[i].example)
					result += "<p class=\"example\">" + array[i].example + "</p>";
				if (array[i].output) {
					result += "<p class=\"outputTitle\">" + g_outputTitle + "</p>\n";
					result += "<p class=\"output\">" + array[i].output + "</p>";
				}
				result += "</li>";
			}
			result += "</ul>";

			return result;
		}

		function ScrollToEnum() {
			try {
				var enumElements = document.getElementsByClassName("enums");
				if (enumElements.length)
					enumElements[0].scrollIntoView(true);
			}
			catch (err) {
			}
		}

		function ShowInterface(interfaceName) {
			try {
				for (var i = 0; i < g_interfaces.length; i++) {
					if (g_interfaces[i].name == interfaceName) {
						var content = "<h1>" + g_interfaces[i].name + "</h1>\n";
						content += DescribeArray(g_interfaces[i].properties, g_propertiesTitle, "properties");
						content += DescribeArray(g_interfaces[i].methods, g_methodsTitle, "methods");
						content += DescribeArray(g_interfaces[i].enums, g_enumsTitle, "enums");
						content += DescribeArray(g_interfaces[i].bssCfgManipEnums, g_enumsTitle, "bssCfgManipEnums");
						content += DescribeArray(g_interfaces[i].flags, g_flagsTitle, "flags");

						document.getElementById("section").innerHTML = content;
						g_currInderfaceName = g_interfaces[i].name;

						// Scroll to top
						document.body.scrollTop = 0; // For Safari
						document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera
						break;
					}
				}
			}
			catch (err) {
			}
		}

		function SetInterface(interfaceName, replace) {
			if (g_currInderfaceName == interfaceName)
				return;

			var newLocation = location.protocol + "//" + location.host + location.pathname + "#" + interfaceName;
			try {
				if (replace)
					history.replaceState({ interfaceName: interfaceName }, null, newLocation);
				else
					history.pushState({ interfaceName: interfaceName }, null, newLocation);
			} catch (err) {
				location.hash = interfaceName;
			}

			ShowInterface(interfaceName);
		}

		// Entry point

		var links = "<h1>Interfaces</h1>";
		for (i = 0; i < g_interfaces.length; i++) {
			links += "<a href=\"#" + g_interfaces[i].name + "\" onclick=\"SetInterface('" + g_interfaces[i].name + "', false);return false;\">" + g_interfaces[i].name + "</a><br>\n";
		}
		document.getElementById("nav").innerHTML = links;

		var interfaceName = GetInterfaceName();
		if (interfaceName)
			ShowInterface(interfaceName);
		else
			SetInterface("IBssCfg915", true);

		// Event handlers

		if ('onpopstate' in window) {
			window.onpopstate = function (event) {
				var state = event.state;
				if (state) {
					SetInterface(state.interfaceName, true);
				}
				else {
					ShowInterface(GetInterfaceName());
				}
			};
		}
		else {
			// If 'onpopstate' is not available 'onhahschange' is used
			window.onhashchange = function () {
				ShowInterface(GetInterfaceName());
			};
		}

	</script>
</body>
</html>

